[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"* This is a brownfield project done by Computer Science students from NUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"* It is named `InterNUS` because it was created for NUS students to manage their internship applications and contacts.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"* For the detailed documentation of this project, see the **[InterNUS Product Website](https://ay2223s1-cs2103t-f11-1.github.io/tp/)**.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"* This project is based on the AddressBook Level-3 project by the [**SE-EDU** initiative](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ish1506":7,"-":3}},{"path":"config/checkstyle/suppressions.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE suppressions PUBLIC","lastModifiedDate":"2017-08-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/suppressions_1_2.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003csuppressions\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Main\\.java\"/\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Main\\.java\"/\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/suppressions\u003e","lastModifiedDate":"2017-08-20"}],"authorContributionMap":{"ish1506":2,"-":10}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"### Lee I-Shiuan","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"\u003cimg src\u003d\"images/ish1506.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"[[github](http://github.com/ish1506)]","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"[[portfolio](team/ish1506.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"### Tan Xuan Yun","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"\u003cimg src\u003d\"images/tanxuanyun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"[[github](http://github.com/tanxuanyun)]","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"[[portfolio](team/tanxuanyun.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"* Role: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"* Responsibilities: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"### Lee Cheng Da","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"\u003cimg src\u003d\"images/chengda300.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"[[github](http://github.com/chengda300)] [[portfolio](team/chengda300.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"* Responsibilities: Feature enhancements","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"LiuFangrui"},"content":"### Liu Fangrui","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"LiuFangrui"},"content":"\u003cimg src\u003d\"images/liufangrui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"LiuFangrui"},"content":"[[github](http://github.com/liufangrui)]","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"LiuFangrui"},"content":"[[portfolio](team/liufangrui.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"LiuFangrui"},"content":"* Role: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"LiuFangrui"},"content":"* Responsibilities: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"### Ng Qi Ting","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"\u003cimg src\u003d\"images/nqt230.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"[[github](http://github.com/nqt230)]","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"[[portfolio](team/nqt230.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanxuanyun":6,"ish1506":5,"chengda300":4,"nqt230":4,"-":34,"LiuFangrui":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"nqt230"},"content":"* Can type fast","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"nqt230"},"content":"* Have some experience with Command Line Interfaces","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"nqt230"},"content":"* Are actively seeking internship opportunities","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"nqt230"},"content":"* Having trouble keeping track of multiple internship applications and their progress (over multiple rounds)","lastModifiedDate":"2022-09-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":266,"author":{"gitId":"nqt230"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-30"},{"lineNumber":267,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":268,"author":{"gitId":"nqt230"},"content":"* Keep track of multiple company contacts and applications’ progress simultaneously (the reply rates from companies are very low)","lastModifiedDate":"2022-09-30"},{"lineNumber":269,"author":{"gitId":"nqt230"},"content":"* Keep track of colleagues information post-internship","lastModifiedDate":"2022-09-30"},{"lineNumber":270,"author":{"gitId":"nqt230"},"content":"* Keeping track of internship application windows of multiple companies","lastModifiedDate":"2022-09-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                                             | So that I can…​                                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"nqt230"},"content":"|----------|------------------|----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":279,"author":{"gitId":"nqt230"},"content":"| * * *    | First time user  | I can see a summary of commands                                                                          | I can know the functionalities of the app quickly                                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":280,"author":{"gitId":"nqt230"},"content":"| * * *    | First time user  | I can delete internship status                                                                           | so that I know that I have finished my interview process with the company                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"nqt230"},"content":"| * * *    | First time user  | I can see suggested information I need to fill in while I\u0027m adding a contact                             | I don\u0027t have to keep referring to the help page to know the information I can add (email, company etc) |","lastModifiedDate":"2022-09-30"},{"lineNumber":282,"author":{"gitId":"nqt230"},"content":"| * * *    | Second time user | I can pre-load my data from the previous session                                                         | I do not need to re-add everyone again                                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":283,"author":{"gitId":"nqt230"},"content":"| * * *    | Second time user | I can purge all current data                                                                             | I can get rid of sample contacts I used for exploring the app                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":284,"author":{"gitId":"nqt230"},"content":"| * * *    | Lazy user        | search contacts by groups or tags                                                                        | I do not need to manually filter them                                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":285,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can edit contacts                                                                                      | I do not need to delete and re-add to fix a typo error                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":286,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | delete contacts individually                                                                             |                                                                                                        |","lastModifiedDate":"2022-09-30"},{"lineNumber":287,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | add the company name to each contact                                                                     | I know which company the contact is representing                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":288,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | navigate the address book easily                                                                         | using the address book should not be a headache by itself                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":289,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can sort contact by interview status                                                                   | so that I can know which company interview I can prepare for                                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":290,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can sort contact by interview date                                                                     | so that I can know when to prepare for interview                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":291,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can see a reminder of the next upcoming interview on the homescreen                                    | so that I know the upcoming interview without opening the address book                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":292,"author":{"gitId":"nqt230"},"content":"| * *      | First time user  | I can view user guide                                                                                    | so that I can know all the functions                                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":293,"author":{"gitId":"nqt230"},"content":"| * *      | First time user  | I can see the app populated with sample contacts                                                         | I can easily see how the app will look like when it is in use                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":294,"author":{"gitId":"nqt230"},"content":"| * *      | Second time user | see tips suggesting shortcuts or shortforms                                                              | I can potentially achieve faster commands and actions                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":295,"author":{"gitId":"nqt230"},"content":"| * *      | Second time user | see a summary of the internship information I have keyed in so far on starting the app                   | I can know where I left off from the last time I used the app                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":296,"author":{"gitId":"nqt230"},"content":"| * *      | Forgetful user   | search contacts by the time it was added                                                                 | I can figure out whom I added at that time                                                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":297,"author":{"gitId":"nqt230"},"content":"| * *      | Expert user      | Create tags with different priorities                                                                    | Sort contacts by priority                                                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":298,"author":{"gitId":"nqt230"},"content":"| * *      | Expert user      | Mass import contacts directly                                                                            | Use the app on another device                                                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":299,"author":{"gitId":"nqt230"},"content":"| * *      | Expert user      | Mass edit contacts (e.g. find and replace/set)                                                           | Set common information amongst groups of contacts quickly                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":300,"author":{"gitId":"nqt230"},"content":"| * *      | User             | archive contacts                                                                                         | I know which internships I\u0027ve been rejected from                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":301,"author":{"gitId":"nqt230"},"content":"| * *      | User             | Add colors to tags and contacts                                                                          | Distinguish between contacts easier in the GUI                                                         |","lastModifiedDate":"2022-09-30"},{"lineNumber":302,"author":{"gitId":"nqt230"},"content":"| * *      | User             | I can purge all interview status                                                                         | so that I can still save all contact after I have found a job                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":303,"author":{"gitId":"nqt230"},"content":"| *        | First time user  | I can update the application process attached to a company (application date, round1, interview dates..) | I can see my progress for the internships                                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":304,"author":{"gitId":"nqt230"},"content":"| *        | Lazy user        | Leaving halfway when inputting contact information saves it as draft and lets me continue from last time | I dont lose my progress when accidentally leaving or can leave temporarily to work on it next time     |","lastModifiedDate":"2022-09-30"},{"lineNumber":305,"author":{"gitId":"nqt230"},"content":"| *        | Forgetful user   | I can sort the companies by upcoming interview dates                                                     | I can see a clear timeline and prevent clashing dates                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":306,"author":{"gitId":"nqt230"},"content":"| *        | Expert user      | Create email templates per company                                                                       | Easily draft up internship application emails                                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":307,"author":{"gitId":"nqt230"},"content":"| *        | User             | add job roles to each contact                                                                            | I know which role I\u0027m contacting that particular person for (front-end, back-end etc)                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":308,"author":{"gitId":"nqt230"},"content":"| *        | User             | Personalize GUI colors and color themes (light mode, dark mode etc.)                                     | Make the app more visually appealing                                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"nqt230"},"content":"(For all use cases below, the **System** is the `InterNUS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":315,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":316,"author":{"gitId":"nqt230"},"content":"**Use case: UC1 - Delete a person**","lastModifiedDate":"2022-09-30"},{"lineNumber":317,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":318,"author":{"gitId":"nqt230"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":319,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":320,"author":{"gitId":"nqt230"},"content":"1.  User requests to list persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":321,"author":{"gitId":"nqt230"},"content":"2.  InterNUS shows a list of persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":322,"author":{"gitId":"nqt230"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":323,"author":{"gitId":"nqt230"},"content":"4.  InterNUS deletes the person.","lastModifiedDate":"2022-09-30"},{"lineNumber":324,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":325,"author":{"gitId":"nqt230"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":326,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":327,"author":{"gitId":"nqt230"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":328,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":329,"author":{"gitId":"nqt230"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":330,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":331,"author":{"gitId":"nqt230"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":332,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":333,"author":{"gitId":"nqt230"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":334,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"nqt230"},"content":"    * 3a1. InterNUS shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":336,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":337,"author":{"gitId":"nqt230"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":339,"author":{"gitId":"nqt230"},"content":"* 3b. The person found at the index is a contact person for an internship","lastModifiedDate":"2022-09-30"},{"lineNumber":340,"author":{"gitId":"nqt230"},"content":"    * 3b1. InterNUS looks up the affected internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":341,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"nqt230"},"content":"    * 3b2. InterNUS removes the contact person from the internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":343,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":344,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2022-09-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":346,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":347,"author":{"gitId":"nqt230"},"content":"**Use case: UC2 - Delete an internship**","lastModifiedDate":"2022-09-30"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":351,"author":{"gitId":"nqt230"},"content":"1.  User requests to list internships.","lastModifiedDate":"2022-09-30"},{"lineNumber":352,"author":{"gitId":"nqt230"},"content":"2.  InterNUS shows a list of internships.","lastModifiedDate":"2022-09-30"},{"lineNumber":353,"author":{"gitId":"nqt230"},"content":"3.  User requests to delete a specific internship in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":354,"author":{"gitId":"nqt230"},"content":"4.  InterNUS deletes the internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":366,"author":{"gitId":"nqt230"},"content":"    * 3a1. InterNUS shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":367,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":368,"author":{"gitId":"nqt230"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":369,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":370,"author":{"gitId":"nqt230"},"content":"* 3b. The internship found at the index is associated with a person.","lastModifiedDate":"2022-09-30"},{"lineNumber":371,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":372,"author":{"gitId":"nqt230"},"content":"    * 3b1. InterNUS looks up the affected person.","lastModifiedDate":"2022-09-30"},{"lineNumber":373,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":374,"author":{"gitId":"nqt230"},"content":"    * 3b2. InterNUS removes the internship from the person.","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":376,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2022-09-30"},{"lineNumber":377,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":379,"author":{"gitId":"nqt230"},"content":"**Use case: UC3 - Add a contact person to an internship**","lastModifiedDate":"2022-09-30"},{"lineNumber":380,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":381,"author":{"gitId":"nqt230"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":382,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":383,"author":{"gitId":"nqt230"},"content":"1. User adds an internship to the internship list","lastModifiedDate":"2022-09-30"},{"lineNumber":384,"author":{"gitId":"nqt230"},"content":"2. InterNUS creates a new internship entry","lastModifiedDate":"2022-09-30"},{"lineNumber":385,"author":{"gitId":"nqt230"},"content":"3. User adds a person to the contact list","lastModifiedDate":"2022-09-30"},{"lineNumber":386,"author":{"gitId":"nqt230"},"content":"4. InterNUS creates a new person contact","lastModifiedDate":"2022-09-30"},{"lineNumber":387,"author":{"gitId":"nqt230"},"content":"5. User requests to set a specific person as the contact person for a specific internship","lastModifiedDate":"2022-09-30"},{"lineNumber":388,"author":{"gitId":"nqt230"},"content":"6. InterNUS sets the person as the contact person for the internship","lastModifiedDate":"2022-09-30"},{"lineNumber":389,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":390,"author":{"gitId":"nqt230"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":391,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":392,"author":{"gitId":"nqt230"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":393,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":394,"author":{"gitId":"nqt230"},"content":"* 1a. The desired internship to set the contact person for is already in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":395,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":396,"author":{"gitId":"nqt230"},"content":"    * 1a1. No new internship is created.","lastModifiedDate":"2022-09-30"},{"lineNumber":397,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":398,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":399,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":400,"author":{"gitId":"nqt230"},"content":"* 3a. The desired person to set as the contact person is already in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":401,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":402,"author":{"gitId":"nqt230"},"content":"    * 3a1. No new person is created.","lastModifiedDate":"2022-09-30"},{"lineNumber":403,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":404,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2022-09-30"},{"lineNumber":405,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"nqt230"},"content":"**Use case: UC4 - Add an interview date for an internship**","lastModifiedDate":"2022-09-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"nqt230"},"content":"1. User adds an internship to the internship list.","lastModifiedDate":"2022-09-30"},{"lineNumber":412,"author":{"gitId":"nqt230"},"content":"2. InterNUS creates a new internship entry.","lastModifiedDate":"2022-09-30"},{"lineNumber":413,"author":{"gitId":"nqt230"},"content":"3. User requests to set the interview date of a specific internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":414,"author":{"gitId":"nqt230"},"content":"4. InterNUS sets the interview date for the internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"nqt230"},"content":"* 1a. The desired internship to set the interview date for is already in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"nqt230"},"content":"    * 1a1. No new internship is created.","lastModifiedDate":"2022-09-30"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"nqt230"},"content":"* 3a. The interview date given is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"nqt230"},"content":"    * 3a1. InterNUS notifies the user why the given date is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":429,"author":{"gitId":"nqt230"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":430,"author":{"gitId":"nqt230"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"tanxuanyun"},"content":"2. Should be able to hold up to 1000 persons and 1000 internships without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":439,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"tanxuanyun"},"content":"4. A user will not be able to communicate with the people in the contact. ","lastModifiedDate":"2022-09-29"},{"lineNumber":441,"author":{"gitId":"tanxuanyun"},"content":"5. A user will not be able to share contacts with others.","lastModifiedDate":"2022-09-29"},{"lineNumber":442,"author":{"gitId":"tanxuanyun"},"content":"6. Should work only for single user.","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"tanxuanyun"},"content":"7. The data should be stored in a human editable text file","lastModifiedDate":"2022-09-29"},{"lineNumber":444,"author":{"gitId":"tanxuanyun"},"content":"8. The GUI should work well for standard screen resolutions 1920x1080 and higher and for screen scales 100% and 125%. ","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"tanxuanyun"},"content":"9. The GUI should be usable for resolutions 1280x720 and higher and for screen scales 150%.","lastModifiedDate":"2022-09-29"},{"lineNumber":446,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanxuanyun":8,"nqt230":137,"-":361}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"InterNUS is a desktop app for **managing internship applications, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"1. Download the latest `internus.jar` from [here](https://github.com/AY2223S1-CS2103T-F11-1/tp/releases).","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your app.","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"Displays a list of commands and a link to the user guide.","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"`Screen shot to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"### Adding a person: `addp`","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"Adds a person to InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"Format: `addp n/NAME e/EMAIL [p/PHONE_NUMBER] [i/INTERNSHIP] [t/TAG]…​`","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"A person can have any number of tags (including 0). Phone number is optional, and internship is optional too.","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"* `addp n/John Doe e/johnd@example.com p/98765432 i/Shopee_Front End Engineer`","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"* `addp n/Betsy Crowe t/friend e/betsycrowe@example.com`","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"### Adding an Internship: `addi`","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"Adds an Internship to InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"Format: `addi c/COMPANY_NAME r/ROLE s/STATUS [d/DATE_OF_INTERVIEW]…​`","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"Date of interview can be left blank, since it is possible that an interview is not scheduled yet.","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"* `addi n/TikTok r/Data Engineer s/rejected`","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"* `addi n/Grab r/Full Stack Developer s/awaiting interview d/2020-12-20`","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"chengda300"},"content":"### Listing all persons : `list -p`","lastModifiedDate":"2022-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"chengda300"},"content":"Shows a list of all persons in InterNUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"chengda300"},"content":"Format: `list -p`","lastModifiedDate":"2022-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"chengda300"},"content":"### Listing all internships : `list -i`","lastModifiedDate":"2022-09-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"chengda300"},"content":"Shows a list of all internships in InterNUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"chengda300"},"content":"Format: `list -i`","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"chengda300"},"content":"### Editing a person or internship : `edit`","lastModifiedDate":"2022-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"chengda300"},"content":"Edits an existing person or internship in InterNUS, depending on the type of list currently displayed in InterNUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":108,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":109,"author":{"gitId":"chengda300"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-09-27"},{"lineNumber":110,"author":{"gitId":"chengda300"},"content":"- Edits the person or internship at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-09-27"},{"lineNumber":111,"author":{"gitId":"chengda300"},"content":"- Existing values will be updated to the input values. However, compulsory fields when adding the person or internship cannot be edited to be empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":112,"author":{"gitId":"chengda300"},"content":"- When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-09-27"},{"lineNumber":113,"author":{"gitId":"chengda300"},"content":"- You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-09-27"},{"lineNumber":114,"author":{"gitId":"chengda300"},"content":"- You can remove the person’s phone number or internship associated with the person by typing `p/` or `i/` without specifying any text after it, respectively.","lastModifiedDate":"2022-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"chengda300"},"content":"- `list -p` followed by `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-09-27"},{"lineNumber":117,"author":{"gitId":"chengda300"},"content":"- `list -p` followed by `edit 2 n/Betsy Crower t/ p/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags, as well as deleting the phone number associated with the person, without deleting the internship associated with the person.","lastModifiedDate":"2022-09-27"},{"lineNumber":118,"author":{"gitId":"chengda300"},"content":"- `list -i` followed by `edit 2 s/Rejected d/` Edits the status of the 2nd internship to `Rejected` and deletes the date of interview.","lastModifiedDate":"2022-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"### Locating persons by name : `find -p`","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"Format: `find -p KEYWORD`","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"- The search is case-insensitive. e.g **hans** will match **Hans**","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"- Only the person name is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"- Partial words will be matched e.g. **Han** will match **Hans**","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"- `find -p John` returns **john** and **John Doe**","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"### Locating internships by name : `find -i`","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"Finds internships whose names contain any of the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"Format: `find -i KEYWORD`","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"- The search is case-insensitive. e.g **abc pte ltd_software engineer** will match **ABC Pte Ltd_Software Engineer**","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"- Only the internship name is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"- Partial words will be matched e.g. **ltd** will match **XYZ Ltd_Full Stack**","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"- `find -i` **Shopee** returns **Shopee_Front End Engineer** and **Shopee_Full Stack**","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"- `find -i` **Shopee_Front** returns **Shopee_Front End Engineer**","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"- `find -i` **Back End** returns **ByteDance_Back End Engineer** and **Google_Back End Engineer**","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"LiuFangrui"},"content":"### Deleting a person or internship by index : `delete`","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"LiuFangrui"},"content":"Deletes the specified person or internship from InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"LiuFangrui"},"content":"* Deletes the person or internship with the specific `INDEX` in the currently displayed list.","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"LiuFangrui"},"content":"* The index refers to the index number shown in the currently displayed list.","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"LiuFangrui"},"content":"* `list -i` followed by `delete 2` deletes the 2nd internship in InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"LiuFangrui"},"content":"* `find -p Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"LiuFangrui"},"content":"Clears all entries from InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"ish1506"},"content":"InterNUS data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"ish1506"},"content":"InterNUS data is saved as a JSON file. `[JAR file location]`/data/addressbook.json.","lastModifiedDate":"2022-09-27"},{"lineNumber":182,"author":{"gitId":"ish1506"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":185,"author":{"gitId":"ish1506"},"content":"If your changes to the data file makes its format invalid, InterNUS will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"| Action     | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"nqt230"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"nqt230"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"nqt230"},"content":"| **Clear**  | `clear`                                                                                                                                                               |","lastModifiedDate":"2022-09-30"},{"lineNumber":207,"author":{"gitId":"nqt230"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":208,"author":{"gitId":"nqt230"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":209,"author":{"gitId":"nqt230"},"content":"| **Find**   | `find -i/p KEYWORD`\u003cbr\u003e e.g., `find -p James Jake`, `find -i frontend engineer`                                                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":210,"author":{"gitId":"nqt230"},"content":"| **List**   | `list`                                                                                                                                                                |","lastModifiedDate":"2022-09-30"},{"lineNumber":211,"author":{"gitId":"nqt230"},"content":"| **Help**   | `help`                                                                                                                                                                |","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"tanxuanyun":20,"chengda300":20,"ish1506":4,"nqt230":29,"-":131,"LiuFangrui":7}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"title: InterNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-F11-1/tp/branch/master/graph/badge.svg?token\u003d850AJ9TRYH)](https://codecov.io/gh/AY2223S1-CS2103T-F11-1/tp)","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ish1506":2,"-":17}},{"path":"docs/team/chengda300.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"title: Lee Cheng Da\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchengda300)","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"  * About Us:","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"    * Added my own details","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"chengda300":16}},{"path":"docs/team/ish1506.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"title: Lee I-Shiuan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dish1506\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"    * PRs reviewed (with non-trivial review comments): ([to be added soon]())","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ish1506":39}},{"path":"docs/team/liufangrui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LiuFangrui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"LiuFangrui"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"LiuFangrui"},"content":"title: Liu Fangrui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"LiuFangrui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"LiuFangrui"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"LiuFangrui"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"LiuFangrui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"LiuFangrui"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"LiuFangrui"},"content":"  * What it does: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"LiuFangrui"},"content":"  * Justification: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"LiuFangrui"},"content":"  * Highlights: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"LiuFangrui"},"content":"  * Credits: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"LiuFangrui"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"LiuFangrui"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dliufangrui\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"LiuFangrui"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"LiuFangrui"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"LiuFangrui"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"LiuFangrui"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"LiuFangrui"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"LiuFangrui"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"LiuFangrui"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"LiuFangrui"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"LiuFangrui"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"LiuFangrui":38}},{"path":"docs/team/nqt230.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"title: Ng Qi Ting\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dnqt230\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    * PRs reviewed (with non-trivial review comments): ([to be added soon]())","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"nqt230":41}},{"path":"docs/team/tanxuanyun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"title: Tan Xuan Yun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"InterNUS is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"  * What it does: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"  * Justification: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"  * Highlights: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dtanxuanyun\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"  * PRs reviewed (with non-trivial review comments): ([to be added soon]())","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"tanxuanyun":38,"nqt230":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"    public static final String MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX \u003d \"The internship index provided is invalid\";","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"    public static final String MESSAGE_INTERNSHIPS_LISTED_OVERVIEW \u003d \"%1$d internships listed!\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ish1506":1,"chengda300":1,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ish1506"},"content":"     * Returns an unmodifiable view of the filtered list of internships","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chengda300":3,"ish1506":7,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"chengda300"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"chengda300"},"content":"        return model.getFilteredInternshipList();","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chengda300":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddInternshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINK_INDEX;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":" * Adds an internship to the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"public class AddInternshipCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    public static final String COMMAND_WORD \u003d \"addi\";","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a internship to the address book. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"            + PREFIX_COMPANY_NAME + \"COMPANY_NAME \"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_ROLE + \"INTERNSHIP_ROLE \"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_STATUS + \"INTERNSHIP_STATUS \"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            + \"[\" + PREFIX_INTERVIEW_DATE + \"INTERVIEW_DATE] \"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            + \"[\" + PREFIX_LINK_INDEX + \"LINK_INDEX]\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            + PREFIX_COMPANY_NAME + \"Google \"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_ROLE + \"Frontend Engineer \"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_STATUS + \"PENDING \"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERVIEW_DATE + \"2022-10-21 12:00 \"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"            + PREFIX_LINK_INDEX + \"1 \";","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship added: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the address book\";","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    private final CompanyName companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    private final InternshipRole internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    private final InternshipStatus internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"    private final PersonId contactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    private final InterviewDate interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    private final Index linkIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add the specified {@code Internship}","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"    public AddInternshipCommand(Internship internship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d internship.getCompanyName();","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internship.getInternshipRole();","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internship.getInternshipStatus();","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d internship.getContactPersonId();","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d internship.getInterviewDate();","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        this.linkIndex \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add a {@code Internship} with the specified","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"     * {@code name}, {@code phone}, {@code email}, {@code address},","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"     * {@code internshipId}, and {@code tags}.","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"    public AddInternshipCommand(","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"            CompanyName companyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            InternshipRole internshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"            InternshipStatus internshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"            InterviewDate interviewDate,","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"            Index linkIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(companyName, internshipRole, internshipStatus);","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"        // contactPersonId is to be gotten using the linkIndex in this case","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        this.linkIndex \u003d linkIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"        // By default, use the contactPersonId field in the command","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"        PersonId idToLink \u003d contactPersonId;","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"        // If a linkIndex is supplied to the command,","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"        // attempt to find a contactPerson via the provided index in the filtered person list","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"        if (linkIndex !\u003d null \u0026\u0026 linkIndex.getZeroBased() \u003c lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"            Person contactPerson \u003d lastShownList.get(linkIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"            // The person to link to must not already be linked to an internship","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"            if (contactPerson.getInternshipId() \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"                idToLink \u003d contactPerson.getPersonId();","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"        Internship toAdd \u003d new Internship(","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"                new InternshipId(model.getNextInternshipId()),","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                companyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"                internshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"                internshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"                idToLink,","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"                interviewDate","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"        );","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"        if (model.hasInternship(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"        model.addInternship(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"                || (other instanceof AddInternshipCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 companyName.equals(((AddInternshipCommand) other).companyName)","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internshipRole.equals(((AddInternshipCommand) other).internshipRole)","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internshipStatus.equals(((AddInternshipCommand) other).internshipStatus)","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 contactPersonId !\u003d null \u0026\u0026 contactPersonId.equals(((AddInternshipCommand) other).contactPersonId)","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 interviewDate.equals(((AddInternshipCommand) other).interviewDate));","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"nqt230":137}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINK_INDEX;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"tanxuanyun"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"            + PREFIX_TAG + \"owesMoney\"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"            + PREFIX_LINK_INDEX + \"1 \";","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    private final Name name;","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    private final Email email;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    private final InternshipId internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"    private final Index linkIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        this.phone \u003d person.getPhone();","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"        this.email \u003d person.getEmail();","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d person.getInternshipId();","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        this.tags.addAll(person.getTags());","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"        this.linkIndex \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add a {@code Person} with the specified","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"     * {@code name}, {@code phone}, {@code email}, {@code address},","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"     * {@code internshipId}, and {@code tags}.","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"    public AddPersonCommand(","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"            Name name,","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"            Phone phone,","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"            Email email,","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"            Set\u003cTag\u003e tags,","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"tanxuanyun"},"content":"            Index linkIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"        this.internshipId \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"        this.linkIndex \u003d linkIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"tanxuanyun"},"content":"        // By default, use the internshipId field in the command","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"tanxuanyun"},"content":"        InternshipId idToLink \u003d internshipId;","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"tanxuanyun"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"tanxuanyun"},"content":"        if (linkIndex !\u003d null \u0026\u0026 linkIndex.getZeroBased() \u003c lastShownList.size()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"tanxuanyun"},"content":"            Internship internship \u003d lastShownList.get(linkIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"tanxuanyun"},"content":"            if (internship.getContactPersonId() \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"tanxuanyun"},"content":"                idToLink \u003d internship.getInternshipId();","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"tanxuanyun"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"tanxuanyun"},"content":"        Person toAdd \u003d new Person(","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"                new PersonId(model.getNextPersonId()),","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"                name,","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"                phone,","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"                email,","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"tanxuanyun"},"content":"                idToLink,","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"tanxuanyun"},"content":"                tags","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"        );","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand otherCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"        return name.equals(otherCommand.name)","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 phone.equals(otherCommand.phone)","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 email.equals(otherCommand.email)","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 Objects.equals(internshipId, otherCommand.internshipId)","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"tanxuanyun"},"content":"                \u0026\u0026 tags.equals(otherCommand.tags);","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"tanxuanyun":28,"nqt230":112}},{"path":"src/main/java/seedu/address/logic/commands/DeleteInternshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":" * Deletes an internship identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"public class DeleteInternshipCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"    public static final String COMMAND_WORD \u003d \"deletei\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"            + \": Deletes the internship identified by the index number used in the displayed internship list.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"    public static final String MESSAGE_DELETE_INTERNSHIP_SUCCESS \u003d \"Deleted Internship: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"    public DeleteInternshipCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"        List\u003cInternship\u003e lastShownInternshipList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownInternshipList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ish1506"},"content":"        Internship internshipToDelete \u003d lastShownInternshipList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"        model.deleteInternship(internshipToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ish1506"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ish1506"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ish1506"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ish1506"},"content":"                || (other instanceof DeleteInternshipCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ish1506"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteInternshipCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ish1506":54}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"    public static final String COMMAND_WORD \u003d \"deletep\";","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"ish1506"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ish1506"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ish1506":5,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/EditInternshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":" * Edits the details of an existing internship in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"public class EditInternshipCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"    public static final String COMMAND_WORD \u003d \"editi\";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the internship identified \"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"            + \"by the index number used in the displayed internship list. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"            + \"[\" + PREFIX_COMPANY_NAME + \"COMPANY_NAME] \"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"            + \"[\" + PREFIX_INTERNSHIP_ROLE + \"INTERNSHIP_ROLE] \"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"            + \"[\" + PREFIX_INTERNSHIP_STATUS + \"INTERNSHIP_STATUS] \"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ish1506"},"content":"            + \"[\" + PREFIX_INTERVIEW_DATE + \"INTERVIEW_DATE]\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ish1506"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ish1506"},"content":"            + PREFIX_INTERNSHIP_STATUS + \"ACCEPTED \";","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ish1506"},"content":"    public static final String MESSAGE_EDIT_INTERNSHIP_SUCCESS \u003d \"Edited Internship: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ish1506"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ish1506"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the address book.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ish1506"},"content":"    private final Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ish1506"},"content":"    private final EditInternshipDescriptor editInternshipDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ish1506"},"content":"     * @param index of the internship in the filtered internship list to edit","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ish1506"},"content":"     * @param editInternshipDescriptor details to edit the internship with","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ish1506"},"content":"    public EditInternshipCommand(Index index, EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"ish1506"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ish1506"},"content":"        requireNonNull(editInternshipDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ish1506"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"ish1506"},"content":"        this.editInternshipDescriptor \u003d new EditInternshipDescriptor(editInternshipDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ish1506"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ish1506"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"ish1506"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ish1506"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"ish1506"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"ish1506"},"content":"        Internship internshipToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"ish1506"},"content":"        Internship editedInternship \u003d createEditedInternship(internshipToEdit, editInternshipDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"ish1506"},"content":"        if (!internshipToEdit.isSameInternship(editedInternship) \u0026\u0026 model.hasInternship(editedInternship)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"ish1506"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"ish1506"},"content":"        model.setInternship(internshipToEdit, editedInternship);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"ish1506"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"ish1506"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship));","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":85,"author":{"gitId":"ish1506"},"content":"     * Creates and returns a {@code Internship} with the details of {@code internshipToEdit}","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"ish1506"},"content":"     * edited with {@code editInternshipDescriptor}.","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"ish1506"},"content":"    private static Internship createEditedInternship(Internship internshipToEdit,","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"ish1506"},"content":"                                                     EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"ish1506"},"content":"        assert internshipToEdit !\u003d null;","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":92,"author":{"gitId":"ish1506"},"content":"        // internshipId should always be unchanged","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"ish1506"},"content":"        InternshipId internshipId \u003d internshipToEdit.getInternshipId();","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"ish1506"},"content":"        CompanyName updatedCompanyName \u003d editInternshipDescriptor.getCompanyName()","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"ish1506"},"content":"                .orElse(internshipToEdit.getCompanyName());","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"ish1506"},"content":"        InternshipRole updatedInternshipRole \u003d editInternshipDescriptor.getInternshipRole()","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"ish1506"},"content":"                .orElse(internshipToEdit.getInternshipRole());","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"ish1506"},"content":"        InternshipStatus updatedInternshipStatus \u003d editInternshipDescriptor.getInternshipStatus()","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"ish1506"},"content":"                .orElse(internshipToEdit.getInternshipStatus());","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"ish1506"},"content":"        // TODO: Change to support update contact person functionality (`link` command).","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"ish1506"},"content":"        PersonId updatedContactPersonId \u003d internshipToEdit.getContactPersonId();","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"ish1506"},"content":"        InterviewDate updatedInterviewDate \u003d editInternshipDescriptor.getInterviewDate()","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"ish1506"},"content":"                .orElse(internshipToEdit.getInterviewDate());","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"ish1506"},"content":"        return new Internship(","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"ish1506"},"content":"                internshipId,","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"ish1506"},"content":"                updatedCompanyName,","lastModifiedDate":"2022-10-10"},{"lineNumber":109,"author":{"gitId":"ish1506"},"content":"                updatedInternshipRole,","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"ish1506"},"content":"                updatedInternshipStatus,","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"ish1506"},"content":"                updatedContactPersonId,","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"ish1506"},"content":"                updatedInterviewDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"ish1506"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"ish1506"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"ish1506"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"ish1506"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"ish1506"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"ish1506"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"ish1506"},"content":"        if (!(other instanceof EditInternshipCommand)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"ish1506"},"content":"            return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"ish1506"},"content":"        // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"ish1506"},"content":"        EditInternshipCommand e \u003d (EditInternshipCommand) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"ish1506"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"ish1506"},"content":"                \u0026\u0026 editInternshipDescriptor.equals(e.editInternshipDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":134,"author":{"gitId":"ish1506"},"content":"     * Stores the details to edit the internship with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-10"},{"lineNumber":135,"author":{"gitId":"ish1506"},"content":"     * corresponding field value of the internship.","lastModifiedDate":"2022-10-10"},{"lineNumber":136,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"ish1506"},"content":"    public static class EditInternshipDescriptor {","lastModifiedDate":"2022-10-10"},{"lineNumber":138,"author":{"gitId":"ish1506"},"content":"        private CompanyName companyName;","lastModifiedDate":"2022-10-10"},{"lineNumber":139,"author":{"gitId":"ish1506"},"content":"        private InternshipRole internshipRole;","lastModifiedDate":"2022-10-10"},{"lineNumber":140,"author":{"gitId":"ish1506"},"content":"        private InternshipStatus internshipStatus;","lastModifiedDate":"2022-10-10"},{"lineNumber":141,"author":{"gitId":"ish1506"},"content":"        private InterviewDate interviewDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"ish1506"},"content":"        public EditInternshipDescriptor() {}","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"ish1506"},"content":"        /**","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"ish1506"},"content":"         * Copy constructor.","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"ish1506"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"ish1506"},"content":"        public EditInternshipDescriptor(EditInternshipDescriptor toCopy) {","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"ish1506"},"content":"            setCompanyName(toCopy.companyName);","lastModifiedDate":"2022-10-10"},{"lineNumber":150,"author":{"gitId":"ish1506"},"content":"            setInternshipRole(toCopy.internshipRole);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"ish1506"},"content":"            setInternshipStatus(toCopy.internshipStatus);","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"ish1506"},"content":"            setInterviewDate(toCopy.interviewDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"ish1506"},"content":"        /**","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"ish1506"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"ish1506"},"content":"         */","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"ish1506"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-10-10"},{"lineNumber":159,"author":{"gitId":"ish1506"},"content":"            return CollectionUtil.isAnyNonNull(companyName, internshipRole, internshipStatus, interviewDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":160,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"ish1506"},"content":"        public void setCompanyName(CompanyName companyName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"ish1506"},"content":"            this.companyName \u003d companyName;","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":165,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":166,"author":{"gitId":"ish1506"},"content":"        public Optional\u003cCompanyName\u003e getCompanyName() {","lastModifiedDate":"2022-10-10"},{"lineNumber":167,"author":{"gitId":"ish1506"},"content":"            return Optional.ofNullable(companyName);","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":170,"author":{"gitId":"ish1506"},"content":"        public void setInternshipRole(InternshipRole internshipRole) {","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"ish1506"},"content":"            this.internshipRole \u003d internshipRole;","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"ish1506"},"content":"        public Optional\u003cInternshipRole\u003e getInternshipRole() {","lastModifiedDate":"2022-10-10"},{"lineNumber":175,"author":{"gitId":"ish1506"},"content":"            return Optional.ofNullable(internshipRole);","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"ish1506"},"content":"        public void setInternshipStatus(InternshipStatus internshipStatus) {","lastModifiedDate":"2022-10-10"},{"lineNumber":179,"author":{"gitId":"ish1506"},"content":"            this.internshipStatus \u003d internshipStatus;","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"ish1506"},"content":"        public Optional\u003cInternshipStatus\u003e getInternshipStatus() {","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"ish1506"},"content":"            return Optional.ofNullable(internshipStatus);","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"ish1506"},"content":"        public void setInterviewDate(InterviewDate interviewDate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"ish1506"},"content":"            this.interviewDate \u003d interviewDate;","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"ish1506"},"content":"        public Optional\u003cInterviewDate\u003e getInterviewDate() {","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"ish1506"},"content":"            return Optional.ofNullable(interviewDate);","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"ish1506"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"ish1506"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"ish1506"},"content":"            // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"ish1506"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"ish1506"},"content":"                return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"ish1506"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"ish1506"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"ish1506"},"content":"            if (!(other instanceof EditInternshipDescriptor)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"ish1506"},"content":"                return false;","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"ish1506"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":206,"author":{"gitId":"ish1506"},"content":"            // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":207,"author":{"gitId":"ish1506"},"content":"            EditInternshipDescriptor e \u003d (EditInternshipDescriptor) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":208,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":209,"author":{"gitId":"ish1506"},"content":"            return getCompanyName().equals(e.getCompanyName())","lastModifiedDate":"2022-10-10"},{"lineNumber":210,"author":{"gitId":"ish1506"},"content":"                    \u0026\u0026 getInternshipRole().equals(e.getInternshipRole())","lastModifiedDate":"2022-10-10"},{"lineNumber":211,"author":{"gitId":"ish1506"},"content":"                    \u0026\u0026 getInternshipStatus().equals(e.getInternshipStatus())","lastModifiedDate":"2022-10-10"},{"lineNumber":212,"author":{"gitId":"ish1506"},"content":"                    \u0026\u0026 getInterviewDate().equals(e.getInterviewDate());","lastModifiedDate":"2022-10-10"},{"lineNumber":213,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":214,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":215,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ish1506":215}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"    public static final String COMMAND_WORD \u003d \"editp\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"ish1506"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"        // personId should always be unchanged","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        PersonId personId \u003d personToEdit.getPersonId();","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"        InternshipId updatedInternshipId \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"                editPersonDescriptor.getInternshipId().orElse(personToEdit.getInternshipId());","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        return new Person(","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"                personId,","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"                updatedName,","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"                updatedPhone,","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"                updatedEmail,","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                updatedInternshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"tanxuanyun"},"content":"                updatedTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"ish1506"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"        private InternshipId internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"tanxuanyun"},"content":"        private Index linkIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"ish1506"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"nqt230"},"content":"            setInternshipId(toCopy.internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"tanxuanyun"},"content":"            setLinkIndex(toCopy.linkIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"tanxuanyun"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"nqt230"},"content":"        public void setInternshipId(InternshipId internshipId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"nqt230"},"content":"            this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"nqt230"},"content":"        public Optional\u003cInternshipId\u003e getInternshipId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"nqt230"},"content":"            return Optional.ofNullable(internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"tanxuanyun"},"content":"        public void setLinkIndex(Index linkIndex) {","lastModifiedDate":"2022-10-11"},{"lineNumber":219,"author":{"gitId":"tanxuanyun"},"content":"            this.linkIndex \u003d linkIndex;","lastModifiedDate":"2022-10-11"},{"lineNumber":220,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":222,"author":{"gitId":"tanxuanyun"},"content":"        public Optional\u003cIndex\u003e getLinkIndex() {","lastModifiedDate":"2022-10-11"},{"lineNumber":223,"author":{"gitId":"tanxuanyun"},"content":"            return Optional.ofNullable(linkIndex);","lastModifiedDate":"2022-10-11"},{"lineNumber":224,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":225,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"tanxuanyun":12,"ish1506":7,"nqt230":19,"-":209}},{"path":"src/main/java/seedu/address/logic/commands/FindInternshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":" * Finds and lists all internships in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":" * Keyword matching is case insensitive, and only the company name is checked.","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"public class FindInternshipCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"    public static final String COMMAND_WORD \u003d \"findi\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all internships which company names \"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"            + \"contains any of the specified keywords (case-insensitive) and displays them as a list with \"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"            + \"index numbers.\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"            + \"Example: \" + COMMAND_WORD + \" abc pte ltd\";","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"    public FindInternshipCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"        model.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"        return new CommandResult(","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"                String.format(Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW,","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"                        model.getFilteredInternshipList().size()));","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"                || (other instanceof FindInternshipCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"                \u0026\u0026 predicate.equals(((FindInternshipCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":44}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"LiuFangrui"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"LiuFangrui"},"content":"    public static final String COMMAND_WORD \u003d \"findp\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"LiuFangrui"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"LiuFangrui"},"content":"                || (other instanceof FindPersonCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"LiuFangrui"},"content":"                \u0026\u0026 predicate.equals(((FindPersonCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":37,"LiuFangrui":5}},{"path":"src/main/java/seedu/address/logic/commands/ListInternshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":" * Lists all internships in the address book to the user.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"public class ListInternshipCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"    public static final String COMMAND_WORD \u003d \"listi\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all internships\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":23}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"LiuFangrui"},"content":"public class ListPersonCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"LiuFangrui"},"content":"    public static final String COMMAND_WORD \u003d \"listp\";","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":22,"LiuFangrui":2}},{"path":"src/main/java/seedu/address/logic/parser/AddInternshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINK_INDEX;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddInternshipCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"public class AddInternshipCommandParser implements Parser\u003cAddInternshipCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    public AddInternshipCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"                        args,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"                        PREFIX_COMPANY_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"                        PREFIX_INTERNSHIP_ROLE,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"                        PREFIX_INTERNSHIP_STATUS,","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"                        PREFIX_INTERVIEW_DATE,","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"                        PREFIX_LINK_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COMPANY_NAME, PREFIX_INTERNSHIP_ROLE, PREFIX_INTERNSHIP_STATUS)","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInternshipCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"        CompanyName companyName \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                ParserUtil.parseCompanyName(argMultimap.getValue(PREFIX_COMPANY_NAME).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"        InternshipRole internshipRole \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"                ParserUtil.parseInternshipRole(argMultimap.getValue(PREFIX_INTERNSHIP_ROLE).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"        InternshipStatus internshipStatus \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                ParserUtil.parseInternshipStatus(argMultimap.getValue(PREFIX_INTERNSHIP_STATUS).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        String interviewDateStr \u003d argMultimap.getValue(PREFIX_INTERVIEW_DATE).orElse(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        InterviewDate interviewDate \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        if (interviewDateStr !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"            interviewDate \u003d ParserUtil.parseInterviewDate(interviewDateStr);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"        String linkIndexStr \u003d argMultimap.getValue(PREFIX_LINK_INDEX).orElse(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"        Index linkIndex \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        if (linkIndexStr !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"            linkIndex \u003d ParserUtil.parseIndex(linkIndexStr);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        return new AddInternshipCommand(companyName, internshipRole, internshipStatus, interviewDate, linkIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"ish1506":1,"nqt230":75}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINK_INDEX;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"                        args,","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"                        PREFIX_TAG,","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"                        PREFIX_LINK_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"tanxuanyun"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"        String linkIndexStr \u003d argMultimap.getValue(PREFIX_LINK_INDEX).orElse(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"        Index linkIndex \u003d null;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"        if (linkIndexStr !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"            linkIndex \u003d ParserUtil.parseIndex(linkIndexStr);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"        return new AddPersonCommand(name, phone, email, tagList, linkIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"tanxuanyun":16,"ish1506":1,"nqt230":4,"-":47}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddInternshipCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.DeleteInternshipCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditInternshipCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.commands.FindInternshipCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.commands.ListInternshipCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        case AddInternshipCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"            return new AddInternshipCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"ish1506"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ish1506"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"ish1506"},"content":"        case EditInternshipCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ish1506"},"content":"            return new EditInternshipCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ish1506"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ish1506"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"ish1506"},"content":"        case DeleteInternshipCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"ish1506"},"content":"            return new DeleteInternshipCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"LiuFangrui"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"LiuFangrui"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"chengda300"},"content":"        case FindInternshipCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"chengda300"},"content":"            return new FindInternshipCommandParser().parse(arguments);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"LiuFangrui"},"content":"        case ListPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"LiuFangrui"},"content":"            return new ListPersonCommand();","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"chengda300"},"content":"        case ListInternshipCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"chengda300"},"content":"            return new ListInternshipCommand();","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ish1506":13,"chengda300":9,"nqt230":6,"-":64,"LiuFangrui":4}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"ish1506":3,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"ish1506"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"ish1506"},"content":"    private static String extractArgumentValue(String argsString, PrefixPosition currentPrefixPosition,","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"ish1506":2,"-":145}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"    /* Prefix definitions (Person) */","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_PERSON_ID \u003d new Prefix(\"pid/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    /* Prefix definitions (Internship) */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERNSHIP_ID \u003d new Prefix(\"iid/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_COMPANY_NAME \u003d new Prefix(\"c/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERNSHIP_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERNSHIP_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERVIEW_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    /* Prefix definitions (Common) */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_LINK_INDEX \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nqt230":11,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteInternshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.DeleteInternshipCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":" * Parses input arguments and creates a new DeleteInternshipCommandParser object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"public class DeleteInternshipCommandParser implements Parser\u003cDeleteInternshipCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"    public DeleteInternshipCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"            return new DeleteInternshipCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteInternshipCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ish1506":7,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ish1506":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditInternshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditInternshipCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditInternshipCommand.EditInternshipDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":" * Parses input arguments and creates a new EditInternshipCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"public class EditInternshipCommandParser implements Parser\u003cEditInternshipCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"     * Parses the given {@code String} of arguments in the context of the EditInternshipCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"     * and returns an EditInternshipCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"    public EditInternshipCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"                args, PREFIX_COMPANY_NAME, PREFIX_INTERNSHIP_ROLE, PREFIX_INTERNSHIP_STATUS, PREFIX_INTERVIEW_DATE);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"        Index index;","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"        try {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditInternshipCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"ish1506"},"content":"        EditInternshipDescriptor editInternshipDescriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"ish1506"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY_NAME).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"ish1506"},"content":"            editInternshipDescriptor.setCompanyName(","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"                    ParserUtil.parseCompanyName(argMultimap.getValue(PREFIX_COMPANY_NAME).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"ish1506"},"content":"        if (argMultimap.getValue(PREFIX_INTERNSHIP_ROLE).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"ish1506"},"content":"            editInternshipDescriptor.setInternshipRole(","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"ish1506"},"content":"                    ParserUtil.parseInternshipRole(argMultimap.getValue(PREFIX_INTERNSHIP_ROLE).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"ish1506"},"content":"        if (argMultimap.getValue(PREFIX_INTERNSHIP_STATUS).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"ish1506"},"content":"            editInternshipDescriptor.setInternshipStatus(","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"ish1506"},"content":"                    ParserUtil.parseInternshipStatus(argMultimap.getValue(PREFIX_INTERNSHIP_STATUS).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ish1506"},"content":"        if (argMultimap.getValue(PREFIX_INTERVIEW_DATE).isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"ish1506"},"content":"            editInternshipDescriptor.setInterviewDate(","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"ish1506"},"content":"                    ParserUtil.parseInterviewDate(argMultimap.getValue(PREFIX_INTERVIEW_DATE).get()));","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"ish1506"},"content":"        if (!editInternshipDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"ish1506"},"content":"            throw new ParseException(EditInternshipCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"ish1506"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"ish1506"},"content":"        return new EditInternshipCommand(index, editInternshipDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"ish1506"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"ish1506"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"ish1506":66}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"ish1506"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"ish1506"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"ish1506"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ish1506":12,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/FindInternshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.commands.FindInternshipCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":" * Parses input arguments and creates a new FindInternshipCommand object","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"public class FindInternshipCommandParser implements Parser\u003cFindInternshipCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"     * Parses the given {@code String} of arguments in the context of the FindInternshipCommand","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"     * and returns a FindInternshipCommand object for execution.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"    public FindInternshipCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindInternshipCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"        return new FindInternshipCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":32,"ish1506":1}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"LiuFangrui"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"LiuFangrui"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"LiuFangrui"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"LiuFangrui"},"content":"        return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ish1506":1,"-":28,"LiuFangrui":5}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"ish1506":1,"-":16}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    // TODO: Remove this method.","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"tanxuanyun"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"tanxuanyun"},"content":"     * Parses {@code zeroBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"tanxuanyun"},"content":"     * trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"tanxuanyun"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"tanxuanyun"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"tanxuanyun"},"content":"    public static Index parseLinkIndex(String zeroBasedIndex) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"        if (zeroBasedIndex \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"tanxuanyun"},"content":"            return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"        String trimmedIndex \u003d zeroBasedIndex.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"tanxuanyun"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"tanxuanyun"},"content":"        return Index.fromZeroBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String personId} into a {@code PersonId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code personId} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"    public static PersonId parsePersonId(String personId) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"        String trimmedPersonId \u003d personId.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"        if (!PersonId.isValidId(trimmedPersonId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(PersonId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"        return new PersonId(trimmedPersonId);","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"nqt230"},"content":"    // TODO: Remove this method.","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String internshipId} into a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code internshipId} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"nqt230"},"content":"    public static InternshipId parseInternshipId(String internshipId) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"nqt230"},"content":"        if (internshipId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"nqt230"},"content":"        String trimmedInternshipId \u003d internshipId.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"        if (!InternshipId.isValidId(trimmedInternshipId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InternshipId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"        return new InternshipId(trimmedInternshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String companyName} into a {@code CompanyName}.","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code companyName} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"nqt230"},"content":"    public static CompanyName parseCompanyName(String companyName) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"nqt230"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"nqt230"},"content":"        String trimmedCompanyName \u003d companyName.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"nqt230"},"content":"        if (!CompanyName.isValidName(trimmedCompanyName)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"nqt230"},"content":"        return new CompanyName(trimmedCompanyName);","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String internshipRole} into a {@code InternshipRole}.","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code internshipRole} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"nqt230"},"content":"    public static InternshipRole parseInternshipRole(String internshipRole) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internshipRole);","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"nqt230"},"content":"        String trimmedInternshipRole \u003d internshipRole.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"nqt230"},"content":"        if (!InternshipRole.isValidName(trimmedInternshipRole)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InternshipRole.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"nqt230"},"content":"        return new InternshipRole(trimmedInternshipRole);","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String internshipStatus} into a {@code InternshipStatus}.","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code internshipStatus} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"nqt230"},"content":"    public static InternshipStatus parseInternshipStatus(String internshipStatus) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internshipStatus);","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"nqt230"},"content":"        String trimmedInternshipStatus \u003d internshipStatus.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"nqt230"},"content":"        if (!InternshipStatus.isValidStatus(trimmedInternshipStatus)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InternshipStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"nqt230"},"content":"        return new InternshipStatus(InternshipStatus.State.valueOf(trimmedInternshipStatus));","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String interviewDate} into a {@code InterviewDate}.","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code interviewDate} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"nqt230"},"content":"    public static InterviewDate parseInterviewDate(String interviewDate) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"nqt230"},"content":"        requireNonNull(interviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"nqt230"},"content":"        String trimmedInterviewDate \u003d interviewDate.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"nqt230"},"content":"        if (!InterviewDate.isValidDatetimeStr(trimmedInterviewDate)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InterviewDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"nqt230"},"content":"        return new InterviewDate(trimmedInterviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanxuanyun":17,"ish1506":1,"nqt230":102,"-":109}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    // Internal Id counters","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"    private int personIdCounter \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"    private int internshipIdCounter \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    private final UniqueInternshipList internships;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        internships \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        this.internships.setInternships(internships);","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Person.","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Person.","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    public int getNextPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"        return personIdCounter;","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"    public int getNextInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"        return internshipIdCounter;","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"     * Updates the next PersonId to be 1 + the largest PersonId in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"    public void updateNextPersonId() {","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"        for (Person p : persons) {","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"chengda300"},"content":"            if (p.getPersonId().id \u003e personIdCounter) {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"chengda300"},"content":"                personIdCounter \u003d p.getPersonId().id;","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"chengda300"},"content":"        personIdCounter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"     * Updates the next InternshipId to be 1 + the largest InternshipId in the list.","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"    public void updateNextInternshipId() {","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        for (Internship i : internships) {","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"chengda300"},"content":"            if (i.getInternshipId().id \u003e internshipIdCounter) {","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"chengda300"},"content":"                internshipIdCounter \u003d i.getInternshipId().id;","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"chengda300"},"content":"        internshipIdCounter++;","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"        setInternships(newData.getInternshipList());","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"chengda300"},"content":"        personIdCounter \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"chengda300"},"content":"        internshipIdCounter \u003d 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"        return internships.contains(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"    public Person findPersonById(PersonId personId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"        return persons.findById(personId);","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"LiuFangrui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"LiuFangrui"},"content":"    public String findPersonNameById(PersonId personId) {","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"LiuFangrui"},"content":"        Person p \u003d findPersonById(personId);","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"LiuFangrui"},"content":"        return p \u003d\u003d null ? null : p.getName().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"LiuFangrui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"    public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"        return internships.findById(internshipId);","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"LiuFangrui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":152,"author":{"gitId":"LiuFangrui"},"content":"    public String findInternshipNameById(InternshipId internshipId) {","lastModifiedDate":"2022-10-10"},{"lineNumber":153,"author":{"gitId":"LiuFangrui"},"content":"        // TODO: Update getCompanyName to the auto generated Internship Name to be displayed","lastModifiedDate":"2022-10-10"},{"lineNumber":154,"author":{"gitId":"LiuFangrui"},"content":"        Internship i \u003d findInternshipById(internshipId);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"LiuFangrui"},"content":"        return i \u003d\u003d null ? null : i.getCompanyName().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"LiuFangrui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":157,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"nqt230"},"content":"     * Updates the personIdCounter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"        updateNextPersonId();","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"        Internship i \u003d findInternshipById(p.getInternshipId());","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"        if (i !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"            Internship linkedI \u003d new Internship(","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"                    i.getInternshipId(),","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"                    i.getCompanyName(),","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"                    i.getInternshipRole(),","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"                    i.getInternshipStatus(),","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"nqt230"},"content":"                    p.getPersonId(),","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"nqt230"},"content":"                    i.getInterviewDate()","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"nqt230"},"content":"            setInternship(i, linkedI);","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":180,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":181,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"     * Adds a internship to the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"     * The internship must not already exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"     * * Updates the internshipIdCounter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":187,"author":{"gitId":"nqt230"},"content":"    public void addInternship(Internship i) {","lastModifiedDate":"2022-10-02"},{"lineNumber":188,"author":{"gitId":"nqt230"},"content":"        updateNextInternshipId();","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":190,"author":{"gitId":"nqt230"},"content":"        internships.add(i);","lastModifiedDate":"2022-10-02"},{"lineNumber":191,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":192,"author":{"gitId":"nqt230"},"content":"        Person p \u003d findPersonById(i.getContactPersonId());","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"nqt230"},"content":"        if (p !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"nqt230"},"content":"            Person linkedP \u003d new Person(","lastModifiedDate":"2022-10-12"},{"lineNumber":195,"author":{"gitId":"nqt230"},"content":"                    p.getPersonId(),","lastModifiedDate":"2022-10-12"},{"lineNumber":196,"author":{"gitId":"nqt230"},"content":"                    p.getName(),","lastModifiedDate":"2022-10-12"},{"lineNumber":197,"author":{"gitId":"nqt230"},"content":"                    p.getPhone(),","lastModifiedDate":"2022-10-12"},{"lineNumber":198,"author":{"gitId":"nqt230"},"content":"                    p.getEmail(),","lastModifiedDate":"2022-10-12"},{"lineNumber":199,"author":{"gitId":"nqt230"},"content":"                    i.getInternshipId(),","lastModifiedDate":"2022-10-12"},{"lineNumber":200,"author":{"gitId":"nqt230"},"content":"                    p.getTags()","lastModifiedDate":"2022-10-12"},{"lineNumber":201,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-12"},{"lineNumber":202,"author":{"gitId":"nqt230"},"content":"            setPerson(p, linkedP);","lastModifiedDate":"2022-10-12"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"nqt230"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":218,"author":{"gitId":"nqt230"},"content":"        requireNonNull(editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":219,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":220,"author":{"gitId":"nqt230"},"content":"        internships.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":221,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":222,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":229,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":230,"author":{"gitId":"nqt230"},"content":"        updateNextPersonId();","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"nqt230"},"content":"        Internship i \u003d findInternshipById(key.getInternshipId());","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"nqt230"},"content":"        if (i !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"nqt230"},"content":"            Internship linkedI \u003d new Internship(","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"nqt230"},"content":"                    i.getInternshipId(),","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"nqt230"},"content":"                    i.getCompanyName(),","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"nqt230"},"content":"                    i.getInternshipRole(),","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"nqt230"},"content":"                    i.getInternshipStatus(),","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"nqt230"},"content":"                    i.getInterviewDate()","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"nqt230"},"content":"            setInternship(i, linkedI);","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"ish1506"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":247,"author":{"gitId":"ish1506"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-10"},{"lineNumber":248,"author":{"gitId":"ish1506"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-10-10"},{"lineNumber":249,"author":{"gitId":"ish1506"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":250,"author":{"gitId":"nqt230"},"content":"    public void removeInternship(Internship key) {","lastModifiedDate":"2022-10-02"},{"lineNumber":251,"author":{"gitId":"nqt230"},"content":"        internships.remove(key);","lastModifiedDate":"2022-10-02"},{"lineNumber":252,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"nqt230"},"content":"        updateNextInternshipId();","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"nqt230"},"content":"        Person p \u003d findPersonById(key.getContactPersonId());","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"nqt230"},"content":"        if (p !\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"nqt230"},"content":"            Person linkedP \u003d new Person(","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"nqt230"},"content":"                    p.getPersonId(),","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"nqt230"},"content":"                    p.getName(),","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"nqt230"},"content":"                    p.getPhone(),","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"nqt230"},"content":"                    p.getEmail(),","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"nqt230"},"content":"                    p.getTags()","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"nqt230"},"content":"            setPerson(p, linkedP);","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"nqt230"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":274,"author":{"gitId":"nqt230"},"content":"                + internships.asUnmodifiableObservableList().size() + \" internships\\n\";","lastModifiedDate":"2022-10-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":283,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":284,"author":{"gitId":"nqt230"},"content":"    public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":285,"author":{"gitId":"nqt230"},"content":"        return internships.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-02"},{"lineNumber":286,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":287,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":292,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-10-05"},{"lineNumber":293,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internships.equals(((AddressBook) other).internships));","lastModifiedDate":"2022-10-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chengda300":10,"ish1506":4,"nqt230":153,"-":120,"LiuFangrui":13}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    Predicate\u003cInternship\u003e PREDICATE_SHOW_ALL_INTERNSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"    boolean hasInternship(Internship internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"     * Deletes the given internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"     * The internship must exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"    void deleteInternship(Internship target);","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"     * Adds the given internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"     * {@code internship} must not already exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"    void addInternship(Internship internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"     * Replaces the given internship {@code target} with {@code editedInternship}.","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"     * The internship identity of {@code editedInternship}","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"     * must not be the same as another existing internship in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"    void setInternship(Internship target, Internship editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"     * Updates the filter of the filtered internship list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Person","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"     * and increments the Id counter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Person.","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"    int getNextPersonId();","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Internship","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"     * and increments the Id counter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"    int getNextInternshipId();","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"    Person findPersonById(PersonId personId);","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"    Internship findInternshipById(InternshipId internshipId);","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nqt230":61,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    private final FilteredList\u003cInternship\u003e filteredInternships;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        filteredInternships \u003d new FilteredList\u003c\u003e(this.addressBook.getInternshipList());","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"        return addressBook.hasInternship(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"    public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"        addressBook.removeInternship(target);","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"    public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"        addressBook.addInternship(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":153,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"nqt230"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":156,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"nqt230"},"content":"        addressBook.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"nqt230"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"nqt230"},"content":"        return filteredInternships;","lastModifiedDate":"2022-10-02"},{"lineNumber":163,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"nqt230"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"        filteredInternships.setPredicate(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"    public int getNextPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"        return addressBook.getNextPersonId();","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":176,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":177,"author":{"gitId":"nqt230"},"content":"    public int getNextInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":178,"author":{"gitId":"nqt230"},"content":"        return addressBook.getNextInternshipId();","lastModifiedDate":"2022-10-02"},{"lineNumber":179,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":180,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":181,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"nqt230"},"content":"    public Person findPersonById(PersonId personId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"        return addressBook.findPersonById(personId);","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":187,"author":{"gitId":"nqt230"},"content":"    public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":188,"author":{"gitId":"nqt230"},"content":"        return addressBook.findInternshipById(internshipId);","lastModifiedDate":"2022-10-02"},{"lineNumber":189,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":190,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-02"},{"lineNumber":208,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 filteredInternships.equals(other.filteredInternships);","lastModifiedDate":"2022-10-02"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nqt230":62,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    ObservableList\u003cInternship\u003e getInternshipList();","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"LiuFangrui"},"content":"    String findPersonNameById(PersonId personId);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"LiuFangrui"},"content":"    String findInternshipNameById(InternshipId internshipId);","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nqt230":7,"-":17,"LiuFangrui":5}},{"path":"src/main/java/seedu/address/model/internship/CompanyName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s company name in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class CompanyName {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Company names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    /*","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code CompanyName}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"     * @param name A valid company name.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    public CompanyName(String name) {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        return fullName;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                || (other instanceof CompanyName // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 fullName.equals(((CompanyName) other).fullName)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":53}},{"path":"src/main/java/seedu/address/model/internship/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":" * Represents an Internship in the address book.","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"public class Internship {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"    // Identity fields","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"    private final InternshipId internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    private final CompanyName companyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    private final InternshipRole internshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    // Data fields","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    private final InternshipStatus internshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    private final PersonId contactPersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    private final InterviewDate interviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     * Every field must be present and not null except contact person and interview date.","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    public Internship(","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"            InternshipId internshipId,","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"            CompanyName companyName,","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"            InternshipRole internshipRole,","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"            InternshipStatus internshipStatus,","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"            PersonId contactPersonId,","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            InterviewDate interviewDate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(internshipId, companyName, internshipRole);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d contactPersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    public InternshipId getInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        return internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    public CompanyName getCompanyName() {","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        return companyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    public InternshipRole getInternshipRole() {","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        return internshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    public InternshipStatus getInternshipStatus() {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        return internshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public PersonId getContactPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        return contactPersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    public InterviewDate getInterviewDate() {","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        return interviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"     * Returns true if both internships have the same company name and internship role.","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"     * This defines a weaker notion of equality between two internships.","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"    public boolean isSameInternship(Internship otherInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInternshipRole().equals(getInternshipRole());","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        if (!(other instanceof Internship)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"        Internship otherInternship \u003d (Internship) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"        return otherInternship.getInternshipId().equals(getInternshipId())","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInternshipRole().equals(getInternshipRole())","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInternshipStatus().equals(getInternshipStatus())","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 Objects.equals(otherInternship.getInternshipId(), getInternshipId())","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getContactPersonId().equals(getContactPersonId())","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInterviewDate().equals(getInterviewDate());","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"        return Objects.hash(companyName, internshipRole, internshipStatus, contactPersonId, interviewDate);","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        builder.append(getCompanyName())","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                .append(\"; Role: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"                .append(getInternshipRole())","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"                .append(getInternshipStatus())","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"                .append(\"; InterviewDate: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"                .append(getInterviewDate());","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":121}},{"path":"src/main/java/seedu/address/model/internship/InternshipId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s unique id in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class InternshipId {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Internship Id must be a non-negative number, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    public final Integer id;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"     * Takes a string id and parses it into an Integer.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    public InternshipId(String id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"        this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public InternshipId(Integer id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"     * Returns true if the given String can be parsed into an Integer and is non-negative.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            return isValidId(Integer.parseInt(test));","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(Integer test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        return id.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"                || (other instanceof InternshipId // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 id.equals(((InternshipId) other).id)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        return id.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":70}},{"path":"src/main/java/seedu/address/model/internship/InternshipRole.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s role in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class InternshipRole {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Roles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    /*","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public final String roleName;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"     * @param name A valid role name.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    public InternshipRole(String name) {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"        roleName \u003d name;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        return roleName;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                || (other instanceof InternshipRole // instanceof handles nulls","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 roleName.equals(((InternshipRole) other).roleName)); // state check","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return roleName.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":53}},{"path":"src/main/java/seedu/address/model/internship/InternshipStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s status in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"public class InternshipStatus {","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"            \"Status can only be PENDING, REJECTED, ACCEPTED or COMPLETED, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"     * Represents the possible states of an InternshipStatus.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"    public enum State { PENDING, REJECTED, ACCEPTED, COMPLETED }","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    public final State currentState;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipStatus}.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"     * @param state A valid state as defined in the {@Code State} enum.","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    public InternshipStatus(State state) {","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"        this.currentState \u003d state;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     * Returns true if the given String can be parsed to a valid state as defined in the {@Code State} enum.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"        switch (test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"        case \"PENDING\":","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        case \"REJECTED\":","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        case \"ACCEPTED\":","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        case \"COMPLETED\":","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"        default:","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        return currentState.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                || (other instanceof InternshipStatus // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 currentState.equals(((InternshipStatus) other).currentState)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        return currentState.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":59}},{"path":"src/main/java/seedu/address/model/internship/InterviewDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s interview date in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDatetimeStr(String)} (String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"public class InterviewDate {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"            \"Interview dates must be in the format yyyy-MM-dd HH:mm, and it should not blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-[01]\\\\d-[0-3]\\\\d\\\\s[0-2]\\\\d((:[0-5]\\\\d)?){2}\";","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    public final LocalDateTime datetime;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InterviewDate}.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     * @param datetimeStr A valid String in the format yyyy-MM-dd HH:mm that represents a date and time.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    public InterviewDate(String datetimeStr) {","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"        requireNonNull(datetimeStr);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidDatetimeStr(datetimeStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"        LocalDateTime datetime \u003d LocalDateTime.parse(datetimeStr, formatter);","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidDatetimeStr(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        return datetime.format(formatter);","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                || (other instanceof InterviewDate // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 datetime.equals(((InterviewDate) other).datetime)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        return datetime.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":56}},{"path":"src/main/java/seedu/address/model/internship/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":" * Tests that an {@code Internship}\u0027s {@code Company Name} matches any of the keywords given.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"        return keywords.stream()","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"                        internship.getCompanyName().fullName, keyword));","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":32}},{"path":"src/main/java/seedu/address/model/internship/UniqueInternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import java.util.List;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":" * A list of internships that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":" * An internship is considered unique by comparing using {@code Internship#isSameInternship(Internship)}.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":" * As such, adding and updating of internships uses Internship#isSameInternship(Internship) for equality","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":" * to ensure that the internship being added or updated is unique in terms of identity in the UniqueInternshipList.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":" * However, the removal of an internship uses Internship#equals(Object)","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":" * to ensure that the internship with exactly the same fields will be removed.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":" *","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":" *","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":" * @see Internship#isSameInternship(Internship)","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"public class UniqueInternshipList implements Iterable\u003cInternship\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    private final ObservableList\u003cInternship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    private final ObservableList\u003cInternship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"     * Returns true if the list contains an equivalent internship as the given argument.","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    public boolean contains(Internship toCheck) {","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     * Returns an Internship with id that matches idToFind.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"     * If none is found, return null.","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    public Internship findById(InternshipId idToFind) {","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        return internalList","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                .stream()","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                .filter(i -\u003e i !\u003d null \u0026\u0026 i.getInternshipId().equals(idToFind))","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                .findFirst()","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"                .orElse(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"     * Adds an internship to the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"     * The internship must not already exist in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    public void add(Internship toAdd) {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     * Replaces the internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"     * The internship identity of {@code editedInternship}","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"     * must not be the same as another existing internship in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"        if (!target.isSameInternship(editedInternship) \u0026\u0026 contains(editedInternship)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"        internalList.set(index, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"     * Removes the equivalent internship from the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"     * The internship must exist in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"    public void remove(Internship toRemove) {","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"    public void setInternships(UniqueInternshipList replacement) {","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"     * Replaces the contents of this list with {@code internships}.","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(internships);","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        if (!internshipsAreUnique(internships)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        internalList.setAll(internships);","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"    public ObservableList\u003cInternship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"    public Iterator\u003cInternship\u003e iterator() {","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"                || (other instanceof UniqueInternshipList // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internalList.equals(((UniqueInternshipList) other).internalList));","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"     * Returns true if {@code internships} contains only unique internships.","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"    private boolean internshipsAreUnique(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"        for (int i \u003d 0; i \u003c internships.size() - 1; i++) {","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"            for (int j \u003d i + 1; j \u003c internships.size(); j++) {","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"                if (internships.get(i).isSameInternship(internships.get(j))) {","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"                    return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"                }","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"        return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":151}},{"path":"src/main/java/seedu/address/model/internship/exceptions/DuplicateInternshipException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":" * Signals that the operation will result in duplicate Internships","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":" * (Internships are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"public class DuplicateInternshipException extends RuntimeException {","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"    public DuplicateInternshipException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"        super(\"Operation would result in duplicate internships\");","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":11}},{"path":"src/main/java/seedu/address/model/internship/exceptions/InternshipNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":" * Signals that the operation is unable to find the specified internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"public class InternshipNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":6}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    private final PersonId personId;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    private final InternshipId internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     * Every field must be present and not null except internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    public Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"            PersonId personId,","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            Name name,","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            Phone phone,","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            Email email,","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            InternshipId internshipId,","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    public PersonId getPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        return personId;","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    public InternshipId getInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        return internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"        return otherPerson.getPersonId().equals(getPersonId())","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 Objects.equals(otherPerson.getPersonId(), getPersonId())","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"tanxuanyun"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"tanxuanyun"},"content":"                .append(getEmail());","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanxuanyun":3,"nqt230":22,"-":110}},{"path":"src/main/java/seedu/address/model/person/PersonId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents a Person\u0027s unique id in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class PersonId {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Person Id must be a non-negative number, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    public final Integer id;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code PersonId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"     * Takes a string id and parses it into an Integer.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    public PersonId(String id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"        this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public PersonId(Integer id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"     * Returns true if the given String can be parsed into an Integer and is non-negative.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            return isValidId(Integer.parseInt(test));","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(Integer test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        return id.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"                || (other instanceof PersonId // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 id.equals(((PersonId) other).id)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        return id.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":70}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"     * Returns a Person with id that matches idToFind.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     * If none is found, return null.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public Person findById(PersonId idToFind) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        return internalList","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                .stream()","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                .filter(p -\u003e p !\u003d null \u0026\u0026 p.getPersonId().equals(idToFind))","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                .findFirst()","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                .orElse(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nqt230":12,"-":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"                    new PersonId(0),","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"87438807\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(0),","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"                    new PersonId(1),","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"99272758\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"tanxuanyun"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"                    new PersonId(2),","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"93210283\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"                    new PersonId(3),","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                    new Name(\"David Li\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"91031282\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(1),","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"tanxuanyun"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"                    new PersonId(4),","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"92492021\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"                    new PersonId(5),","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"92624417\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(0),","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"    public static Internship[] getSampleInternships() {","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"        return new Internship[] {","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            new Internship(","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(0),","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"                    new CompanyName(\"company ABC123\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"                    new InternshipRole(\"frontend engineer\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"                    new InternshipStatus(InternshipStatus.State.ACCEPTED),","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"                    new PersonId(0),","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"                    null),","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"            new Internship(","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(1),","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"                    new CompanyName(\"Google\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"                    new InternshipRole(\"data analyst\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"                    new InternshipStatus(InternshipStatus.State.PENDING),","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"                    new PersonId(5),","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"                    new InterviewDate(\"2022-11-11 11:11\")),","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        for (Internship sampleInternship : getSampleInternships()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"            sampleAb.addInternship(sampleInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"tanxuanyun":6,"nqt230":64,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInternship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":" * Jackson-friendly version of {@link Internship}.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"class JsonAdaptedInternship {","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    private final Integer internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    private final String companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    private final String internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    private final String internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    private final Integer contactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    private final String interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code JsonAdaptedInternship} with the given internship details.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public JsonAdaptedInternship(","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipId\") Integer internshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"companyName\") String companyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipRole\") String internshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipStatus\") String internshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"contactPersonId\") Integer contactPersonId,","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"interviewDate\") String interviewDate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d contactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"     * Converts a given {@code Internship} into this class for Jackson use.","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"    public JsonAdaptedInternship(Internship source) {","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d source.getInternshipId().id;","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        companyName \u003d source.getCompanyName().fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        internshipRole \u003d source.getInternshipRole().roleName;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        internshipStatus \u003d source.getInternshipStatus().currentState.name();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        contactPersonId \u003d source.getContactPersonId() !\u003d null ? source.getContactPersonId().id : null;","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"        interviewDate \u003d source.getInterviewDate() !\u003d null ? source.getInterviewDate().toString() : null;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"     * Converts this Jackson-friendly adapted internship object into the model\u0027s {@code Internship} object.","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted internship.","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    public Internship toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"        // InternshipId","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        if (internshipId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, InternshipId.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"        if (!InternshipId.isValidId(internshipId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(InternshipId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"        final InternshipId modelInternshipId \u003d new InternshipId(internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"        // CompanyName","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"        if (companyName \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, CompanyName.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"        if (!CompanyName.isValidName(companyName)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"        final CompanyName modelCompanyName \u003d new CompanyName(companyName);","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"        // InternshipRole","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        if (internshipRole \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, InternshipRole.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"        if (!InternshipRole.isValidName(internshipRole)) {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(InternshipRole.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"        final InternshipRole modelInternshipRole \u003d new InternshipRole(internshipRole);","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"        // InternshipStatus","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        if (internshipStatus \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, InternshipStatus.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"        if (!InternshipStatus.isValidStatus(internshipStatus)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(InternshipStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"        final InternshipStatus modelInternshipStatus \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"                new InternshipStatus(InternshipStatus.State.valueOf(internshipStatus));","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"        // ContactPersonId","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"        final PersonId modelContactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"        if (contactPersonId \u003d\u003d null || !InternshipId.isValidId(contactPersonId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"            modelContactPersonId \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"            modelContactPersonId \u003d new PersonId(contactPersonId);","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"        // InterviewDate","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"        InterviewDate modelInterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"        if (interviewDate \u003d\u003d null || !InterviewDate.isValidDatetimeStr(interviewDate)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"            modelInterviewDate \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"            modelInterviewDate \u003d new InterviewDate(interviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"        return new Internship(","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"                modelInternshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"                modelCompanyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"                modelInternshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"                modelInternshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"                modelContactPersonId,","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"                modelInterviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"nqt230":133}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    private final Integer personId;","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    private final Integer internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"personId\") Integer personId,","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipId\") Integer internshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"        personId \u003d source.getPersonId().id;","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d source.getInternshipId() !\u003d null ? source.getInternshipId().id : null;","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, PersonId.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"        final PersonId modelPersonId \u003d new PersonId(personId);","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        final InternshipId modelInternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"        if (internshipId \u003d\u003d null || !InternshipId.isValidId(internshipId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"            modelInternshipId \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"            modelInternshipId \u003d new InternshipId(internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"tanxuanyun"},"content":"        return new Person(modelPersonId, modelName, modelPhone, modelEmail, modelInternshipId,","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"tanxuanyun"},"content":"                modelTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"tanxuanyun":3,"nqt230":27,"-":94}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"Internships list contains duplicate internship(s).\";","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    private final List\u003cJsonAdaptedInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    public JsonSerializableAddressBook(","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internships\") List\u003cJsonAdaptedInternship\u003e internships) {","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        this.internships.addAll(internships);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        internships.addAll(source.getInternshipList()","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"                .stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                .map(JsonAdaptedInternship::new)","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"        for (JsonAdaptedInternship jsonAdaptedInternship : internships) {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"            Internship internship \u003d jsonAdaptedInternship.toModelType();","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"            if (addressBook.hasInternship(internship)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"            addressBook.addInternship(internship);","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nqt230":23,"-":59}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-f11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide for full details: \" + USERGUIDE_URL","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"            + \"\\nA summary of the command is provided below for convenience.\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    public static final Image HELP_SUMMARY \u003d new Image(\"/images/help_summary.png\");","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"    private ImageView helpImage;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        helpImage.setImage(HELP_SUMMARY);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chengda300":8,"nqt230":2,"-":99}},{"path":"src/main/java/seedu/address/ui/InternshipCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":" * An UI component that displays information of a {@code Internship}.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"public class InternshipCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"LiuFangrui"},"content":"    static final String NO_CONTACT_PERSON \u003d \"No contact person.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"LiuFangrui"},"content":"    private static final String FXML \u003d \"InternshipListCard.fxml\";","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"    public final Internship internship;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"    private Label companyName;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"    private Label id;","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"    private Label role;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"    private FlowPane status;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"LiuFangrui"},"content":"    private Label contactPerson;","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"    private Label interviewDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"     * Creates a {@code InternshipCode} with the given {@code Internship} and index to display.","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"    public InternshipCard(Internship internship, int displayedIndex) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"        super(FXML);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"        this.internship \u003d internship;","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"        companyName.setText(internship.getCompanyName().fullName);","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"        role.setText(internship.getInternshipRole().roleName);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"        status.getChildren().add(new Label(internship.getInternshipStatus().toString()));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"LiuFangrui"},"content":"        contactPerson.setText(NO_CONTACT_PERSON); // dummy value","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"LiuFangrui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"LiuFangrui"},"content":"    public PersonId getContactPersonId() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"LiuFangrui"},"content":"        return internship.getContactPersonId();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"LiuFangrui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"LiuFangrui"},"content":"    public void setContactPerson(String contactPersonName) {","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"LiuFangrui"},"content":"        if (contactPersonName \u003d\u003d null) {","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"LiuFangrui"},"content":"            contactPerson.setText(NO_CONTACT_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"LiuFangrui"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"LiuFangrui"},"content":"            contactPerson.setText(\"Contact Person: \" + contactPersonName);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"chengda300"},"content":"        if (internship.getInterviewDate() \u003d\u003d null) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"            interviewDate.setText(\"No interviews scheduled.\");","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"chengda300"},"content":"        } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"chengda300"},"content":"            interviewDate.setText(\"Interview on: \" + internship.getInterviewDate().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"chengda300"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"chengda300"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"chengda300"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"chengda300"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"chengda300"},"content":"            return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"chengda300"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"chengda300"},"content":"        if (!(other instanceof InternshipCard)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"chengda300"},"content":"            return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"chengda300"},"content":"        // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"chengda300"},"content":"        InternshipCard card \u003d (InternshipCard) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"chengda300"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"chengda300"},"content":"                \u0026\u0026 internship.equals(card.internship);","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":75,"LiuFangrui":16}},{"path":"src/main/java/seedu/address/ui/InternshipListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.ui;","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":" * Panel containing the list of internship.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"public class InternshipListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"    private static final String FXML \u003d \"InternshipListPanel.fxml\";","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InternshipListPanel.class);","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"LiuFangrui"},"content":"    private ReadOnlyAddressBook addressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"    private ListView\u003cInternship\u003e internshipListView;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"     * Creates a {@code InternshipListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"LiuFangrui"},"content":"    public InternshipListPanel(ObservableList\u003cInternship\u003e internshipList, ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"        super(FXML);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"LiuFangrui"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"        internshipListView.setItems(internshipList);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"        internshipListView.setCellFactory(listView -\u003e new InternshipListViewCell());","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Internship} using a {@code InternshipCard}.","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"    class InternshipListViewCell extends ListCell\u003cInternship\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"        @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"        protected void updateItem(Internship internship, boolean empty) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"            super.updateItem(internship, empty);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"            if (empty || internship \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"                setText(null);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"            } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"LiuFangrui"},"content":"                //create internship card","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"LiuFangrui"},"content":"                InternshipCard newInternshipCard \u003d new InternshipCard(internship, getIndex() + 1);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"LiuFangrui"},"content":"                newInternshipCard.setContactPerson(","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"LiuFangrui"},"content":"                        addressBook.findPersonNameById(newInternshipCard.getContactPersonId()));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"LiuFangrui"},"content":"                setGraphic(newInternshipCard.getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":47,"LiuFangrui":10}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    private InternshipListPanel internshipListPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"    private StackPane internshipListPanelPlaceholder;","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"chengda300"},"content":"    void fillInnerPartsPerson() {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"chengda300"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic.getAddressBook());","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"chengda300"},"content":"    void fillInnerPartsInternship() {","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"LiuFangrui"},"content":"        internshipListPanel \u003d new InternshipListPanel(logic.getFilteredInternshipList(), logic.getAddressBook());","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"chengda300"},"content":"        internshipListPanelPlaceholder.getChildren().add(internshipListPanel.getRoot());","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"chengda300"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"chengda300"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"chengda300"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"chengda300"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"chengda300"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"chengda300"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"chengda300"},"content":"    public InternshipListPanel getInternshipListPanel() {","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"chengda300"},"content":"        return internshipListPanel;","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chengda300":23,"ish1506":1,"-":194,"LiuFangrui":1}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"    private static final String NO_INTERNSHIP \u003d \"No internship linked.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"    private Label internship;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"chengda300"},"content":"        if (person.getInternshipId() \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"chengda300"},"content":"            internship.setText(NO_INTERNSHIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"chengda300"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"chengda300"},"content":"            internship.setText(\"Internship: \" + person.getInternshipId().toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"chengda300"},"content":"    public InternshipId getInternshipId() {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"chengda300"},"content":"        return person.getInternshipId();","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"chengda300"},"content":"    public void setInternship(String internshipName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"chengda300"},"content":"        if (internshipName \u003d\u003d null) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"chengda300"},"content":"            internship.setText(NO_INTERNSHIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"chengda300"},"content":"        } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"chengda300"},"content":"            internship.setText(\"Internship: \" + internshipName);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chengda300":19,"-":76}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"    private ReadOnlyAddressBook addressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"                //create person card","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"                PersonCard newPersonCard \u003d new PersonCard(person, getIndex() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"                newPersonCard.setInternship(","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"                        addressBook.findInternshipNameById(newPersonCard.getInternshipId()));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"                setGraphic(newPersonCard.getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chengda300":10,"-":47}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"            mainWindow.fillInnerPartsPerson();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"            mainWindow.fillInnerPartsInternship();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chengda300":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":354,"author":{"gitId":"chengda300"},"content":"#status .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":355,"author":{"gitId":"chengda300"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-06"},{"lineNumber":356,"author":{"gitId":"chengda300"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2022-10-06"},{"lineNumber":357,"author":{"gitId":"chengda300"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2022-10-06"},{"lineNumber":358,"author":{"gitId":"chengda300"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2022-10-06"},{"lineNumber":359,"author":{"gitId":"chengda300"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2022-10-06"},{"lineNumber":360,"author":{"gitId":"chengda300"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-06"},{"lineNumber":361,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":9,"-":352}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"      \u003cVBox alignment\u003d\"CENTER\" fx:id\u003d\"helpContainer\"\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"        \u003cImageView fx:id\u003d\"helpImage\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"chengda300":5,"-":44}},{"path":"src/main/resources/view/InternshipListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"        \u003cLabel fx:id\u003d\"companyName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"      \u003cFlowPane fx:id\u003d\"status\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"      \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"LiuFangrui"},"content":"      \u003cLabel fx:id\u003d\"contactPerson\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$contactPerson\" /\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"      \u003cLabel fx:id\u003d\"interviewDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$interviewDate\" /\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":35,"LiuFangrui":1}},{"path":"src/main/resources/view/InternshipListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"  \u003cListView fx:id\u003d\"internshipListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"chengda300":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"        \u003cHBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"ALWAYS\" spacing\u003d\"20\"\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"          \u003cStackPane fx:id\u003d\"internshipListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chengda300":5,"-":53}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"      \u003cLabel fx:id\u003d\"internship\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$internship\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chengda300":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"ish1506"},"content":"        String deleteCommand \u003d \"deletep 9\";","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"LiuFangrui"},"content":"        String listCommand \u003d ListPersonCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"LiuFangrui"},"content":"        assertCommandSuccess(listCommand, ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"ish1506"},"content":"    private void assertCommandSuccess(String inputCommand,","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"ish1506"},"content":"            String expectedMessage, Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"ish1506"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tanxuanyun":1,"chengda300":3,"ish1506":8,"nqt230":1,"-":149,"LiuFangrui":3}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chengda300":2,"nqt230":4,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"nqt230"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"nqt230"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"nqt230"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"nqt230"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"tanxuanyun"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"nqt230"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"        public int getNextPersonId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"nqt230"},"content":"        public int getNextInternshipId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"nqt230"},"content":"        public Person findPersonById(PersonId personId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"nqt230"},"content":"        public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"nqt230"},"content":"        public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"nqt230"},"content":"        public int getNextPersonId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"nqt230"},"content":"            return 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"tanxuanyun"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"tanxuanyun"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"tanxuanyun"},"content":"            return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"nqt230"},"content":"        private int nextPersonId \u003d 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":257,"author":{"gitId":"nqt230"},"content":"            if (person.getPersonId().id + 1 \u003e nextPersonId) {","lastModifiedDate":"2022-10-05"},{"lineNumber":258,"author":{"gitId":"nqt230"},"content":"                nextPersonId \u003d person.getPersonId().id + 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":259,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":266,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":267,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":268,"author":{"gitId":"nqt230"},"content":"        public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-05"},{"lineNumber":269,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-05"},{"lineNumber":270,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":271,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":272,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":273,"author":{"gitId":"nqt230"},"content":"        public int getNextPersonId() {","lastModifiedDate":"2022-10-05"},{"lineNumber":274,"author":{"gitId":"nqt230"},"content":"            return nextPersonId;","lastModifiedDate":"2022-10-05"},{"lineNumber":275,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":276,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":277,"author":{"gitId":"tanxuanyun"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":278,"author":{"gitId":"tanxuanyun"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":279,"author":{"gitId":"tanxuanyun"},"content":"            return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":280,"author":{"gitId":"tanxuanyun"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tanxuanyun":11,"nqt230":87,"-":185}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chengda300":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"ish1506"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"ish1506"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"ish1506"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"ish1506"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chengda300":3,"ish1506":15,"-":91}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"ish1506"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"ish1506"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"ish1506"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"ish1506"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"ish1506"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"ish1506"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"ish1506"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"ish1506"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"ish1506"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"ish1506"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"ish1506"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"ish1506"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2022-10-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"ish1506"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2022-10-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"ish1506"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2022-10-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"chengda300":8,"ish1506":27,"-":138}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"chengda300":6,"ish1506":1,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chengda300":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindInternshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INTERNSHIPS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.ALICE;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.BENSON;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.CARL;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.DANIEL;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.ELLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.FIONA;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.GEORGE;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.HOON;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.IDA;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":" * Contains integration tests (interaction with the Model) for {@code FindInternshipCommand}.","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"public class FindInternshipCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"        FindInternshipCommand findFirstCommand \u003d new FindInternshipCommand(firstPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"        FindInternshipCommand findSecondCommand \u003d new FindInternshipCommand(secondPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"        FindInternshipCommand findFirstCommandCopy \u003d new FindInternshipCommand(firstPredicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"chengda300"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"chengda300"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"chengda300"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"chengda300"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"chengda300"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"chengda300"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"chengda300"},"content":"    public void execute_zeroKeywords_noInternshipFound() {","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"chengda300"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"        FindInternshipCommand command \u003d new FindInternshipCommand(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"chengda300"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"chengda300"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"chengda300"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredInternshipList());","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"chengda300"},"content":"    public void execute_multipleKeywords_multipleInternshipFound() {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"chengda300"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIPS_LISTED_OVERVIEW, 9);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Fiona Pte Ltd\");","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"chengda300"},"content":"        FindInternshipCommand command \u003d new FindInternshipCommand(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"chengda300"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"chengda300"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"chengda300"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HOON, IDA),","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"chengda300"},"content":"                model.getFilteredInternshipList());","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"chengda300"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"chengda300"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"chengda300"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chengda300":91}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"LiuFangrui"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"LiuFangrui"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"LiuFangrui"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"LiuFangrui"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"LiuFangrui"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"LiuFangrui"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chengda300":1,"-":76,"LiuFangrui":7}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chengda300":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/InternshipCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"public class InternshipCommandTestUtil {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_NAME_ABC \u003d \"ABC Pte Ltd\";","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_NAME_BOBBY \u003d \"Bobby Constructions Pte Ltd\";","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_ROLE_ABC \u003d \"Software Engineer\";","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_ROLE_BOBBY \u003d \"Admin Assistant\";","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_STATUS_ABC \u003d InternshipStatus.State.PENDING.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_STATUS_BOBBY \u003d InternshipStatus.State.ACCEPTED.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_CONTACT_PERSON_ABC \u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_CONTACT_PERSON_BOBBY \u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_INTERVIEW_ABC \u003d \"2022-11-11 11:11\";","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"    public static final String VALID_INTERVIEW_BOBBY \u003d \"2022-10-10 12:34\";","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"    public static final String NAME_DESC_ABC \u003d \" \" + PREFIX_COMPANY_NAME + VALID_NAME_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"    public static final String NAME_DESC_BOBBY \u003d \" \" + PREFIX_COMPANY_NAME + VALID_NAME_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"    public static final String ROLE_DESC_ABC \u003d \" \" + PREFIX_INTERNSHIP_ROLE + VALID_ROLE_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"    public static final String ROLE_DESC_BOBBY \u003d \" \" + PREFIX_INTERNSHIP_ROLE + VALID_ROLE_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"    public static final String STATUS_DESC_ABC \u003d \" \" + PREFIX_INTERNSHIP_STATUS + VALID_STATUS_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"    public static final String STATUS_DESC_BOBBY \u003d \" \" + PREFIX_INTERNSHIP_STATUS + VALID_STATUS_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"    public static final String INTERVIEW_DESC_ABC \u003d \" \" + PREFIX_INTERVIEW_DATE + VALID_INTERVIEW_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"    public static final String INTERVIEW_DESC_BOBBY \u003d \" \" + PREFIX_INTERVIEW_DATE + VALID_INTERVIEW_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_COMPANY_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_INTERNSHIP_ROLE + \"911\u0026\"; // \u0027\u0026\u0027 not allowed in phones","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_INTERNSHIP_STATUS + \"bob!yahoo\"; // not a status","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"    public static final String INVALID_INTERVIEW_DESC \u003d \" \" + PREFIX_INTERVIEW_DATE + \"2022-11-10\"; // missing time","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"chengda300"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"chengda300"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"chengda300"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"tanxuanyun"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"chengda300"},"content":"     * - the address book, filtered internship list and selected internship in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"chengda300"},"content":"        List\u003cInternship\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredInternshipList());","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"chengda300"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredInternshipList());","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"chengda300"},"content":"     * Updates {@code model}\u0027s filtered list to show only the internship at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"chengda300"},"content":"    public static void showInternshipAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"chengda300"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"chengda300"},"content":"        Internship internship \u003d model.getFilteredInternshipList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"chengda300"},"content":"        final String[] splitName \u003d internship.getCompanyName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"chengda300"},"content":"        model.updateFilteredInternshipList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"chengda300"},"content":"        assertEquals(1, model.getFilteredInternshipList().size());","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanxuanyun":2,"chengda300":47,"-":77}},{"path":"src/test/java/seedu/address/logic/commands/ListInternshipCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListInternshipCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"public class ListInternshipCommandTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"    private Model model;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"        assertCommandSuccess(new ListInternshipCommand(), model, ListInternshipCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"        assertCommandSuccess(new ListInternshipCommand(), model, ListInternshipCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chengda300":39}},{"path":"src/test/java/seedu/address/logic/commands/ListPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"LiuFangrui"},"content":"public class ListPersonCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"LiuFangrui"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"LiuFangrui"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chengda300":2,"-":34,"LiuFangrui":3}},{"path":"src/test/java/seedu/address/logic/commands/PersonCommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LINK_INDEX;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"public class PersonCommandTestUtil {","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"tanxuanyun"},"content":"    public static final String VALID_LINK_INDEX \u003d \"1\";","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"    public static final String LINK_INDEX_AMY \u003d \"\" + PREFIX_LINK_INDEX + VALID_LINK_INDEX;","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"ish1506"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"ish1506"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"tanxuanyun"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"tanxuanyun"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"ish1506"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel,","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"ish1506"},"content":"            CommandResult expectedCommandResult, Model expectedModel) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanxuanyun":5,"chengda300":1,"ish1506":5,"-":121}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"                + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"                + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"tanxuanyun"},"content":"                + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"                + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"tanxuanyun"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"tanxuanyun"},"content":"                + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY,","lastModifiedDate":"2022-10-07"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"tanxuanyun"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"tanxuanyun"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-07"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tanxuanyun":17,"chengda300":20,"nqt230":7,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"ish1506"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"ish1506"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"ish1506"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"ish1506"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"LiuFangrui"},"content":"    public void parseCommand_findPerson() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"LiuFangrui"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"LiuFangrui"},"content":"                FindPersonCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"LiuFangrui"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"LiuFangrui"},"content":"    public void parseCommand_listPerson() throws Exception {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"LiuFangrui"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD) instanceof ListPersonCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"LiuFangrui"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD + \" 3\") instanceof ListPersonCommand);","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"ish1506"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"ish1506"},"content":"                HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ish1506":10,"nqt230":3,"-":79,"LiuFangrui":9}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"ish1506":1,"-":37}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":" * outside of the DeletePersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":" * same path through the DeletePersonCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"        assertParseFailure(","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"                parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ish1506":8,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"ish1506"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"ish1506"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"ish1506"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"ish1506"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"tanxuanyun"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"ish1506"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"ish1506"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"ish1506"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"tanxuanyun"},"content":"                .withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"tanxuanyun"},"content":"                .build();","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"ish1506"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"ish1506"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tanxuanyun":3,"chengda300":21,"ish1506":16,"-":161}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"LiuFangrui"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"LiuFangrui"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"LiuFangrui"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"LiuFangrui"},"content":"                FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"LiuFangrui"},"content":"        FindPersonCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"LiuFangrui"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":28,"LiuFangrui":7}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"LiuFangrui"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"tanxuanyun"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        List\u003cInternship\u003e newInternships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newInternships);","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"tanxuanyun"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"        private final ObservableList\u003cInternship\u003e internships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"            this.internships.setAll(internships);","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"        public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"            return internships;","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"LiuFangrui"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"LiuFangrui"},"content":"        public String findPersonNameById(PersonId personId) {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"LiuFangrui"},"content":"            Person person \u003d persons","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"LiuFangrui"},"content":"                    .stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"LiuFangrui"},"content":"                    .filter(p -\u003e p !\u003d null \u0026\u0026 p.getPersonId().equals(personId.toString()))","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"LiuFangrui"},"content":"                    .findFirst()","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"LiuFangrui"},"content":"                    .orElse(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"LiuFangrui"},"content":"            return person \u003d\u003d null ? null : person.getName().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"LiuFangrui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"LiuFangrui"},"content":"        @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"LiuFangrui"},"content":"        public String findInternshipNameById(InternshipId internshipId) {","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"LiuFangrui"},"content":"            // TODO: Update getCompanyName to the auto generated Internship Name to be displayed","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"LiuFangrui"},"content":"            Internship internship \u003d internships","lastModifiedDate":"2022-10-10"},{"lineNumber":127,"author":{"gitId":"LiuFangrui"},"content":"                    .stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":128,"author":{"gitId":"LiuFangrui"},"content":"                    .filter(i -\u003e i !\u003d null \u0026\u0026 i.getInternshipId().equals(internshipId.toString()))","lastModifiedDate":"2022-10-10"},{"lineNumber":129,"author":{"gitId":"LiuFangrui"},"content":"                    .findFirst()","lastModifiedDate":"2022-10-10"},{"lineNumber":130,"author":{"gitId":"LiuFangrui"},"content":"                    .orElse(null);","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"LiuFangrui"},"content":"            return internship \u003d\u003d null ? null : internship.getCompanyName().toString();","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"LiuFangrui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"tanxuanyun":2,"chengda300":1,"nqt230":13,"-":96,"LiuFangrui":23}},{"path":"src/test/java/seedu/address/model/internship/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"    public void equals() {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"        // One keyword","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"chengda300"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"chengda300"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"chengda300"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"chengda300"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"chengda300"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"chengda300"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"chengda300"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"chengda300"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"chengda300"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"chengda300"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"chengda300"},"content":"        // Keywords match role and status, but does not match name","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"chengda300"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"Cleaner\", \"ACCEPTED\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"chengda300"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withName(\"Alice\").withRole(\"Cleaner\")","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"chengda300"},"content":"                .withStatus(\"ACCEPTED\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chengda300":75}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"tanxuanyun"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tanxuanyun":1,"-":74}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tanxuanyun":1,"chengda300":4,"-":81}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"tanxuanyun"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tanxuanyun":2,"chengda300":1,"-":166}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    private static final Integer VALID_PERSON_ID \u003d BENSON.getPersonId().id;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    private static final Integer VALID_INTERNSHIP_ID \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"                INVALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"tanxuanyun"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"                null,","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"tanxuanyun"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"                        VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"                        INVALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"                        VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"tanxuanyun"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"                VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"                null,","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"                        VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"                        INVALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"                        VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"tanxuanyun"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"                VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"                null,","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"tanxuanyun"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"                        VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"                        VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":131,"author":{"gitId":"tanxuanyun"},"content":"                        invalidTags);","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanxuanyun":7,"nqt230":44,"-":84}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"     * Adds a new {@code Internship} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    public AddressBookBuilder withInternship(Internship internship) {","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"        addressBook.addInternship(internship);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chengda300":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"ish1506":1,"-":76}},{"path":"src/test/java/seedu/address/testutil/InternshipBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":" * A utility class to help with building Internship objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"public class InternshipBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"    public static final Integer DEFAULT_INTERNSHIP_ID \u003d 0;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"    public static final String DEFAULT_NAME \u003d \"ABCDE Pte Ltd\";","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"    public static final String DEFAULT_ROLE \u003d \"Workman\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"    public static final InternshipStatus.State DEFAULT_STATUS \u003d InternshipStatus.State.ACCEPTED;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"    public static final String DEFAULT_INTERVIEW_DATE \u003d \"2022-11-11 11:11\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"    private InternshipId internshipId;","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"    private CompanyName name;","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"    private InternshipRole role;","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"    private InternshipStatus status;","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"    private InterviewDate interviewDate;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"    private PersonId personId;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"     * Creates a {@code InternshipBuilder} with the default details.","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"        internshipId \u003d new InternshipId(DEFAULT_INTERNSHIP_ID);","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"        name \u003d new CompanyName(DEFAULT_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"        role \u003d new InternshipRole(DEFAULT_ROLE);","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"        status \u003d new InternshipStatus(DEFAULT_STATUS);","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"        interviewDate \u003d new InterviewDate(DEFAULT_INTERVIEW_DATE);","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"        personId \u003d null;","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"     * Initializes the InternshipBuilder with the data of {@code internshipToCopy}.","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder(Internship internshipToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"        personId \u003d internshipToCopy.getContactPersonId();","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"        name \u003d internshipToCopy.getCompanyName();","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"        role \u003d internshipToCopy.getInternshipRole();","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"        status \u003d internshipToCopy.getInternshipStatus();","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"        internshipId \u003d internshipToCopy.getInternshipId();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"        interviewDate \u003d internshipToCopy.getInterviewDate();","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"chengda300"},"content":"     * Sets the {@code PersonId} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"chengda300"},"content":"     * This refers to the contact person linked to the internship.","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder withPersonId(Integer id) {","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"chengda300"},"content":"        this.personId \u003d new PersonId(id);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"chengda300"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"chengda300"},"content":"     * Sets the {@code Company Name} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder withName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"        this.name \u003d new CompanyName(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"chengda300"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"chengda300"},"content":"     * Sets the {@code Role} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder withRole(String role) {","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"chengda300"},"content":"        this.role \u003d new InternshipRole(role);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"chengda300"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"chengda300"},"content":"     * Sets the {@code InternshipId} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder withInternshipId(Integer id) {","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"chengda300"},"content":"        this.internshipId \u003d new InternshipId(id);","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"chengda300"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"chengda300"},"content":"     * Sets the {@code Status} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder withStatus(String status) {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"chengda300"},"content":"        try {","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"chengda300"},"content":"            this.status \u003d ParserUtil.parseInternshipStatus(status);","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"chengda300"},"content":"            return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"chengda300"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"chengda300"},"content":"            return null;","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"chengda300"},"content":"     * Sets the {@code Interview Date} of the {@code Internship} that we are building.","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"chengda300"},"content":"    public InternshipBuilder withInterviewDate(String date) {","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"chengda300"},"content":"        this.interviewDate \u003d new InterviewDate(date);","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"chengda300"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"chengda300"},"content":"    public Internship build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"chengda300"},"content":"        return new Internship(internshipId, name, role, status, personId, interviewDate);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chengda300":113}},{"path":"src/test/java/seedu/address/testutil/InternshipUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import seedu.address.logic.commands.AddInternshipCommand;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":" * A utility class for Internship.","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"public class InternshipUtil {","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"     * Returns an add command string for adding the {@code internship}.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"    public static String getAddCommand(Internship internship) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":"        return AddInternshipCommand.COMMAND_WORD + \" \" + getInternshipDetails(internship);","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"     * Returns the part of command string for the given {@code internship}\u0027s details.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"    public static String getInternshipDetails(Internship internship) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"        sb.append(PREFIX_COMPANY_NAME + internship.getCompanyName().fullName + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"        sb.append(PREFIX_INTERNSHIP_ROLE + internship.getInternshipRole().toString() + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"        sb.append(PREFIX_INTERNSHIP_STATUS + internship.getInternshipStatus().toString() + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"        sb.append(PREFIX_INTERVIEW_DATE + internship.getInterviewDate().toString());","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"    /*","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"            } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"chengda300"},"content":"    */","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chengda300":56}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public static final Integer DEFAULT_PERSON_ID \u003d 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    private PersonId personId;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    private InternshipId internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        personId \u003d new PersonId(DEFAULT_PERSON_ID);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"        personId \u003d personToCopy.getPersonId();","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d personToCopy.getInternshipId();","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"     * Sets the {@code PersonId} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    public PersonBuilder withPersonId(Integer id) {","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"        this.personId \u003d new PersonId(id);","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"     * Sets the {@code InternshipId} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"    public PersonBuilder withInternshipId(Integer id) {","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d new InternshipId(id);","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"tanxuanyun"},"content":"        return new Person(personId, name, phone, email, internshipId, tags);","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"tanxuanyun":1,"nqt230":20,"-":88}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"        person.getTags().stream()","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"                .forEach(s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \"));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"ish1506":3,"nqt230":2,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"    public static final Index INDEX_FIRST_INTERNSHIP \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"    public static final Index INDEX_SECOND_INTERNSHIP \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"    public static final Index INDEX_THIRD_INTERNSHIP \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"chengda300":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalInternships.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"package seedu.address.testutil;","lastModifiedDate":"2022-10-09"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_INTERVIEW_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_INTERVIEW_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_NAME_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_NAME_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_ROLE_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_ROLE_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_STATUS_ABC;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.InternshipCommandTestUtil.VALID_STATUS_BOBBY;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"chengda300"},"content":" * A utility class containing a list of {@code Internship} objects to be used in tests.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"chengda300"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"chengda300"},"content":"public class TypicalInternships {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"chengda300"},"content":"    public static final Internship ALICE \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(0)","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"chengda300"},"content":"            .withName(\"Alice Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Cleaner\")","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"PENDING\")","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-10-10 10:10\")","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"chengda300"},"content":"    public static final Internship BENSON \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(1)","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"chengda300"},"content":"            .withName(\"Benson Electronics Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Sales Admin Assistant\")","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"ACCEPTED\")","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-10-11 10:10\")","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"chengda300"},"content":"    public static final Internship CARL \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(2)","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"chengda300"},"content":"            .withName(\"Carl Automobiles Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Cashier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"PENDING\")","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-11-10 12:10\")","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"chengda300"},"content":"    public static final Internship DANIEL \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(3)","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"chengda300"},"content":"            .withName(\"Daniel Consultancy Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Receptionist\")","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"ACCEPTED\")","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-12-22 13:40\")","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"chengda300"},"content":"    public static final Internship ELLE \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(4)","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"chengda300"},"content":"            .withName(\"Elle Massage Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Data Analyst\")","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"COMPLETED\")","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-02-08 15:30\")","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"chengda300"},"content":"    public static final Internship FIONA \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(5)","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"chengda300"},"content":"            .withName(\"Fiona Constructions Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Architecture Designer\")","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"PENDING\")","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-12-22 11:10\")","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"chengda300"},"content":"    public static final Internship GEORGE \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(6)","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"chengda300"},"content":"            .withName(\"George Consultancy Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Cleaner\")","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"REJECTED\")","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-05-25 08:10\")","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"chengda300"},"content":"    public static final Internship HOON \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(7)","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"chengda300"},"content":"            .withName(\"Hoon Logistics Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Deliveryman\")","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"REJECTED\")","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2021-12-04 14:22\")","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"chengda300"},"content":"    public static final Internship IDA \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"chengda300"},"content":"            .withInternshipId(8)","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"chengda300"},"content":"            .withName(\"Ida Ideas Pte Ltd\")","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"chengda300"},"content":"            .withRole(\"Planning Assistant\")","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"chengda300"},"content":"            .withStatus(\"ACCEPTED\")","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(\"2022-03-05 14:48\")","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"chengda300"},"content":"    // Manually added - Internship\u0027s details found in {@code InternshipCommandTestUtil}","lastModifiedDate":"2022-10-10"},{"lineNumber":89,"author":{"gitId":"chengda300"},"content":"    public static final Internship ABC \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"chengda300"},"content":"            .withName(VALID_NAME_ABC).withRole(VALID_ROLE_ABC)","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"chengda300"},"content":"            .withStatus(VALID_STATUS_ABC)","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(VALID_INTERVIEW_ABC)","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"chengda300"},"content":"    public static final Internship BOBBY \u003d new InternshipBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"chengda300"},"content":"            .withName(VALID_NAME_BOBBY).withRole(VALID_ROLE_BOBBY)","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"chengda300"},"content":"            .withStatus(VALID_STATUS_BOBBY)","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"chengda300"},"content":"            .withInterviewDate(VALID_INTERVIEW_BOBBY)","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"chengda300"},"content":"            .build();","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"chengda300"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"chengda300"},"content":"    private TypicalInternships() {} // prevents instantiation","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"chengda300"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"chengda300"},"content":"     * Returns an {@code AddressBook} with all the typical internships.","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"chengda300"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"chengda300"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"chengda300"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"chengda300"},"content":"        for (Internship internship : getTypicalInternships()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"chengda300"},"content":"            ab.addInternship(internship);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"chengda300"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"chengda300"},"content":"        return ab;","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"chengda300"},"content":"    public static List\u003cInternship\u003e getTypicalInternships() {","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"chengda300"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, HOON, IDA));","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"chengda300"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"chengda300"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"chengda300":118}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"import static seedu.address.logic.commands.PersonCommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"            .withPersonId(0)","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"            .withPersonId(1)","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            .withPersonId(2)","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            .withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            .withPersonId(3)","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"            .withPersonId(4)","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"            .withPersonId(5)","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"            .withPersonId(6)","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2022-10-05"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":80,"author":{"gitId":"chengda300"},"content":"    // Manually added - Person\u0027s details found in {@code PersonCommandTestUtil}","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"chengda300":9,"nqt230":62,"-":40}}]
