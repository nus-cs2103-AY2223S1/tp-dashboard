[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"* This is a brownfield project done by Computer Science students from NUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"* It is named `InterNUS` because it was created for NUS students to manage their internship applications and contacts.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"* For the detailed documentation of this project, see the **[InterNUS Product Website](https://ay2223s1-cs2103t-f11-1.github.io/tp/)**.","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"* This project is based on the AddressBook Level-3 project by the [**SE-EDU** initiative](https://se-education.org/addressbook-level3/).","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ish1506":7,"-":3}},{"path":"config/checkstyle/suppressions.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE suppressions PUBLIC","lastModifiedDate":"2017-08-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/suppressions_1_2.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003csuppressions\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Main\\.java\"/\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Main\\.java\"/\u003e","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/suppressions\u003e","lastModifiedDate":"2017-08-20"}],"authorContributionMap":{"ish1506":2,"-":10}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"### Lee I-Shiuan","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"\u003cimg src\u003d\"images/ish1506.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"[[github](http://github.com/ish1506)]","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"[[portfolio](team/ish1506.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"* Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"### Tan Xuan Yun","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"\u003cimg src\u003d\"images/tanxuanyun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"[[github](http://github.com/tanxuanyun)]","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"[[portfolio](team/tanxuanyun.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"* Role: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"* Responsibilities: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"chengda300"},"content":"### Lee Cheng Da","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chengda300"},"content":"\u003cimg src\u003d\"images/chengda300.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"chengda300"},"content":"[[github](http://github.com/chengda300)] [[portfolio](team/chengda300.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"chengda300"},"content":"* Responsibilities: Feature enhancements","lastModifiedDate":"2022-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"LiuFangrui"},"content":"### Liu Fangrui","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"LiuFangrui"},"content":"\u003cimg src\u003d\"images/liufangrui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"LiuFangrui"},"content":"[[github](http://github.com/liufangrui)]","lastModifiedDate":"2022-09-29"},{"lineNumber":46,"author":{"gitId":"LiuFangrui"},"content":"[[portfolio](team/liufangrui.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"LiuFangrui"},"content":"* Role: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"LiuFangrui"},"content":"* Responsibilities: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"### Ng Qi Ting","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"\u003cimg src\u003d\"images/nqt230.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"[[github](http://github.com/nqt230)]","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"[[portfolio](team/nqt230.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanxuanyun":6,"ish1506":5,"chengda300":4,"nqt230":4,"-":34,"LiuFangrui":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-F11-1/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"nqt230"},"content":"* Can type fast","lastModifiedDate":"2022-09-30"},{"lineNumber":261,"author":{"gitId":"nqt230"},"content":"* Have some experience with Command Line Interfaces","lastModifiedDate":"2022-09-30"},{"lineNumber":262,"author":{"gitId":"nqt230"},"content":"* Are actively seeking internship opportunities","lastModifiedDate":"2022-09-30"},{"lineNumber":263,"author":{"gitId":"nqt230"},"content":"* Having trouble keeping track of multiple internship applications and their progress (over multiple rounds)","lastModifiedDate":"2022-09-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":266,"author":{"gitId":"nqt230"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-30"},{"lineNumber":267,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":268,"author":{"gitId":"nqt230"},"content":"* Keep track of multiple company contacts and applications’ progress simultaneously (the reply rates from companies are very low)","lastModifiedDate":"2022-09-30"},{"lineNumber":269,"author":{"gitId":"nqt230"},"content":"* Keep track of colleagues information post-internship","lastModifiedDate":"2022-09-30"},{"lineNumber":270,"author":{"gitId":"nqt230"},"content":"* Keeping track of internship application windows of multiple companies","lastModifiedDate":"2022-09-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                                             | So that I can…​                                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"nqt230"},"content":"|----------|------------------|----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":279,"author":{"gitId":"nqt230"},"content":"| * * *    | First time user  | I can see a summary of commands                                                                          | I can know the functionalities of the app quickly                                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":280,"author":{"gitId":"nqt230"},"content":"| * * *    | First time user  | I can delete internship status                                                                           | so that I know that I have finished my interview process with the company                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":281,"author":{"gitId":"nqt230"},"content":"| * * *    | First time user  | I can see suggested information I need to fill in while I\u0027m adding a contact                             | I don\u0027t have to keep referring to the help page to know the information I can add (email, company etc) |","lastModifiedDate":"2022-09-30"},{"lineNumber":282,"author":{"gitId":"nqt230"},"content":"| * * *    | Second time user | I can pre-load my data from the previous session                                                         | I do not need to re-add everyone again                                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":283,"author":{"gitId":"nqt230"},"content":"| * * *    | Second time user | I can purge all current data                                                                             | I can get rid of sample contacts I used for exploring the app                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":284,"author":{"gitId":"nqt230"},"content":"| * * *    | Lazy user        | search contacts by groups or tags                                                                        | I do not need to manually filter them                                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":285,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can edit contacts                                                                                      | I do not need to delete and re-add to fix a typo error                                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":286,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | delete contacts individually                                                                             |                                                                                                        |","lastModifiedDate":"2022-09-30"},{"lineNumber":287,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | add the company name to each contact                                                                     | I know which company the contact is representing                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":288,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | navigate the address book easily                                                                         | using the address book should not be a headache by itself                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":289,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can sort contact by interview status                                                                   | so that I can know which company interview I can prepare for                                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":290,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can sort contact by interview date                                                                     | so that I can know when to prepare for interview                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":291,"author":{"gitId":"nqt230"},"content":"| * * *    | User             | I can see a reminder of the next upcoming interview on the homescreen                                    | so that I know the upcoming interview without opening the address book                                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":292,"author":{"gitId":"nqt230"},"content":"| * *      | First time user  | I can view user guide                                                                                    | so that I can know all the functions                                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":293,"author":{"gitId":"nqt230"},"content":"| * *      | First time user  | I can see the app populated with sample contacts                                                         | I can easily see how the app will look like when it is in use                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":294,"author":{"gitId":"nqt230"},"content":"| * *      | Second time user | see tips suggesting shortcuts or shortforms                                                              | I can potentially achieve faster commands and actions                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":295,"author":{"gitId":"nqt230"},"content":"| * *      | Second time user | see a summary of the internship information I have keyed in so far on starting the app                   | I can know where I left off from the last time I used the app                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":296,"author":{"gitId":"nqt230"},"content":"| * *      | Forgetful user   | search contacts by the time it was added                                                                 | I can figure out whom I added at that time                                                             |","lastModifiedDate":"2022-09-30"},{"lineNumber":297,"author":{"gitId":"nqt230"},"content":"| * *      | Expert user      | Create tags with different priorities                                                                    | Sort contacts by priority                                                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":298,"author":{"gitId":"nqt230"},"content":"| * *      | Expert user      | Mass import contacts directly                                                                            | Use the app on another device                                                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":299,"author":{"gitId":"nqt230"},"content":"| * *      | Expert user      | Mass edit contacts (e.g. find and replace/set)                                                           | Set common information amongst groups of contacts quickly                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":300,"author":{"gitId":"nqt230"},"content":"| * *      | User             | archive contacts                                                                                         | I know which internships I\u0027ve been rejected from                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":301,"author":{"gitId":"nqt230"},"content":"| * *      | User             | Add colors to tags and contacts                                                                          | Distinguish between contacts easier in the GUI                                                         |","lastModifiedDate":"2022-09-30"},{"lineNumber":302,"author":{"gitId":"nqt230"},"content":"| * *      | User             | I can purge all interview status                                                                         | so that I can still save all contact after I have found a job                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":303,"author":{"gitId":"nqt230"},"content":"| *        | First time user  | I can update the application process attached to a company (application date, round1, interview dates..) | I can see my progress for the internships                                                              |","lastModifiedDate":"2022-09-30"},{"lineNumber":304,"author":{"gitId":"nqt230"},"content":"| *        | Lazy user        | Leaving halfway when inputting contact information saves it as draft and lets me continue from last time | I dont lose my progress when accidentally leaving or can leave temporarily to work on it next time     |","lastModifiedDate":"2022-09-30"},{"lineNumber":305,"author":{"gitId":"nqt230"},"content":"| *        | Forgetful user   | I can sort the companies by upcoming interview dates                                                     | I can see a clear timeline and prevent clashing dates                                                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":306,"author":{"gitId":"nqt230"},"content":"| *        | Expert user      | Create email templates per company                                                                       | Easily draft up internship application emails                                                          |","lastModifiedDate":"2022-09-30"},{"lineNumber":307,"author":{"gitId":"nqt230"},"content":"| *        | User             | add job roles to each contact                                                                            | I know which role I\u0027m contacting that particular person for (front-end, back-end etc)                  |","lastModifiedDate":"2022-09-30"},{"lineNumber":308,"author":{"gitId":"nqt230"},"content":"| *        | User             | Personalize GUI colors and color themes (light mode, dark mode etc.)                                     | Make the app more visually appealing                                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"nqt230"},"content":"(For all use cases below, the **System** is the `InterNUS` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-30"},{"lineNumber":315,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":316,"author":{"gitId":"nqt230"},"content":"**Use case: UC1 - Delete a person**","lastModifiedDate":"2022-09-30"},{"lineNumber":317,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":318,"author":{"gitId":"nqt230"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":319,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":320,"author":{"gitId":"nqt230"},"content":"1.  User requests to list persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":321,"author":{"gitId":"nqt230"},"content":"2.  InterNUS shows a list of persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":322,"author":{"gitId":"nqt230"},"content":"3.  User requests to delete a specific person in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":323,"author":{"gitId":"nqt230"},"content":"4.  InterNUS deletes the person.","lastModifiedDate":"2022-09-30"},{"lineNumber":324,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":325,"author":{"gitId":"nqt230"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":326,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":327,"author":{"gitId":"nqt230"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":328,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":329,"author":{"gitId":"nqt230"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":330,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":331,"author":{"gitId":"nqt230"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":332,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":333,"author":{"gitId":"nqt230"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":334,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":335,"author":{"gitId":"nqt230"},"content":"    * 3a1. InterNUS shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":336,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":337,"author":{"gitId":"nqt230"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":338,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":339,"author":{"gitId":"nqt230"},"content":"* 3b. The person found at the index is a contact person for an internship","lastModifiedDate":"2022-09-30"},{"lineNumber":340,"author":{"gitId":"nqt230"},"content":"    * 3b1. InterNUS looks up the affected internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":341,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":342,"author":{"gitId":"nqt230"},"content":"    * 3b2. InterNUS removes the contact person from the internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":343,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":344,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2022-09-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":346,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":347,"author":{"gitId":"nqt230"},"content":"**Use case: UC2 - Delete an internship**","lastModifiedDate":"2022-09-30"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":349,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":351,"author":{"gitId":"nqt230"},"content":"1.  User requests to list internships.","lastModifiedDate":"2022-09-30"},{"lineNumber":352,"author":{"gitId":"nqt230"},"content":"2.  InterNUS shows a list of internships.","lastModifiedDate":"2022-09-30"},{"lineNumber":353,"author":{"gitId":"nqt230"},"content":"3.  User requests to delete a specific internship in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":354,"author":{"gitId":"nqt230"},"content":"4.  InterNUS deletes the internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":364,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":366,"author":{"gitId":"nqt230"},"content":"    * 3a1. InterNUS shows an error message.","lastModifiedDate":"2022-09-30"},{"lineNumber":367,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":368,"author":{"gitId":"nqt230"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":369,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":370,"author":{"gitId":"nqt230"},"content":"* 3b. The internship found at the index is associated with a person.","lastModifiedDate":"2022-09-30"},{"lineNumber":371,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":372,"author":{"gitId":"nqt230"},"content":"    * 3b1. InterNUS looks up the affected person.","lastModifiedDate":"2022-09-30"},{"lineNumber":373,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":374,"author":{"gitId":"nqt230"},"content":"    * 3b2. InterNUS removes the internship from the person.","lastModifiedDate":"2022-09-30"},{"lineNumber":375,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":376,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2022-09-30"},{"lineNumber":377,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":379,"author":{"gitId":"nqt230"},"content":"**Use case: UC3 - Add a contact person to an internship**","lastModifiedDate":"2022-09-30"},{"lineNumber":380,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":381,"author":{"gitId":"nqt230"},"content":"**MSS**","lastModifiedDate":"2022-09-30"},{"lineNumber":382,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":383,"author":{"gitId":"nqt230"},"content":"1. User adds an internship to the internship list","lastModifiedDate":"2022-09-30"},{"lineNumber":384,"author":{"gitId":"nqt230"},"content":"2. InterNUS creates a new internship entry","lastModifiedDate":"2022-09-30"},{"lineNumber":385,"author":{"gitId":"nqt230"},"content":"3. User adds a person to the contact list","lastModifiedDate":"2022-09-30"},{"lineNumber":386,"author":{"gitId":"nqt230"},"content":"4. InterNUS creates a new person contact","lastModifiedDate":"2022-09-30"},{"lineNumber":387,"author":{"gitId":"nqt230"},"content":"5. User requests to set a specific person as the contact person for a specific internship","lastModifiedDate":"2022-09-30"},{"lineNumber":388,"author":{"gitId":"nqt230"},"content":"6. InterNUS sets the person as the contact person for the internship","lastModifiedDate":"2022-09-30"},{"lineNumber":389,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":390,"author":{"gitId":"nqt230"},"content":"    Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":391,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":392,"author":{"gitId":"nqt230"},"content":"**Extensions**","lastModifiedDate":"2022-09-30"},{"lineNumber":393,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":394,"author":{"gitId":"nqt230"},"content":"* 1a. The desired internship to set the contact person for is already in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":395,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":396,"author":{"gitId":"nqt230"},"content":"    * 1a1. No new internship is created.","lastModifiedDate":"2022-09-30"},{"lineNumber":397,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":398,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":399,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":400,"author":{"gitId":"nqt230"},"content":"* 3a. The desired person to set as the contact person is already in the list","lastModifiedDate":"2022-09-30"},{"lineNumber":401,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":402,"author":{"gitId":"nqt230"},"content":"    * 3a1. No new person is created.","lastModifiedDate":"2022-09-30"},{"lineNumber":403,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":404,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2022-09-30"},{"lineNumber":405,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"nqt230"},"content":"**Use case: UC4 - Add an interview date for an internship**","lastModifiedDate":"2022-09-30"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"nqt230"},"content":"1. User adds an internship to the internship list.","lastModifiedDate":"2022-09-30"},{"lineNumber":412,"author":{"gitId":"nqt230"},"content":"2. InterNUS creates a new internship entry.","lastModifiedDate":"2022-09-30"},{"lineNumber":413,"author":{"gitId":"nqt230"},"content":"3. User requests to set the interview date of a specific internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":414,"author":{"gitId":"nqt230"},"content":"4. InterNUS sets the interview date for the internship.","lastModifiedDate":"2022-09-30"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"nqt230"},"content":"* 1a. The desired internship to set the interview date for is already in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"nqt230"},"content":"    * 1a1. No new internship is created.","lastModifiedDate":"2022-09-30"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"nqt230"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-09-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"nqt230"},"content":"* 3a. The interview date given is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"nqt230"},"content":"    * 3a1. InterNUS notifies the user why the given date is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":429,"author":{"gitId":"nqt230"},"content":"    ","lastModifiedDate":"2022-09-30"},{"lineNumber":430,"author":{"gitId":"nqt230"},"content":"      Use case ends.","lastModifiedDate":"2022-09-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":435,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"tanxuanyun"},"content":"2. Should be able to hold up to 1000 persons and 1000 internships without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-29"},{"lineNumber":439,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"tanxuanyun"},"content":"4. A user will not be able to communicate with the people in the contact. ","lastModifiedDate":"2022-09-29"},{"lineNumber":441,"author":{"gitId":"tanxuanyun"},"content":"5. A user will not be able to share contacts with others.","lastModifiedDate":"2022-09-29"},{"lineNumber":442,"author":{"gitId":"tanxuanyun"},"content":"6. Should work only for single user.","lastModifiedDate":"2022-09-29"},{"lineNumber":443,"author":{"gitId":"tanxuanyun"},"content":"7. The data should be stored in a human editable text file","lastModifiedDate":"2022-09-29"},{"lineNumber":444,"author":{"gitId":"tanxuanyun"},"content":"8. The GUI should work well for standard screen resolutions 1920x1080 and higher and for screen scales 100% and 125%. ","lastModifiedDate":"2022-09-29"},{"lineNumber":445,"author":{"gitId":"tanxuanyun"},"content":"9. The GUI should be usable for resolutions 1280x720 and higher and for screen scales 150%.","lastModifiedDate":"2022-09-29"},{"lineNumber":446,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanxuanyun":8,"nqt230":137,"-":361}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"InterNUS is a desktop app for **managing internship applications, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"chengda300"},"content":"1. Download the latest `internus.jar` from [here](https://github.com/AY2223S1-CS2103T-F11-1/tp/releases).","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chengda300"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your app.","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"tanxuanyun"},"content":"Displays a list of commands and a link to the user guide.","lastModifiedDate":"2022-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"tanxuanyun"},"content":"`Screen shot to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"tanxuanyun"},"content":"### Adding a person: `addp`","lastModifiedDate":"2022-09-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"tanxuanyun"},"content":"Adds a person to InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"tanxuanyun"},"content":"Format: `addp n/NAME e/EMAIL [p/PHONE_NUMBER] [i/INTERNSHIP] [t/TAG]…​`","lastModifiedDate":"2022-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"tanxuanyun"},"content":"A person can have any number of tags (including 0). Phone number is optional, and internship is optional too.","lastModifiedDate":"2022-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"tanxuanyun"},"content":"* `addp n/John Doe e/johnd@example.com p/98765432 i/Shopee_Front End Engineer`","lastModifiedDate":"2022-09-29"},{"lineNumber":77,"author":{"gitId":"tanxuanyun"},"content":"* `addp n/Betsy Crowe t/friend e/betsycrowe@example.com`","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":79,"author":{"gitId":"tanxuanyun"},"content":"### Adding an Internship: `addi`","lastModifiedDate":"2022-09-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"tanxuanyun"},"content":"Adds an Internship to InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":83,"author":{"gitId":"tanxuanyun"},"content":"Format: `addi c/COMPANY_NAME r/ROLE s/STATUS [d/DATE_OF_INTERVIEW]…​`","lastModifiedDate":"2022-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":85,"author":{"gitId":"tanxuanyun"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2022-09-29"},{"lineNumber":86,"author":{"gitId":"tanxuanyun"},"content":"Date of interview can be left blank, since it is possible that an interview is not scheduled yet.","lastModifiedDate":"2022-09-29"},{"lineNumber":87,"author":{"gitId":"tanxuanyun"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":88,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"tanxuanyun"},"content":"Examples:","lastModifiedDate":"2022-09-29"},{"lineNumber":90,"author":{"gitId":"tanxuanyun"},"content":"* `addi n/TikTok r/Data Engineer s/rejected`","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"tanxuanyun"},"content":"* `addi n/Grab r/Full Stack Developer s/awaiting interview d/2020-12-20`","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"chengda300"},"content":"### Listing all persons : `list -p`","lastModifiedDate":"2022-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"chengda300"},"content":"Shows a list of all persons in InterNUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"chengda300"},"content":"Format: `list -p`","lastModifiedDate":"2022-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"chengda300"},"content":"### Listing all internships : `list -i`","lastModifiedDate":"2022-09-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"chengda300"},"content":"Shows a list of all internships in InterNUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"chengda300"},"content":"Format: `list -i`","lastModifiedDate":"2022-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"chengda300"},"content":"### Editing a person or internship : `edit`","lastModifiedDate":"2022-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"chengda300"},"content":"Edits an existing person or internship in InterNUS, depending on the type of list currently displayed in InterNUS.","lastModifiedDate":"2022-09-27"},{"lineNumber":108,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":109,"author":{"gitId":"chengda300"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2022-09-27"},{"lineNumber":110,"author":{"gitId":"chengda300"},"content":"- Edits the person or internship at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2022-09-27"},{"lineNumber":111,"author":{"gitId":"chengda300"},"content":"- Existing values will be updated to the input values. However, compulsory fields when adding the person or internship cannot be edited to be empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":112,"author":{"gitId":"chengda300"},"content":"- When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2022-09-27"},{"lineNumber":113,"author":{"gitId":"chengda300"},"content":"- You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2022-09-27"},{"lineNumber":114,"author":{"gitId":"chengda300"},"content":"- You can remove the person’s phone number or internship associated with the person by typing `p/` or `i/` without specifying any text after it, respectively.","lastModifiedDate":"2022-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"chengda300"},"content":"- `list -p` followed by `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2022-09-27"},{"lineNumber":117,"author":{"gitId":"chengda300"},"content":"- `list -p` followed by `edit 2 n/Betsy Crower t/ p/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags, as well as deleting the phone number associated with the person, without deleting the internship associated with the person.","lastModifiedDate":"2022-09-27"},{"lineNumber":118,"author":{"gitId":"chengda300"},"content":"- `list -i` followed by `edit 2 s/Rejected d/` Edits the status of the 2nd internship to `Rejected` and deletes the date of interview.","lastModifiedDate":"2022-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"### Locating persons by name : `find -p`","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"Format: `find -p KEYWORD`","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"- The search is case-insensitive. e.g **hans** will match **Hans**","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"- Only the person name is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"- Partial words will be matched e.g. **Han** will match **Hans**","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"Examples:","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"- `find -p John` returns **john** and **John Doe**","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"### Locating internships by name : `find -i`","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"Finds internships whose names contain any of the given keywords.","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"Format: `find -i KEYWORD`","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"- The search is case-insensitive. e.g **abc pte ltd_software engineer** will match **ABC Pte Ltd_Software Engineer**","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"- Only the internship name is searched.","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"- Partial words will be matched e.g. **ltd** will match **XYZ Ltd_Full Stack**","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"- `find -i` **Shopee** returns **Shopee_Front End Engineer** and **Shopee_Full Stack**","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"- `find -i` **Shopee_Front** returns **Shopee_Front End Engineer**","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"- `find -i` **Back End** returns **ByteDance_Back End Engineer** and **Google_Back End Engineer**","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"LiuFangrui"},"content":"### Deleting a person or internship by index : `delete`","lastModifiedDate":"2022-09-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"LiuFangrui"},"content":"Deletes the specified person or internship from InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"LiuFangrui"},"content":"* Deletes the person or internship with the specific `INDEX` in the currently displayed list.","lastModifiedDate":"2022-09-29"},{"lineNumber":156,"author":{"gitId":"LiuFangrui"},"content":"* The index refers to the index number shown in the currently displayed list.","lastModifiedDate":"2022-09-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"LiuFangrui"},"content":"* `list -i` followed by `delete 2` deletes the 2nd internship in InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":161,"author":{"gitId":"LiuFangrui"},"content":"* `find -p Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2022-09-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"LiuFangrui"},"content":"Clears all entries from InterNUS.","lastModifiedDate":"2022-09-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"ish1506"},"content":"InterNUS data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"ish1506"},"content":"InterNUS data is saved as a JSON file. `[JAR file location]`/data/addressbook.json.","lastModifiedDate":"2022-09-27"},{"lineNumber":182,"author":{"gitId":"ish1506"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2022-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":185,"author":{"gitId":"ish1506"},"content":"If your changes to the data file makes its format invalid, InterNUS will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2022-09-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"| Action     | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"nqt230"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"nqt230"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"nqt230"},"content":"| **Clear**  | `clear`                                                                                                                                                               |","lastModifiedDate":"2022-09-30"},{"lineNumber":207,"author":{"gitId":"nqt230"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2022-09-30"},{"lineNumber":208,"author":{"gitId":"nqt230"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2022-09-30"},{"lineNumber":209,"author":{"gitId":"nqt230"},"content":"| **Find**   | `find -i/p KEYWORD`\u003cbr\u003e e.g., `find -p James Jake`, `find -i frontend engineer`                                                                                       |","lastModifiedDate":"2022-09-30"},{"lineNumber":210,"author":{"gitId":"nqt230"},"content":"| **List**   | `list`                                                                                                                                                                |","lastModifiedDate":"2022-09-30"},{"lineNumber":211,"author":{"gitId":"nqt230"},"content":"| **Help**   | `help`                                                                                                                                                                |","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"tanxuanyun":20,"chengda300":20,"ish1506":4,"nqt230":29,"-":131,"LiuFangrui":7}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"title: InterNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-F11-1/tp/branch/master/graph/badge.svg?token\u003d850AJ9TRYH)](https://codecov.io/gh/AY2223S1-CS2103T-F11-1/tp)","lastModifiedDate":"2022-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"**AddressBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ish1506":2,"-":17}},{"path":"docs/team/chengda300.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chengda300"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"chengda300"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"chengda300"},"content":"title: Lee Cheng Da\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"chengda300"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"chengda300"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"chengda300"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"chengda300"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"chengda300"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dchengda300)","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"chengda300"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"chengda300"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"chengda300"},"content":"  * About Us:","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"chengda300"},"content":"    * Added my own details","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"chengda300":16}},{"path":"docs/team/ish1506.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ish1506"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"ish1506"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"ish1506"},"content":"title: Lee I-Shiuan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"ish1506"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"ish1506"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"ish1506"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ish1506"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"ish1506"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"ish1506"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"ish1506"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"ish1506"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"ish1506"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"ish1506"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dish1506\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"ish1506"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"ish1506"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"ish1506"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"ish1506"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"ish1506"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"ish1506"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"ish1506"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":33,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"ish1506"},"content":"* **Community**:","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"ish1506"},"content":"    * PRs reviewed (with non-trivial review comments): ([to be added soon]())","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"ish1506"},"content":"* **Tools**:","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"ish1506"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"ish1506"},"content":"","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ish1506":39}},{"path":"docs/team/liufangrui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LiuFangrui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"LiuFangrui"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"LiuFangrui"},"content":"title: Liu Fangrui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"LiuFangrui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"LiuFangrui"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"LiuFangrui"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"LiuFangrui"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"LiuFangrui"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"LiuFangrui"},"content":"  * What it does: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"LiuFangrui"},"content":"  * Justification: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"LiuFangrui"},"content":"  * Highlights: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"LiuFangrui"},"content":"  * Credits: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"LiuFangrui"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"LiuFangrui"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dliufangrui\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"LiuFangrui"},"content":"* **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"LiuFangrui"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"LiuFangrui"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"LiuFangrui"},"content":"  * User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"LiuFangrui"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"LiuFangrui"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":32,"author":{"gitId":"LiuFangrui"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":34,"author":{"gitId":"LiuFangrui"},"content":"* **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"},{"lineNumber":36,"author":{"gitId":"LiuFangrui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"LiuFangrui"},"content":"* **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"LiuFangrui"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"LiuFangrui":38}},{"path":"docs/team/nqt230.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"layout: page","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"title: Ng Qi Ting\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"---","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"InterNUS is a desktop app for managing internship applications, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, InterNUS can get your internship management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dnqt230\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"* **Project management**:","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    * User Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"* **Community**:","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    * PRs reviewed (with non-trivial review comments): ([to be added soon]())","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"* **Tools**:","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"nqt230":41}},{"path":"docs/team/tanxuanyun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanxuanyun"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"tanxuanyun"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"tanxuanyun"},"content":"title: Tan Xuan Yun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"tanxuanyun"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"tanxuanyun"},"content":"### Project: InterNUS","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"tanxuanyun"},"content":"InterNUS is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"tanxuanyun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"tanxuanyun"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"tanxuanyun"},"content":"  * What it does: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"tanxuanyun"},"content":"  * Justification: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"tanxuanyun"},"content":"  * Highlights: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"tanxuanyun"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dtanxuanyun\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"tanxuanyun"},"content":"* **Project management**:","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"tanxuanyun"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"tanxuanyun"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"tanxuanyun"},"content":"  * User Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"tanxuanyun"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"tanxuanyun"},"content":"  * Developer Guide:","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"tanxuanyun"},"content":"    * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"tanxuanyun"},"content":"* **Community**:","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"tanxuanyun"},"content":"  * PRs reviewed (with non-trivial review comments): ([to be added soon]())","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"tanxuanyun"},"content":"* **Tools**:","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"tanxuanyun"},"content":"  * `to be added soon`","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"tanxuanyun"},"content":"","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"tanxuanyun":38,"nqt230":1}},{"path":"src/main/java/seedu/address/logic/commands/AddInternshipCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":" * Adds an internship to the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"public class AddInternshipCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    public static final String COMMAND_WORD \u003d \"addi\";","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a internship to the address book. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"            + PREFIX_COMPANY_NAME + \"COMPANY_NAME \"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_ROLE + \"INTERNSHIP_ROLE \"","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_STATUS + \"INTERNSHIP_STATUS \"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"            + PREFIX_PERSON_ID + \"PERSON_ID \"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERVIEW_DATE + \"INTERVIEW_DATE\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            + PREFIX_COMPANY_NAME + \"Google \"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_ROLE + \"Frontend Engineer \"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERNSHIP_STATUS + \"PENDING \"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            + PREFIX_PERSON_ID + \"1 \"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            + PREFIX_INTERVIEW_DATE + \"2022-10-21 12:00 \";","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship added: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the address book\";","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"    private final CompanyName companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    private final InternshipRole internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"    private final InternshipStatus internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    private final PersonId contactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    private final InterviewDate interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add the specified {@code Internship}","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    public AddInternshipCommand(Internship internship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d internship.getCompanyName();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internship.getInternshipRole();","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internship.getInternshipStatus();","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d internship.getContactPersonId();","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d internship.getInterviewDate();","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add a {@code Internship} with the specified","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     * {@code name}, {@code phone}, {@code email}, {@code address},","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"     * {@code internshipId}, and {@code tags}.","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"    public AddInternshipCommand(","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"            CompanyName companyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"            InternshipRole internshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"            InternshipStatus internshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"            PersonId contactPersonId,","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"            InterviewDate interviewDate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(companyName, internshipRole, internshipStatus);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d contactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"        Person contactPerson \u003d model.findPersonById(contactPersonId);","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        Internship toAdd;","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"        if (contactPerson \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"            toAdd \u003d new Internship(","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(model.getNextInternshipId()),","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"                    companyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"                    internshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"                    internshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"                    interviewDate","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"            toAdd \u003d new Internship(","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(model.getNextInternshipId()),","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"                    companyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"                    internshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"                    internshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"                    contactPersonId,","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"                    interviewDate","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"        if (model.hasInternship(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"        model.addInternship(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"                || (other instanceof AddInternshipCommand // instanceof handles nulls","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 companyName.equals(((AddInternshipCommand) other).companyName)","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internshipRole.equals(((AddInternshipCommand) other).internshipRole)","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internshipStatus.equals(((AddInternshipCommand) other).internshipStatus)","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 contactPersonId !\u003d null \u0026\u0026 contactPersonId.equals(((AddInternshipCommand) other).contactPersonId)","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 interviewDate.equals(((AddInternshipCommand) other).interviewDate));","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"nqt230":127}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":" * Adds a person to the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    public static final String COMMAND_WORD \u003d \"addp\";","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"    private final Name name;","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    private final Email email;","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    private final InternshipId internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    private final Address address;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"        requireNonNull(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"        this.name \u003d person.getName();","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"        this.phone \u003d person.getPhone();","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        this.email \u003d person.getEmail();","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"        this.address \u003d person.getAddress();","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d person.getInternshipId();","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        this.tags.addAll(person.getTags());","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"     * Creates an AddCommand to add a {@code Person} with the specified","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"     * {@code name}, {@code phone}, {@code email}, {@code address},","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"     * {@code internshipId}, and {@code tags}.","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"    public AddPersonCommand(","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"            Name name,","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"            Phone phone,","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"            Email email,","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"            Address address,","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"            InternshipId internshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"            Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"        this.address \u003d address;","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"        Person toAdd;","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"        if (model.findInternshipById(internshipId) \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"            toAdd \u003d new Person(","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"                    new PersonId(model.getNextPersonId()),","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"                    name,","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"                    phone,","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"                    email,","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"                    address,","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"                    tags","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"            toAdd \u003d new Person(","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"                    new PersonId(model.getNextPersonId()),","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"                    name,","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"                    phone,","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                    email,","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"                    address,","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"                    internshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"                    tags","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"            );","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-05"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-05"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"        if (!(other instanceof AddPersonCommand)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-05"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand otherCommand \u003d (AddPersonCommand) other;","lastModifiedDate":"2022-10-05"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"        return name.equals(otherCommand.name)","lastModifiedDate":"2022-10-05"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 phone.equals(otherCommand.phone)","lastModifiedDate":"2022-10-05"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 email.equals(otherCommand.email)","lastModifiedDate":"2022-10-05"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 address.equals(otherCommand.address)","lastModifiedDate":"2022-10-05"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 Objects.equals(internshipId, otherCommand.internshipId)","lastModifiedDate":"2022-10-05"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 tags.equals(otherCommand.tags);","lastModifiedDate":"2022-10-05"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"nqt230":145}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        // personId should always be unchanged","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"        PersonId personId \u003d personToEdit.getPersonId();","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"        InternshipId updatedInternshipId \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"                editPersonDescriptor.getInternshipId().orElse(personToEdit.getInternshipId());","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"        return new Person(","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"                personId,","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"                updatedName,","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                updatedPhone,","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"                updatedEmail,","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"                updatedAddress,","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"                updatedInternshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"                updatedTags);","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"        private InternshipId internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":160,"author":{"gitId":"nqt230"},"content":"            setInternshipId(toCopy.internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"        public void setInternshipId(InternshipId internshipId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"nqt230"},"content":"            this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"nqt230"},"content":"        public Optional\u003cInternshipId\u003e getInternshipId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"nqt230"},"content":"            return Optional.ofNullable(internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"nqt230":25,"-":225}},{"path":"src/main/java/seedu/address/logic/parser/AddInternshipCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ROLE;","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_STATUS;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERVIEW_DATE;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_ID;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddInternshipCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"public class AddInternshipCommandParser implements Parser\u003cAddInternshipCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"    public AddInternshipCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"                        args,","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"                        PREFIX_COMPANY_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"                        PREFIX_INTERNSHIP_ROLE,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"                        PREFIX_INTERNSHIP_STATUS,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"                        PREFIX_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"                        PREFIX_INTERVIEW_DATE);","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COMPANY_NAME, PREFIX_INTERNSHIP_ROLE)","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddInternshipCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        CompanyName companyName \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                ParserUtil.parseCompanyName(argMultimap.getValue(PREFIX_COMPANY_NAME).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        InternshipRole internshipRole \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                ParserUtil.parseInternshipRole(argMultimap.getValue(PREFIX_INTERNSHIP_ROLE).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        InternshipStatus internshipStatus \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"                ParserUtil.parseInternshipStatus(argMultimap.getValue(PREFIX_INTERNSHIP_STATUS).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        PersonId contactPersonId \u003d ParserUtil.parsePersonId(argMultimap.getValue(PREFIX_PERSON_ID).orElse(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"        InterviewDate interviewDate \u003d ParserUtil.parseInterviewDate(argMultimap.getValue(PREFIX_INTERVIEW_DATE).get());","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        return new AddInternshipCommand(companyName, internshipRole, internshipStatus, contactPersonId, interviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"nqt230":65}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INTERNSHIP_ID;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"        InternshipId internshipId \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                ParserUtil.parseInternshipId(argMultimap.getValue(PREFIX_INTERNSHIP_ID).orElse(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return new AddPersonCommand(name, phone, email, address, internshipId, tagList);","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"nqt230":10,"-":52}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddInternshipCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        case AddInternshipCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"            return new AddInternshipCommandParser().parse(arguments);","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nqt230":7,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"    /* Prefix definitions (Person) */","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_PERSON_ID \u003d new Prefix(\"pid/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"    /* Prefix definitions (Internship) */","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERNSHIP_ID \u003d new Prefix(\"iid/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_COMPANY_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERNSHIP_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERNSHIP_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    public static final Prefix PREFIX_INTERVIEW_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nqt230":9,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String personId} into a {@code PersonId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code personId} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public static PersonId parsePersonId(String personId) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        String trimmedPersonId \u003d personId.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        if (!PersonId.isValidId(trimmedPersonId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(PersonId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"        return new PersonId(trimmedPersonId);","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String internshipId} into a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code internshipId} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":154,"author":{"gitId":"nqt230"},"content":"    public static InternshipId parseInternshipId(String internshipId) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"nqt230"},"content":"        if (internshipId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"nqt230"},"content":"        String trimmedInternshipId \u003d internshipId.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"nqt230"},"content":"        if (!InternshipId.isValidId(trimmedInternshipId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InternshipId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"nqt230"},"content":"        return new InternshipId(trimmedInternshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String companyName} into a {@code CompanyName}.","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code companyName} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"    public static CompanyName parseCompanyName(String companyName) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"        String trimmedCompanyName \u003d companyName.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"        if (!CompanyName.isValidName(trimmedCompanyName)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"nqt230"},"content":"        return new CompanyName(trimmedCompanyName);","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String internshipRole} into a {@code InternshipRole}.","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code internshipRole} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"    public static InternshipRole parseInternshipRole(String internshipRole) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internshipRole);","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"nqt230"},"content":"        String trimmedInternshipRole \u003d internshipRole.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"nqt230"},"content":"        if (!InternshipRole.isValidName(trimmedInternshipRole)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InternshipRole.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"nqt230"},"content":"        return new InternshipRole(trimmedInternshipRole);","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String internshipStatus} into a {@code InternshipStatus}.","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code internshipStatus} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"nqt230"},"content":"    public static InternshipStatus parseInternshipStatus(String internshipStatus) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internshipStatus);","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"        String trimmedInternshipStatus \u003d internshipStatus.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"nqt230"},"content":"        if (!InternshipStatus.isValidStatus(trimmedInternshipStatus)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":205,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InternshipStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":206,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":207,"author":{"gitId":"nqt230"},"content":"        return new InternshipStatus(InternshipStatus.State.valueOf(trimmedInternshipStatus));","lastModifiedDate":"2022-10-03"},{"lineNumber":208,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":209,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":210,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":211,"author":{"gitId":"nqt230"},"content":"     * Parses a {@code String interviewDate} into a {@code InterviewDate}.","lastModifiedDate":"2022-10-03"},{"lineNumber":212,"author":{"gitId":"nqt230"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-03"},{"lineNumber":213,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":214,"author":{"gitId":"nqt230"},"content":"     * @throws ParseException if the given {@code interviewDate} is invalid.","lastModifiedDate":"2022-10-03"},{"lineNumber":215,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":216,"author":{"gitId":"nqt230"},"content":"    public static InterviewDate parseInterviewDate(String interviewDate) throws ParseException {","lastModifiedDate":"2022-10-03"},{"lineNumber":217,"author":{"gitId":"nqt230"},"content":"        requireNonNull(interviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":218,"author":{"gitId":"nqt230"},"content":"        String trimmedInterviewDate \u003d interviewDate.trim();","lastModifiedDate":"2022-10-03"},{"lineNumber":219,"author":{"gitId":"nqt230"},"content":"        if (!InterviewDate.isValidDatetimeStr(trimmedInterviewDate)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":220,"author":{"gitId":"nqt230"},"content":"            throw new ParseException(InterviewDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":221,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":222,"author":{"gitId":"nqt230"},"content":"        return new InterviewDate(trimmedInterviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nqt230":100,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.UniqueInternshipList;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    // Internal Id counters","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    private int personIdCounter \u003d 0;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    private int internshipIdCounter \u003d 0;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    private final UniqueInternshipList internships;","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        internships \u003d new UniqueInternshipList();","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        this.internships.setInternships(internships);","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Person.","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Person.","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    public int getNextPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"        return personIdCounter;","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"    public int getNextInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"        return internshipIdCounter;","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"        setInternships(newData.getInternshipList());","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        return internships.contains(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"    public Person findPersonById(PersonId personId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        return persons.findById(personId);","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"    public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"        return internships.findById(internshipId);","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"     * Updates the personIdCounter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"        if (p.getPersonId().id + 1 \u003e personIdCounter) {","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"            personIdCounter \u003d p.getPersonId().id + 1;","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"        InternshipId internshipId \u003d p.getInternshipId();","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"        if (internshipId !\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"            // TODO: Find the associated Internship via Id,","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"            //  then set the contactPersonId of the Internship to p.getPersonId().","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"            //  Requires new Set method.","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"     * Adds a internship to the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"     * The internship must not already exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"     * * Updates the internshipIdCounter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"    public void addInternship(Internship i) {","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"        if (i.getInternshipId().id + 1 \u003e internshipIdCounter) {","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"            internshipIdCounter \u003d i.getInternshipId().id + 1;","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"        internships.add(i);","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"        PersonId contactPersonId \u003d i.getContactPersonId();","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"        if (contactPersonId !\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"nqt230"},"content":"            // TODO: Find the associated Person via Id,","lastModifiedDate":"2022-10-02"},{"lineNumber":153,"author":{"gitId":"nqt230"},"content":"            //  then set internshipId of the Person to i.getInternshipId().","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"nqt230"},"content":"            //  Requires new Set method.","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"        requireNonNull(editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"        internships.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"    public void removeInternship(Internship key) {","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"        internships.remove(key);","lastModifiedDate":"2022-10-02"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"nqt230"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\"","lastModifiedDate":"2022-10-05"},{"lineNumber":192,"author":{"gitId":"nqt230"},"content":"                + internships.asUnmodifiableObservableList().size() + \" internships\\n\";","lastModifiedDate":"2022-10-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":201,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":202,"author":{"gitId":"nqt230"},"content":"    public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"        return internships.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-02"},{"lineNumber":204,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":205,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2022-10-05"},{"lineNumber":211,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internships.equals(((AddressBook) other).internships));","lastModifiedDate":"2022-10-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nqt230":100,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    Predicate\u003cInternship\u003e PREDICATE_SHOW_ALL_INTERNSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"    boolean hasInternship(Internship internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"     * Deletes the given internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"     * The internship must exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"    void deleteInternship(Internship target);","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"     * Adds the given internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"     * {@code internship} must not already exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"    void addInternship(Internship internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"     * Replaces the given internship {@code target} with {@code editedInternship}.","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"     * The internship identity of {@code editedInternship}","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"     * must not be the same as another existing internship in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"    void setInternship(Internship target, Internship editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"     * Updates the filter of the filtered internship list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Person","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"     * and increments the Id counter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Person.","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"    int getNextPersonId();","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"     * Gets a unique Id to assign to a newly created Internship","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"     * and increments the Id counter to avoid duplicate Ids.","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"     * @return A unique Id for a newly created Internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"    int getNextInternshipId();","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"    Person findPersonById(PersonId personId);","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"    Internship findInternshipById(InternshipId internshipId);","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nqt230":61,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    private final FilteredList\u003cInternship\u003e filteredInternships;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        filteredInternships \u003d new FilteredList\u003c\u003e(this.addressBook.getInternshipList());","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"        requireNonNull(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"        return addressBook.hasInternship(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"    public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"        addressBook.removeInternship(target);","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"    public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"        addressBook.addInternship(internship);","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":152,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":153,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":154,"author":{"gitId":"nqt230"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":155,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":156,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"nqt230"},"content":"        addressBook.setInternship(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":158,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":159,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"nqt230"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":162,"author":{"gitId":"nqt230"},"content":"        return filteredInternships;","lastModifiedDate":"2022-10-02"},{"lineNumber":163,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":166,"author":{"gitId":"nqt230"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"        filteredInternships.setPredicate(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"    public int getNextPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"        return addressBook.getNextPersonId();","lastModifiedDate":"2022-10-02"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":175,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":176,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":177,"author":{"gitId":"nqt230"},"content":"    public int getNextInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":178,"author":{"gitId":"nqt230"},"content":"        return addressBook.getNextInternshipId();","lastModifiedDate":"2022-10-02"},{"lineNumber":179,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":180,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":181,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":182,"author":{"gitId":"nqt230"},"content":"    public Person findPersonById(PersonId personId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"        return addressBook.findPersonById(personId);","lastModifiedDate":"2022-10-02"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":187,"author":{"gitId":"nqt230"},"content":"    public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-02"},{"lineNumber":188,"author":{"gitId":"nqt230"},"content":"        return addressBook.findInternshipById(internshipId);","lastModifiedDate":"2022-10-02"},{"lineNumber":189,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":190,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2022-10-02"},{"lineNumber":208,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 filteredInternships.equals(other.filteredInternships);","lastModifiedDate":"2022-10-02"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nqt230":62,"-":149}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    ObservableList\u003cInternship\u003e getInternshipList();","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nqt230":7,"-":17}},{"path":"src/main/java/seedu/address/model/internship/CompanyName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s company name in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class CompanyName {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Company names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    /*","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public final String fullName;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code CompanyName}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"     * @param name A valid company name.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    public CompanyName(String name) {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"        fullName \u003d name;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        return fullName;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                || (other instanceof CompanyName // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 fullName.equals(((CompanyName) other).fullName)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return fullName.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":53}},{"path":"src/main/java/seedu/address/model/internship/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":" * Represents a Internship in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"public class Internship {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"    // Identity fields","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"    private final InternshipId internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    private final CompanyName companyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    private final InternshipRole internshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    // Data fields","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    private final InternshipStatus internshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    private final PersonId contactPersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    private final InterviewDate interviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     * Every field must be present and not null except contact person.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    public Internship(","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"            InternshipId internshipId,","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"            CompanyName companyName,","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"            InternshipRole internshipRole,","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"            InternshipStatus internshipStatus,","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"            PersonId contactPersonId,","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            InterviewDate interviewDate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(internshipId, companyName, internshipRole);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d contactPersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    public InternshipId getInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        return internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    public CompanyName getCompanyName() {","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        return companyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    public InternshipRole getInternshipRole() {","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        return internshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    public InternshipStatus getInternshipStatus() {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        return internshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public PersonId getContactPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        return contactPersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    public InterviewDate getInterviewDate() {","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        return interviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"     * Returns true if both internships have the same company name and internship role.","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"     * This defines a weaker notion of equality between two internships.","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"    public boolean isSameInternship(Internship otherInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInternshipRole().equals(getInternshipRole());","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        if (!(other instanceof Internship)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"        Internship otherInternship \u003d (Internship) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"        return otherInternship.getInternshipId().equals(getInternshipId())","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInternshipRole().equals(getInternshipRole())","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInternshipStatus().equals(getInternshipStatus())","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 Objects.equals(otherInternship.getInternshipId(), getInternshipId())","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getContactPersonId().equals(getContactPersonId())","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherInternship.getInterviewDate().equals(getInterviewDate());","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"        return Objects.hash(companyName, internshipRole, internshipStatus, contactPersonId, interviewDate);","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        builder.append(getCompanyName())","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                .append(\"; Role: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"                .append(getInternshipRole())","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"                .append(getInternshipStatus())","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"                .append(\"; InterviewDate: \")","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"                .append(getInterviewDate());","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":121}},{"path":"src/main/java/seedu/address/model/internship/InternshipId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s unique id in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class InternshipId {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Internship Id must be a non-negative number, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    public final Integer id;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"     * Takes a string id and parses it into an Integer.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    public InternshipId(String id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"        this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public InternshipId(Integer id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"     * Returns true if the given String can be parsed into an Integer and is non-negative.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            return isValidId(Integer.parseInt(test));","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(Integer test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        return id.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"                || (other instanceof InternshipId // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 id.equals(((InternshipId) other).id)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        return id.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":70}},{"path":"src/main/java/seedu/address/model/internship/InternshipRole.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s role in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class InternshipRole {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Roles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    /*","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public final String roleName;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"     * @param name A valid role name.","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    public InternshipRole(String name) {","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"        roleName \u003d name;","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        return roleName;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                || (other instanceof CompanyName // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 roleName.equals(((CompanyName) other).fullName)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return roleName.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":53}},{"path":"src/main/java/seedu/address/model/internship/InternshipStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s status in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"public class InternshipStatus {","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"            \"Status can only be PENDING, REJECTED, ACCEPTED or COMPLETED, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"     * Represents the possible states of an InternshipStatus.","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"    public enum State { PENDING, REJECTED, ACCEPTED, COMPLETED }","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    public final State currentState;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipStatus}.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"     * @param state A valid state as defined in the {@Code State} enum.","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    public InternshipStatus(State state) {","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"        this.currentState \u003d state;","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     * Returns true if the given String can be parsed to a valid state as defined in the {@Code State} enum.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"        switch (test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"        case \"PENDING\":","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        case \"REJECTED\":","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        case \"ACCEPTED\":","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        case \"COMPLETED\":","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"        default:","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        return currentState.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                || (other instanceof InternshipStatus // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 currentState.equals(((InternshipStatus) other).currentState)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        return currentState.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":59}},{"path":"src/main/java/seedu/address/model/internship/InterviewDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":" * Represents an Internship\u0027s interview date in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDatetimeStr(String)} (String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"public class InterviewDate {","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"            \"Interview dates must be in the format yyyy-MM-dd HH:mm, and it should not blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}-[01]\\\\d-[0-3]\\\\d\\\\s[0-2]\\\\d((:[0-5]\\\\d)?){2}\";","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    public final LocalDateTime datetime;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InterviewDate}.","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"     * @param datetimeStr A valid String in the format yyyy-MM-dd HH:mm that represents a date and time.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    public InterviewDate(String datetimeStr) {","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"        requireNonNull(datetimeStr);","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidDatetimeStr(datetimeStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"        LocalDateTime datetime \u003d LocalDateTime.parse(datetimeStr, formatter);","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidDatetimeStr(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        return datetime.format(formatter);","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                || (other instanceof InterviewDate // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 datetime.equals(((InterviewDate) other).datetime)); // state check","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        return datetime.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":56}},{"path":"src/main/java/seedu/address/model/internship/UniqueInternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import java.util.List;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":" * A list of internships that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":" * An internship is considered unique by comparing using {@code Internship#isSameInternship(Internship)}.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":" * As such, adding and updating of internships uses Internship#isSameInternship(Internship) for equality","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":" * to ensure that the internship being added or updated is unique in terms of identity in the UniqueInternshipList.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":" * However, the removal of an internship uses Internship#equals(Object)","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":" * to ensure that the internship with exactly the same fields will be removed.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":" *","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":" *","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":" * @see Internship#isSameInternship(Internship)","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"public class UniqueInternshipList implements Iterable\u003cInternship\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    private final ObservableList\u003cInternship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    private final ObservableList\u003cInternship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"     * Returns true if the list contains an equivalent internship as the given argument.","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    public boolean contains(Internship toCheck) {","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     * Returns an Internship with id that matches idToFind.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"     * If none is found, return null.","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    public Internship findById(InternshipId idToFind) {","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        return internalList","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                .stream()","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                .filter(i -\u003e i !\u003d null \u0026\u0026 i.getInternshipId().equals(idToFind))","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                .findFirst()","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"                .orElse(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"     * Adds an internship to the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"     * The internship must not already exist in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"    public void add(Internship toAdd) {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     * Replaces the internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"     * The internship identity of {@code editedInternship}","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"     * must not be the same as another existing internship in the list.","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"        if (!target.isSameInternship(editedInternship) \u0026\u0026 contains(editedInternship)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"        internalList.set(index, editedInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"     * Removes the equivalent internship from the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"     * The internship must exist in the list.","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"    public void remove(Internship toRemove) {","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"    public void setInternships(UniqueInternshipList replacement) {","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"     * Replaces the contents of this list with {@code internships}.","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"        requireAllNonNull(internships);","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        if (!internshipsAreUnique(internships)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        internalList.setAll(internships);","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"    public ObservableList\u003cInternship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"    public Iterator\u003cInternship\u003e iterator() {","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"                || (other instanceof UniqueInternshipList // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":130,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 internalList.equals(((UniqueInternshipList) other).internalList));","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"     * Returns true if {@code internships} contains only unique internships.","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"nqt230"},"content":"    private boolean internshipsAreUnique(List\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-02"},{"lineNumber":142,"author":{"gitId":"nqt230"},"content":"        for (int i \u003d 0; i \u003c internships.size() - 1; i++) {","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"nqt230"},"content":"            for (int j \u003d i + 1; j \u003c internships.size(); j++) {","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"nqt230"},"content":"                if (internships.get(i).isSameInternship(internships.get(j))) {","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"                    return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"                }","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-02"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"        return true;","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":151}},{"path":"src/main/java/seedu/address/model/internship/exceptions/DuplicateInternshipException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":" * Signals that the operation will result in duplicate Internships","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":" * (Internships are considered duplicates if they have the same identity).","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"public class DuplicateInternshipException extends RuntimeException {","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"    public DuplicateInternshipException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"        super(\"Operation would result in duplicate internships\");","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":11}},{"path":"src/main/java/seedu/address/model/internship/exceptions/InternshipNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":" * Signals that the operation is unable to find the specified internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"public class InternshipNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":6}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    private final PersonId personId;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    private final InternshipId internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"     * Every field must be present and not null except internship.","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            PersonId personId,","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            Name name,","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            Phone phone,","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            Email email,","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            Address address,","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            InternshipId internshipId,","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            Set\u003cTag\u003e tags) {","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"    public PersonId getPersonId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"        return personId;","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"    public InternshipId getInternshipId() {","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"        return internshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"        return otherPerson.getPersonId().equals(getPersonId())","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2022-10-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 Objects.equals(otherPerson.getPersonId(), getPersonId())","lastModifiedDate":"2022-10-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nqt230":25,"-":120}},{"path":"src/main/java/seedu/address/model/person/PersonId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.model.person;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":" * Represents a Person\u0027s unique id in the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"public class PersonId {","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"            \"Person Id must be a non-negative number, and it should not be blank\";","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"    public final Integer id;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code PersonId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"     * Takes a string id and parses it into an Integer.","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    public PersonId(String id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"        this.id \u003d Integer.parseInt(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code InternshipId}.","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public PersonId(Integer id) {","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"     * Returns true if the given String can be parsed into an Integer and is non-negative.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        try {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            return isValidId(Integer.parseInt(test));","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            return false;","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"    public static boolean isValidId(Integer test) {","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    public String toString() {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        return id.toString();","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-02"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"                || (other instanceof PersonId // instanceof handles nulls","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"                \u0026\u0026 id.equals(((PersonId) other).id)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    @Override","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        return id.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"nqt230":70}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"     * Returns a Person with id that matches idToFind.","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"     * If none is found, return null.","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"    public Person findById(PersonId idToFind) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        return internalList","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"                .stream()","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                .filter(p -\u003e p !\u003d null \u0026\u0026 p.getPersonId().equals(idToFind))","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                .findFirst()","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                .orElse(null);","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nqt230":12,"-":137}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"                    new PersonId(0),","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Alex Yeoh\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"87438807\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"                    new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"                    new PersonId(1),","lastModifiedDate":"2022-10-02"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"99272758\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"                    new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                    new PersonId(2),","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"93210283\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"                    new Email(\"charlotte@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"                    new PersonId(3),","lastModifiedDate":"2022-10-02"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"                    new Name(\"David Li\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"91031282\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"                    new Email(\"lidavid@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(1),","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"                    new PersonId(4),","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"92492021\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"                    new Email(\"irfan@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"                    null,","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"            new Person(","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"                    new PersonId(5),","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"                    new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"                    new Phone(\"92624417\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"                    new Email(\"royb@example.com\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(0),","lastModifiedDate":"2022-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"    public static Internship[] getSampleInternships() {","lastModifiedDate":"2022-10-02"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"        return new Internship[] {","lastModifiedDate":"2022-10-02"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"            new Internship(","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(0),","lastModifiedDate":"2022-10-02"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"                    new CompanyName(\"company ABC123\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"                    new InternshipRole(\"frontend engineer\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"                    new InternshipStatus(InternshipStatus.State.ACCEPTED),","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"                    new PersonId(5),","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"                    null),","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"            new Internship(","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"                    new InternshipId(1),","lastModifiedDate":"2022-10-02"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"                    new CompanyName(\"Google\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"                    new InternshipRole(\"data analyst\"),","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"                    new InternshipStatus(InternshipStatus.State.PENDING),","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"                    new PersonId(5),","lastModifiedDate":"2022-10-02"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"                    new InterviewDate(\"2022-11-11 11:11\")),","lastModifiedDate":"2022-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"        for (Internship sampleInternship : getSampleInternships()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"            sampleAb.addInternship(sampleInternship);","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"nqt230":64,"-":57}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInternship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nqt230"},"content":"package seedu.address.storage;","lastModifiedDate":"2022-10-03"},{"lineNumber":2,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":3,"author":{"gitId":"nqt230"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-03"},{"lineNumber":4,"author":{"gitId":"nqt230"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-03"},{"lineNumber":5,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":8,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":9,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"nqt230"},"content":"/**","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":" * Jackson-friendly version of {@link Internship}.","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"nqt230"},"content":" */","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"class JsonAdaptedInternship {","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"    private final Integer internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"    private final String companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"    private final String internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    private final String internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    private final Integer contactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    private final String interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"     * Constructs a {@code JsonAdaptedInternship} with the given internship details.","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"    public JsonAdaptedInternship(","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipId\") Integer internshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"companyName\") String companyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipRole\") String internshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipStatus\") String internshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"contactPersonId\") Integer contactPersonId,","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"interviewDate\") String interviewDate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        this.internshipRole \u003d internshipRole;","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        this.internshipStatus \u003d internshipStatus;","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        this.contactPersonId \u003d contactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        this.interviewDate \u003d interviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"     * Converts a given {@code Internship} into this class for Jackson use.","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"    public JsonAdaptedInternship(Internship source) {","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d source.getInternshipId().id;","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        companyName \u003d source.getCompanyName().fullName;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        internshipRole \u003d source.getInternshipRole().roleName;","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"        internshipStatus \u003d source.getInternshipStatus().currentState.name();","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        contactPersonId \u003d source.getContactPersonId() !\u003d null ? source.getContactPersonId().id : null;","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"        interviewDate \u003d source.getInterviewDate() !\u003d null ? source.getInterviewDate().toString() : null;","lastModifiedDate":"2022-10-03"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"     * Converts this Jackson-friendly adapted internship object into the model\u0027s {@code Internship} object.","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"     *","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted internship.","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"    public Internship toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"        if (internshipId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, InternshipId.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"        if (!InternshipId.isValidId(internshipId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(InternshipId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"        final InternshipId modelInternshipId \u003d new InternshipId(internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"        if (companyName \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, CompanyName.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"        if (!CompanyName.isValidName(companyName)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"        final CompanyName modelCompanyName \u003d new CompanyName(companyName);","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"        if (internshipRole \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, InternshipRole.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"        if (InternshipRole.isValidName(internshipRole)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"            final InternshipRole modelInternshipRole \u003d new InternshipRole(internshipRole);","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"            if (internshipStatus \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"                throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"                        String.format(MISSING_FIELD_MESSAGE_FORMAT, InternshipStatus.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"            if (!InternshipStatus.isValidStatus(internshipStatus)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"                throw new IllegalValueException(InternshipStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"            final InternshipStatus modelInternshipStatus \u003d","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"                    new InternshipStatus(InternshipStatus.State.valueOf(internshipStatus));","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"            final PersonId modelContactPersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"            if (contactPersonId \u003d\u003d null || !InternshipId.isValidId(contactPersonId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"                modelContactPersonId \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"                modelContactPersonId \u003d new PersonId(contactPersonId);","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"            InterviewDate modelInterviewDate;","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"            if (interviewDate \u003d\u003d null || !InterviewDate.isValidDatetimeStr(interviewDate)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"nqt230"},"content":"                modelInterviewDate \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":112,"author":{"gitId":"nqt230"},"content":"            } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":113,"author":{"gitId":"nqt230"},"content":"                modelInterviewDate \u003d new InterviewDate(interviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":114,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":115,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":116,"author":{"gitId":"nqt230"},"content":"            return new Internship(","lastModifiedDate":"2022-10-03"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"                    modelInternshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"                    modelCompanyName,","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"                    modelInternshipRole,","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"                    modelInternshipStatus,","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"                    modelContactPersonId,","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"                    modelInterviewDate);","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(InternshipRole.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"}","lastModifiedDate":"2022-10-03"}],"authorContributionMap":{"nqt230":128}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    private final Integer personId;","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"    private final Integer internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"    public JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"personId\") Integer personId,","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internshipId\") Integer internshipId,","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"        personId \u003d source.getPersonId().id;","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d source.getInternshipId() !\u003d null ? source.getInternshipId().id : null;","lastModifiedDate":"2022-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"        if (personId \u003d\u003d null) {","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, PersonId.class.getSimpleName()));","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"        final PersonId modelPersonId \u003d new PersonId(personId);","lastModifiedDate":"2022-10-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"        final InternshipId modelInternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"        if (internshipId \u003d\u003d null || !InternshipId.isValidId(internshipId)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"            modelInternshipId \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"        } else {","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"            modelInternshipId \u003d new InternshipId(internshipId);","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":126,"author":{"gitId":"nqt230"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":127,"author":{"gitId":"nqt230"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2022-10-03"},{"lineNumber":128,"author":{"gitId":"nqt230"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2022-10-03"},{"lineNumber":129,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"        return new Person(modelPersonId, modelName, modelPhone, modelEmail, modelAddress, modelInternshipId, modelTags);","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nqt230":32,"-":103}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"Internships list contains duplicate internship(s).\";","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"    private final List\u003cJsonAdaptedInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"    public JsonSerializableAddressBook(","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"nqt230"},"content":"            @JsonProperty(\"internships\") List\u003cJsonAdaptedInternship\u003e internships) {","lastModifiedDate":"2022-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        this.internships.addAll(internships);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"        internships.addAll(source.getInternshipList()","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"                .stream()","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                .map(JsonAdaptedInternship::new)","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"        for (JsonAdaptedInternship jsonAdaptedInternship : internships) {","lastModifiedDate":"2022-10-03"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"            Internship internship \u003d jsonAdaptedInternship.toModelType();","lastModifiedDate":"2022-10-03"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"            if (addressBook.hasInternship(internship)) {","lastModifiedDate":"2022-10-03"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"            addressBook.addInternship(internship);","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nqt230":23,"-":59}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"nqt230":2,"-":160}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2022-10-03"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2022-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nqt230":4,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":24,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-03"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":155,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":156,"author":{"gitId":"nqt230"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":157,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":158,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":159,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":160,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":161,"author":{"gitId":"nqt230"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2022-10-03"},{"lineNumber":162,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"nqt230"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":171,"author":{"gitId":"nqt230"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2022-10-03"},{"lineNumber":172,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":173,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":174,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":175,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":176,"author":{"gitId":"nqt230"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":177,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":178,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":179,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":180,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":181,"author":{"gitId":"nqt230"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2022-10-03"},{"lineNumber":182,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":183,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":184,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":185,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":186,"author":{"gitId":"nqt230"},"content":"        public int getNextPersonId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":187,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":188,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":189,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":190,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":191,"author":{"gitId":"nqt230"},"content":"        public int getNextInternshipId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":192,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":193,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":194,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":195,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":196,"author":{"gitId":"nqt230"},"content":"        public Person findPersonById(PersonId personId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":197,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":198,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":199,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":200,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":201,"author":{"gitId":"nqt230"},"content":"        public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":202,"author":{"gitId":"nqt230"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-03"},{"lineNumber":203,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":223,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":224,"author":{"gitId":"nqt230"},"content":"        public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-03"},{"lineNumber":225,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-03"},{"lineNumber":226,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":227,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":228,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":229,"author":{"gitId":"nqt230"},"content":"        public int getNextPersonId() {","lastModifiedDate":"2022-10-03"},{"lineNumber":230,"author":{"gitId":"nqt230"},"content":"            return 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":231,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"nqt230"},"content":"        private int nextPersonId \u003d 0;","lastModifiedDate":"2022-10-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":251,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":252,"author":{"gitId":"nqt230"},"content":"            if (person.getPersonId().id + 1 \u003e nextPersonId) {","lastModifiedDate":"2022-10-05"},{"lineNumber":253,"author":{"gitId":"nqt230"},"content":"                nextPersonId \u003d person.getPersonId().id + 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":254,"author":{"gitId":"nqt230"},"content":"            }","lastModifiedDate":"2022-10-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":262,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":263,"author":{"gitId":"nqt230"},"content":"        public Internship findInternshipById(InternshipId internshipId) {","lastModifiedDate":"2022-10-05"},{"lineNumber":264,"author":{"gitId":"nqt230"},"content":"            return null;","lastModifiedDate":"2022-10-05"},{"lineNumber":265,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":266,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":267,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-05"},{"lineNumber":268,"author":{"gitId":"nqt230"},"content":"        public int getNextPersonId() {","lastModifiedDate":"2022-10-05"},{"lineNumber":269,"author":{"gitId":"nqt230"},"content":"            return nextPersonId;","lastModifiedDate":"2022-10-05"},{"lineNumber":270,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"nqt230":88,"-":185}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2022-10-03"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2022-10-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"nqt230"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"nqt230":12,"-":129}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2022-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"nqt230":3,"-":98}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"nqt230"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2022-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"        List\u003cInternship\u003e newInternships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-03"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newInternships);","lastModifiedDate":"2022-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"        private final ObservableList\u003cInternship\u003e internships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cInternship\u003e internships) {","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"            this.internships.setAll(internships);","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"        @Override","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"        public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"            return internships;","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"        }","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"nqt230":13,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    private static final Integer VALID_PERSON_ID \u003d BENSON.getPersonId().id;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    private static final Integer VALID_INTERNSHIP_ID \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"                INVALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"                null,","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"                        VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":76,"author":{"gitId":"nqt230"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":77,"author":{"gitId":"nqt230"},"content":"                        INVALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"                        VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":90,"author":{"gitId":"nqt230"},"content":"                VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":91,"author":{"gitId":"nqt230"},"content":"                null,","lastModifiedDate":"2022-10-03"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":104,"author":{"gitId":"nqt230"},"content":"                        VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":105,"author":{"gitId":"nqt230"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":106,"author":{"gitId":"nqt230"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":107,"author":{"gitId":"nqt230"},"content":"                        INVALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":108,"author":{"gitId":"nqt230"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":109,"author":{"gitId":"nqt230"},"content":"                        VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":110,"author":{"gitId":"nqt230"},"content":"                        VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"nqt230"},"content":"                VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":120,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":121,"author":{"gitId":"nqt230"},"content":"                null,","lastModifiedDate":"2022-10-03"},{"lineNumber":122,"author":{"gitId":"nqt230"},"content":"                VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":123,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":124,"author":{"gitId":"nqt230"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":132,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":133,"author":{"gitId":"nqt230"},"content":"                VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":134,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":135,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":136,"author":{"gitId":"nqt230"},"content":"                INVALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":137,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":138,"author":{"gitId":"nqt230"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"nqt230"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":146,"author":{"gitId":"nqt230"},"content":"                VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":147,"author":{"gitId":"nqt230"},"content":"                VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":148,"author":{"gitId":"nqt230"},"content":"                VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":149,"author":{"gitId":"nqt230"},"content":"                VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":150,"author":{"gitId":"nqt230"},"content":"                null,","lastModifiedDate":"2022-10-03"},{"lineNumber":151,"author":{"gitId":"nqt230"},"content":"                VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":152,"author":{"gitId":"nqt230"},"content":"                VALID_TAGS);","lastModifiedDate":"2022-10-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"nqt230"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2022-10-03"},{"lineNumber":163,"author":{"gitId":"nqt230"},"content":"                        VALID_PERSON_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":164,"author":{"gitId":"nqt230"},"content":"                        VALID_NAME,","lastModifiedDate":"2022-10-03"},{"lineNumber":165,"author":{"gitId":"nqt230"},"content":"                        VALID_PHONE,","lastModifiedDate":"2022-10-03"},{"lineNumber":166,"author":{"gitId":"nqt230"},"content":"                        VALID_EMAIL,","lastModifiedDate":"2022-10-03"},{"lineNumber":167,"author":{"gitId":"nqt230"},"content":"                        VALID_ADDRESS,","lastModifiedDate":"2022-10-03"},{"lineNumber":168,"author":{"gitId":"nqt230"},"content":"                        VALID_INTERNSHIP_ID,","lastModifiedDate":"2022-10-03"},{"lineNumber":169,"author":{"gitId":"nqt230"},"content":"                        invalidTags);","lastModifiedDate":"2022-10-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nqt230":74,"-":99}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.internship.InternshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.model.person.PersonId;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"nqt230"},"content":"    public static final Integer DEFAULT_PERSON_ID \u003d 0;","lastModifiedDate":"2022-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"    private PersonId personId;","lastModifiedDate":"2022-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"    private InternshipId internshipId;","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"        personId \u003d new PersonId(DEFAULT_PERSON_ID);","lastModifiedDate":"2022-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d null;","lastModifiedDate":"2022-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"        personId \u003d personToCopy.getPersonId();","lastModifiedDate":"2022-10-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"        internshipId \u003d personToCopy.getInternshipId();","lastModifiedDate":"2022-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"     * Sets the {@code PersonId} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-03"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"    public PersonBuilder withPersonId(Integer id) {","lastModifiedDate":"2022-10-03"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"        this.personId \u003d new PersonId(id);","lastModifiedDate":"2022-10-03"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"    /**","lastModifiedDate":"2022-10-03"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"     * Sets the {@code InternshipId} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-03"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"     */","lastModifiedDate":"2022-10-03"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"    public PersonBuilder withInternshipId(Integer id) {","lastModifiedDate":"2022-10-03"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"        this.internshipId \u003d new InternshipId(id);","lastModifiedDate":"2022-10-03"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"        return this;","lastModifiedDate":"2022-10-03"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"    }","lastModifiedDate":"2022-10-03"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"","lastModifiedDate":"2022-10-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":118,"author":{"gitId":"nqt230"},"content":"        return new Person(personId, name, phone, email, address, internshipId, tags);","lastModifiedDate":"2022-10-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"nqt230":26,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"nqt230"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2022-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"nqt230"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2022-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"nqt230":2,"-":60}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"nqt230"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"nqt230"},"content":"            .withPersonId(0)","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"nqt230"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"nqt230"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"nqt230"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":35,"author":{"gitId":"nqt230"},"content":"            .withPersonId(1)","lastModifiedDate":"2022-10-05"},{"lineNumber":36,"author":{"gitId":"nqt230"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":39,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"nqt230"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2022-10-05"},{"lineNumber":41,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"nqt230"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"nqt230"},"content":"            .withPersonId(2)","lastModifiedDate":"2022-10-05"},{"lineNumber":44,"author":{"gitId":"nqt230"},"content":"            .withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2022-10-05"},{"lineNumber":45,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"nqt230"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":49,"author":{"gitId":"nqt230"},"content":"            .withPersonId(3)","lastModifiedDate":"2022-10-05"},{"lineNumber":50,"author":{"gitId":"nqt230"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2022-10-05"},{"lineNumber":51,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":52,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2022-10-05"},{"lineNumber":53,"author":{"gitId":"nqt230"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":55,"author":{"gitId":"nqt230"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":56,"author":{"gitId":"nqt230"},"content":"            .withPersonId(4)","lastModifiedDate":"2022-10-05"},{"lineNumber":57,"author":{"gitId":"nqt230"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2022-10-05"},{"lineNumber":58,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":60,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":62,"author":{"gitId":"nqt230"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"nqt230"},"content":"            .withPersonId(5)","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"nqt230"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":69,"author":{"gitId":"nqt230"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"nqt230"},"content":"            .withPersonId(6)","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"nqt230"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2022-10-05"},{"lineNumber":72,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-10-05"},{"lineNumber":73,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":74,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2022-10-05"},{"lineNumber":75,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"nqt230"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":79,"author":{"gitId":"nqt230"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2022-10-05"},{"lineNumber":80,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-10-05"},{"lineNumber":81,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"nqt230"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"nqt230"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"nqt230"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"nqt230"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"nqt230"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":92,"author":{"gitId":"nqt230"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"nqt230"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"nqt230"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"nqt230"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"nqt230"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"nqt230"},"content":"            .build();","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"nqt230"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2022-10-05"},{"lineNumber":99,"author":{"gitId":"nqt230"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":100,"author":{"gitId":"nqt230"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":101,"author":{"gitId":"nqt230"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"nqt230"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"nqt230"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"nqt230":72,"-":52}}]
