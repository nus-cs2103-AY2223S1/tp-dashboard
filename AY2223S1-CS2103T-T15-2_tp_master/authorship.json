[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"# Class-ify","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-12"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"[![Codecov](https://codecov.io/gh/AY2223S1-CS2103T-T15-2/tp/branch/master/graph/badge.svg?token\u003dLKPSW2V6NG)](https://codecov.io/gh/AY2223S1-CS2103T-T15-2/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"[![Pages](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/pages/pages-build-deployment)","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"## Description","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"Class-ify is a class management application built specially for Ministry of Education (MOE) teachers to easily monitor their studentsâ€™ academic progress.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"Teachers can generate exam statistics for each class, and Class-ify quickly flags out students who require more support for contacting.","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"## Credits","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"**This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).**","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"-":4,"danielk0k":10}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"mainClassName \u003d \u0027seedu.classify.Main\u0027","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"run {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"}","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"jeromepui"},"content":"    archiveFileName \u003d \u0027classify.jar\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromepui":5,"-":70,"danielk0k":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"### Linus Chan","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"\u003cimg src\u003d\"images/linuschancs.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"[[github](https://github.com/linuschancs)]","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"[[portfolio](team/linuschancs.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"* Role: Team Lead / Developer","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"* Responsibilities: Deliverables and Scheduling","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"### Chia Min Jiun","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"\u003cimg src\u003d\"images/minjiunn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"[[github](http://github.com/minjiunn)]","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"[[portfolio](team/minjiunn.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"* Role: Developer","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"* Responsibilities: Testing","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"### Jerome Pui","lastModifiedDate":"2022-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"\u003cimg src\u003d\"images/jeromepui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"[[github](http://github.com/jeromepui)]","lastModifiedDate":"2022-09-28"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"[[portfolio](team/jeromepui.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2022-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"### Daniel Kok","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"\u003cimg src\u003d\"images/danielk0k.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"[[github](https://github.com/danielk0k)]","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"[[portfolio](team/danielk0k.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"* Responsibilities: Integration","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"maxtance"},"content":"### Max Tan","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"maxtance"},"content":"\u003cimg src\u003d\"images/maxtance.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"maxtance"},"content":"[[github](https://github.com/maxtance/)]","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"maxtance"},"content":"[[portfolio](team/maxtance.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"jeromepui":5,"-":33,"maxtance":5,"linuschancs":6,"minjiunn":6,"danielk0k":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"## 1. **Introduction**","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"### 1.1 Purpose","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"This guide covers the architecture, design choices and implementation in Class-ify to give the reader a clear picture","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"of the technical details and inner workings of Class-ify.","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"### 1.2 Target Audience","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"* Developers who wish to make sense of the codebase and contribute to Class-ify.","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"* Advanced users who wish to better understand Class-ify\u0027s features.","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"### 1.3 About Class-ify","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"Class-ify is a class management application built specially for Ministry of Education (MOE) teachers to easily monitor their studentsâ€™ academic progress.","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"Teachers can generate exam statistics for each class, and Class-ify quickly flags out students who require more support for contacting.","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"## 2. **Acknowledgements**","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"* Class-ify is adapted from the [AddressBook-Level3](https://se-education.org/addressbook-level3/) project created by the SE-EDU initiative.","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2022-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"## 3. **Setting up, getting started**","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"## 4. **Design and Implementation**","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"**Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S1-CS2103T-T15-2/tp/tree/master/docs/diagrams/) folder.","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"### 4.1 Architecture","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/classify/Main.java) and [`MainApp`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/classify/MainApp.java). It is responsible for:","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"* application launch: Initialises the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"* application shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"jeromepui"},"content":"[**`Commons`**](#415-common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"jeromepui"},"content":"* [**`UI`**](#411-ui-component): The UI of the App.","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"jeromepui"},"content":"* [**`Logic`**](#412-logic-component): The command executor.","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"jeromepui"},"content":"* [**`Model`**](#413-model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"jeromepui"},"content":"* [**`Storage`**](#414-storage-component): Reads data from, and writes data to the hard disk.","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"jeromepui"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete id/123A`.","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"jeromepui"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"jeromepui"},"content":"#### 4.1.1 UI component","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"jeromepui"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/classify/ui/Ui.java)","lastModifiedDate":"2022-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"jeromepui"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"jeromepui"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/classify/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"jeromepui"},"content":"#### 4.1.2 Logic component","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"jeromepui"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/classify/logic/Logic.java)","lastModifiedDate":"2022-10-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"jeromepui"},"content":"1. When `Logic` is called upon to execute a command, it uses the `StudentRecordParser` class to parse the user command.","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"jeromepui"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"jeromepui"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"jeromepui"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete id/123A\")` API call.","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"danielk0k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"jeromepui"},"content":"#### 4.1.3 Model component","lastModifiedDate":"2022-10-17"},{"lineNumber":136,"author":{"gitId":"jeromepui"},"content":"**API** : [`Model.java`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/classify/model/Model.java)","lastModifiedDate":"2022-10-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"danielk0k"},"content":"The `Model` component:","lastModifiedDate":"2022-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"danielk0k"},"content":"* stores the student record data i.e., all `Student` objects (which are contained in a `UniqueStudentList` object).","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"danielk0k"},"content":"* stores the currently \u0027selected\u0027 `Student` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cStudent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"jeromepui"},"content":"#### 4.1.4 Storage component","lastModifiedDate":"2022-10-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"jeromepui"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S1-CS2103T-T15-2/tp/blob/master/src/main/java/seedu/classify/storage/Storage.java)","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"jeromepui"},"content":"* can save both student record data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"jeromepui"},"content":"* inherits from both `StudentRecordStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-10-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"jeromepui"},"content":"#### 4.1.5 Common classes","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"jeromepui"},"content":"Classes used by multiple components are in the `seedu.classify.commons` package.","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"jeromepui"},"content":"### 4.2 Implementation","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"danielk0k"},"content":"#### 4.2.1 Adding new students","lastModifiedDate":"2022-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":170,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Description**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":172,"author":{"gitId":"danielk0k"},"content":"Adding new students is first basic step of using Class-ify. This is primarily done via the `AddStudCommand` and `AddStudCommandParser` classes.","lastModifiedDate":"2022-10-25"},{"lineNumber":173,"author":{"gitId":"danielk0k"},"content":"Before going into the sequence of executing a `addstud` command, let us take a quick look at the `Student` class.","lastModifiedDate":"2022-10-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":175,"author":{"gitId":"danielk0k"},"content":"\u003cimg src\u003d\"images/StudentClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":177,"author":{"gitId":"danielk0k"},"content":"The `Student` class contains a total of 6 fields:","lastModifiedDate":"2022-10-25"},{"lineNumber":178,"author":{"gitId":"danielk0k"},"content":"* 2 `Name` fields for the student and parent names ","lastModifiedDate":"2022-10-25"},{"lineNumber":179,"author":{"gitId":"danielk0k"},"content":"* 1 `Id` field ","lastModifiedDate":"2022-10-25"},{"lineNumber":180,"author":{"gitId":"danielk0k"},"content":"* 1 `Phone` number field ","lastModifiedDate":"2022-10-25"},{"lineNumber":181,"author":{"gitId":"danielk0k"},"content":"* 1 `Email` address field ","lastModifiedDate":"2022-10-25"},{"lineNumber":182,"author":{"gitId":"danielk0k"},"content":"* 1 set of `Exam`(s)","lastModifiedDate":"2022-10-25"},{"lineNumber":183,"author":{"gitId":"danielk0k"},"content":"    * The type of exams are currently limited to _CA1_, _CA2_, _SA1_ and _SA2_.","lastModifiedDate":"2022-10-25"},{"lineNumber":184,"author":{"gitId":"danielk0k"},"content":"    * Future implementations may allow teachers to create their own examinable items.","lastModifiedDate":"2022-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Implementation**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":188,"author":{"gitId":"danielk0k"},"content":"Adding a student record can be divided into 2 main steps: parsing the user input and executing it.","lastModifiedDate":"2022-10-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":190,"author":{"gitId":"danielk0k"},"content":"**Step 1: Parsing the command**","lastModifiedDate":"2022-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":192,"author":{"gitId":"danielk0k"},"content":"The delete command is first parsed.","lastModifiedDate":"2022-10-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":194,"author":{"gitId":"danielk0k"},"content":"1. `MainWindow` calls the `execute` method of `LogicManager` to execute the given userâ€™s command.","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"danielk0k"},"content":"2. Before the command is executed, it is parsed by `StudentRecordParser`, which identifies the command to be a addstud command and creates a new `AddStudCommandParser` instance to parse the userâ€™s command.","lastModifiedDate":"2022-10-25"},{"lineNumber":196,"author":{"gitId":"danielk0k"},"content":"3. Once the command is successfully parsed, `AddStudCommandParser` creates a new `AddStudCommand` instance which will be executed by the `LogicManager`.","lastModifiedDate":"2022-10-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":198,"author":{"gitId":"danielk0k"},"content":"**Step 2: Executing the command**","lastModifiedDate":"2022-10-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":200,"author":{"gitId":"danielk0k"},"content":"The `AddStudCommand` instance now interacts with the `ModelManager` to execute the command.","lastModifiedDate":"2022-10-25"},{"lineNumber":201,"author":{"gitId":"danielk0k"},"content":"1. The `hasStudent` method is called to check if the `Model` contains the student to be added.","lastModifiedDate":"2022-10-25"},{"lineNumber":202,"author":{"gitId":"danielk0k"},"content":"2. Assuming there are no duplicates, the `addStudent` method is then called to add the student into the student record.","lastModifiedDate":"2022-10-25"},{"lineNumber":203,"author":{"gitId":"danielk0k"},"content":"3. The `updateFilteredStudentList` method is called to show the updated list of students in the student record.","lastModifiedDate":"2022-10-25"},{"lineNumber":204,"author":{"gitId":"danielk0k"},"content":"4. A new `CommandResult` instance is created and returned to `LogicManager`.","lastModifiedDate":"2022-10-25"},{"lineNumber":205,"author":{"gitId":"danielk0k"},"content":"5. The control is then passed back to `MainWindow` where the `CommandResult` is displayed to the UI as feedback to the user.","lastModifiedDate":"2022-10-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":207,"author":{"gitId":"danielk0k"},"content":"The following activity diagram below summarizes what happens when a user executes an `addstud` command.","lastModifiedDate":"2022-10-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":209,"author":{"gitId":"danielk0k"},"content":"\u003cimg src\u003d\"images/AddStudentCommandActivityDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":211,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Design Considerations**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":213,"author":{"gitId":"danielk0k"},"content":"The current approach creates multiple `Class` objects per student. It serves as a more straightforward implementation. However, it is not a very OOP solution for the following reasons:","lastModifiedDate":"2022-10-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":215,"author":{"gitId":"danielk0k"},"content":"1. Multiple `Class` objects for the same class.","lastModifiedDate":"2022-10-25"},{"lineNumber":216,"author":{"gitId":"danielk0k"},"content":"2. Classes do not have students.","lastModifiedDate":"2022-10-25"},{"lineNumber":217,"author":{"gitId":"danielk0k"},"content":"   * A `Class` object has no reference to the students in that class. ","lastModifiedDate":"2022-10-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":219,"author":{"gitId":"danielk0k"},"content":"An alternative and perhaps more OOP approach is given below. It has a `Class` list in the `StudentRecord`, which references to `Student`.","lastModifiedDate":"2022-10-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":221,"author":{"gitId":"danielk0k"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":223,"author":{"gitId":"danielk0k"},"content":"* `StudentRecord` only requires one `Class` object per unique class the teacher teaches, instead of each `Student` needing their own `Class` objects.","lastModifiedDate":"2022-10-25"},{"lineNumber":224,"author":{"gitId":"danielk0k"},"content":"* `Class` has reference to `Student`, modelling the relationship in which a teacher teaches a class with some students.","lastModifiedDate":"2022-10-25"},{"lineNumber":225,"author":{"gitId":"danielk0k"},"content":"* Every `Class` has a set of `Exam`(s) which a `Student` takes and scores a certain grade.","lastModifiedDate":"2022-10-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":227,"author":{"gitId":"jeromepui"},"content":"#### 4.2.2 Delete command","lastModifiedDate":"2022-10-17"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":229,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Description**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":231,"author":{"gitId":"jeromepui"},"content":"The delete command allows users to delete a student record by targeting either the studentâ€™s name or studentâ€™s ID.","lastModifiedDate":"2022-10-25"},{"lineNumber":232,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":233,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Implementation**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":235,"author":{"gitId":"jeromepui"},"content":"Deleting a student record can be divided into 2 main steps: parsing the command and executing it.","lastModifiedDate":"2022-10-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":237,"author":{"gitId":"jeromepui"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component when the user calls a delete command, for example, `delete id/123A`.","lastModifiedDate":"2022-10-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":239,"author":{"gitId":"jeromepui"},"content":"\u003cimg src\u003d\"images/DeleteCommandSequenceDiagram.png\" /\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":240,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":241,"author":{"gitId":"jeromepui"},"content":"\u003cdiv class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2022-10-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":244,"author":{"gitId":"danielk0k"},"content":"**Step 1: Parsing the command**","lastModifiedDate":"2022-10-26"},{"lineNumber":245,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":246,"author":{"gitId":"jeromepui"},"content":"The delete command is first parsed.","lastModifiedDate":"2022-10-25"},{"lineNumber":247,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":248,"author":{"gitId":"jeromepui"},"content":"1. The `execute` method of `LogicManager` is called to execute the userâ€™s command, `delete id/123A`.","lastModifiedDate":"2022-10-25"},{"lineNumber":249,"author":{"gitId":"jeromepui"},"content":"2. Before the command is executed, it is parsed by `StudentRecordParser`, which identifies the command to be a delete command and creates a new `DeleteCommandParser` instance to parse the userâ€™s command.","lastModifiedDate":"2022-10-25"},{"lineNumber":250,"author":{"gitId":"jeromepui"},"content":"3. Once the command is successfully parsed, `DeleteCommandParser` creates a new `DeleteCommand` instance which will be executed by the `LogicManager`.","lastModifiedDate":"2022-10-25"},{"lineNumber":251,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":252,"author":{"gitId":"danielk0k"},"content":"**Step 2: Executing the command**","lastModifiedDate":"2022-10-26"},{"lineNumber":253,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":254,"author":{"gitId":"danielk0k"},"content":"The `DeleteCommand` instance now communicates with the `ModelManager` to execute the command.","lastModifiedDate":"2022-10-25"},{"lineNumber":255,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":256,"author":{"gitId":"jeromepui"},"content":"1. The `updateFilteredStudentList` method is called to isolate the student record to be deleted.","lastModifiedDate":"2022-10-25"},{"lineNumber":257,"author":{"gitId":"jeromepui"},"content":"2. The `deleteStudent` method is called to delete the student record.","lastModifiedDate":"2022-10-25"},{"lineNumber":258,"author":{"gitId":"jeromepui"},"content":"3. The `updateFilteredStudentList` method is called again to show all student records.","lastModifiedDate":"2022-10-25"},{"lineNumber":259,"author":{"gitId":"jeromepui"},"content":"4. A new `CommandResult` instance is created and returned to `LogicManager`.","lastModifiedDate":"2022-10-25"},{"lineNumber":260,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":261,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Design Considerations**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":262,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":263,"author":{"gitId":"jeromepui"},"content":"Current Design: We chose to keep a single class `DeleteCommand`, which the user can use to delete student records either by targeting the studentâ€™s name or student ID.","lastModifiedDate":"2022-10-25"},{"lineNumber":264,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":265,"author":{"gitId":"jeromepui"},"content":"Pros:","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"jeromepui"},"content":"- The user does not have to remember different types of delete commands such as `DeleteStudentByNameCommand` or `DeleteStudentByIDCommand`.","lastModifiedDate":"2022-10-25"},{"lineNumber":267,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":268,"author":{"gitId":"jeromepui"},"content":"Cons:","lastModifiedDate":"2022-10-25"},{"lineNumber":269,"author":{"gitId":"jeromepui"},"content":"- The parser would have to identify whether the user targeted the studentâ€™s name or student ID to delete the student record.","lastModifiedDate":"2022-10-25"},{"lineNumber":270,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":271,"author":{"gitId":"jeromepui"},"content":"Alternative Design: Split `DeleteCommand` into two different commands, `DeleteStudentByNameCommand` and `DeleteStudentByIDCommand`.","lastModifiedDate":"2022-10-25"},{"lineNumber":272,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":273,"author":{"gitId":"jeromepui"},"content":"Pros:","lastModifiedDate":"2022-10-25"},{"lineNumber":274,"author":{"gitId":"jeromepui"},"content":"- There is no requirement for prefixes such as `nm/` or `id/` to identify whether the user is targeting the studentâ€™s name or student ID.","lastModifiedDate":"2022-10-25"},{"lineNumber":275,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":276,"author":{"gitId":"jeromepui"},"content":"Cons:","lastModifiedDate":"2022-10-25"},{"lineNumber":277,"author":{"gitId":"jeromepui"},"content":"- Additional classes need to be implemented.","lastModifiedDate":"2022-10-25"},{"lineNumber":278,"author":{"gitId":"jeromepui"},"content":"- The command name is long.","lastModifiedDate":"2022-10-25"},{"lineNumber":279,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":280,"author":{"gitId":"jeromepui"},"content":"#### 4.2.3 Edit command","lastModifiedDate":"2022-10-17"},{"lineNumber":281,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":282,"author":{"gitId":"jeromepui"},"content":"*To be updated*","lastModifiedDate":"2022-10-17"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":284,"author":{"gitId":"jeromepui"},"content":"#### 4.2.4 Find command","lastModifiedDate":"2022-10-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":286,"author":{"gitId":"minjiunn"},"content":"`FindCommand`, which extends `Command`, filters the current list of students based on a `Predicate\u003cStudent\u003e` ","lastModifiedDate":"2022-10-21"},{"lineNumber":287,"author":{"gitId":"minjiunn"},"content":"that is generated using the user input. This depends on `FilteredStudents#updateFilteredStudentList(Predicate\u003cStudent\u003e)`","lastModifiedDate":"2022-10-21"},{"lineNumber":288,"author":{"gitId":"minjiunn"},"content":"which is exposed in the `Model` interface as `Model#updateFilteredStudentList(Predicate\u003cStudent\u003e)`.","lastModifiedDate":"2022-10-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":290,"author":{"gitId":"minjiunn"},"content":"Given below is an example usage scenario of `FindCommand`.","lastModifiedDate":"2022-10-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":292,"author":{"gitId":"minjiunn"},"content":"Step 1. The user launches the application and sees a list of students. ","lastModifiedDate":"2022-10-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":294,"author":{"gitId":"minjiunn"},"content":"Step 2. The user executes `find nm/Alex` to locate students with \"Alex\" in their name. ","lastModifiedDate":"2022-10-21"},{"lineNumber":295,"author":{"gitId":"minjiunn"},"content":"This command performs a search using the names of the students. Since the prefix `nm/` was used, a `NameContainsKeywordsPredicate`","lastModifiedDate":"2022-10-21"},{"lineNumber":296,"author":{"gitId":"minjiunn"},"content":"object, which extends `Predicate\u003cStudent\u003e` will be created.","lastModifiedDate":"2022-10-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":298,"author":{"gitId":"minjiunn"},"content":":information_source: **Note:** Find command is case-insensitive, and the command `find nm/alex` will return the same results.","lastModifiedDate":"2022-10-21"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":300,"author":{"gitId":"minjiunn"},"content":"Step 3. Classify returns a filtered list of students whose names contain `Alex`. All the details recorded will also be shown.","lastModifiedDate":"2022-10-21"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":302,"author":{"gitId":"minjiunn"},"content":"The following activity diagram summarizes what happens when a user executes the find command. ","lastModifiedDate":"2022-10-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":304,"author":{"gitId":"jeromepui"},"content":"*Insert activity diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":306,"author":{"gitId":"minjiunn"},"content":"Design considerations:","lastModifiedDate":"2022-10-21"},{"lineNumber":307,"author":{"gitId":"minjiunn"},"content":"1. `ArgumentTokenizer#tokenize()` used to identify the prefix, to generate the corresponding `Predicate\u003cStudent\u003e`.","lastModifiedDate":"2022-10-21"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":309,"author":{"gitId":"minjiunn"},"content":"*to be further updated*","lastModifiedDate":"2022-10-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":311,"author":{"gitId":"linuschancs"},"content":"#### 4.2.5 ViewAll command","lastModifiedDate":"2022-10-20"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":313,"author":{"gitId":"jeromepui"},"content":"*To be updated*","lastModifiedDate":"2022-10-17"},{"lineNumber":314,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":315,"author":{"gitId":"linuschancs"},"content":"#### 4.2.6 ViewClass command","lastModifiedDate":"2022-10-20"},{"lineNumber":316,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":317,"author":{"gitId":"linuschancs"},"content":"Current Implementation:","lastModifiedDate":"2022-10-20"},{"lineNumber":318,"author":{"gitId":"linuschancs"},"content":"The `ViewClass` Command displays the list of Students in a particular class by updating the `FilteredStudentList` with a `ClassPredicate`.","lastModifiedDate":"2022-10-20"},{"lineNumber":319,"author":{"gitId":"linuschancs"},"content":"The ClassPredicate checks that a Student\u0027s Class matches the user input(ignoring case-sensitivity).","lastModifiedDate":"2022-10-20"},{"lineNumber":320,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":321,"author":{"gitId":"jeromepui"},"content":"*Insert Basic Class Diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":322,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":323,"author":{"gitId":"linuschancs"},"content":"Given below is an example usage scenario and how the ViewClass mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":324,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":325,"author":{"gitId":"linuschancs"},"content":"Step 1. Assuming Class-ify has been populated with sample data, the `FilteredStudentList` currently contains all Students and user can see all the students listed in the Student List Panel.","lastModifiedDate":"2022-10-20"},{"lineNumber":326,"author":{"gitId":"jeromepui"},"content":"*Insert Object Diagram showing user fields*","lastModifiedDate":"2022-10-25"},{"lineNumber":327,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":328,"author":{"gitId":"linuschancs"},"content":"Step 2. The user executes `viewClass 1A` command. ","lastModifiedDate":"2022-10-20"},{"lineNumber":329,"author":{"gitId":"jeromepui"},"content":"*Insert Object Diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":330,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":331,"author":{"gitId":"linuschancs"},"content":"Step 3. A new ClassPredicate object is created with the user input.","lastModifiedDate":"2022-10-20"},{"lineNumber":332,"author":{"gitId":"jeromepui"},"content":"*Insert Object Diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":333,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":334,"author":{"gitId":"linuschancs"},"content":"Step 4. The `updateFilteredStudentList` method in `model` is called with the ClassPredicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":335,"author":{"gitId":"jeromepui"},"content":"*Insert Object Diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":336,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":337,"author":{"gitId":"linuschancs"},"content":"Step 5. Class-ify displays the list of students with the class \"1A\" on the student card list panel according to the updated `FilteredStudentList`.","lastModifiedDate":"2022-10-20"},{"lineNumber":338,"author":{"gitId":"danielk0k"},"content":"*Insert Object Diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":339,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":340,"author":{"gitId":"linuschancs"},"content":"The following sequence diagram shows how the ViewClass Command works:","lastModifiedDate":"2022-10-20"},{"lineNumber":341,"author":{"gitId":"danielk0k"},"content":"*Insert Sequence Diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":342,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":343,"author":{"gitId":"linuschancs"},"content":"Design Considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":344,"author":{"gitId":"linuschancs"},"content":"1. Predicate logic for filtering students by their class","lastModifiedDate":"2022-10-20"},{"lineNumber":345,"author":{"gitId":"linuschancs"},"content":"2. Command name","lastModifiedDate":"2022-10-20"},{"lineNumber":346,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":347,"author":{"gitId":"linuschancs"},"content":"*To be further updated*","lastModifiedDate":"2022-10-20"},{"lineNumber":348,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":349,"author":{"gitId":"linuschancs"},"content":"#### 4.2.7 Toggle View command","lastModifiedDate":"2022-10-20"},{"lineNumber":350,"author":{"gitId":"maxtance"},"content":"Implementation: ","lastModifiedDate":"2022-10-20"},{"lineNumber":351,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":352,"author":{"gitId":"danielk0k"},"content":"The `ToggleViewCommand` toggles the application to display or hide all students\u0027 parent details. The following activity diagram shows the events that occur when the user executes the `ToggleViewCommand`.","lastModifiedDate":"2022-10-25"},{"lineNumber":353,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":354,"author":{"gitId":"jeromepui"},"content":"*Insert activity diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":355,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":356,"author":{"gitId":"maxtance"},"content":"The `Model`has an association with `FilteredStudent` where `FilteredStudent` encapsulates the current toggle status and `FilteredStudentList`. Executing the command will change the toggle status. The `StudentListPanel` is dependent on the toggle status in `FilteredStudent` to display or hide the students\u0027 parent details properly in the `StudentCard`.","lastModifiedDate":"2022-10-20"},{"lineNumber":357,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":358,"author":{"gitId":"maxtance"},"content":"The following sequence diagram shows the interaction between the `UI`, `Logic`, and `Model` component. ","lastModifiedDate":"2022-10-20"},{"lineNumber":359,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":360,"author":{"gitId":"jeromepui"},"content":"*Insert sequence diagram*","lastModifiedDate":"2022-10-25"},{"lineNumber":361,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":362,"author":{"gitId":"maxtance"},"content":"Given below is explains how the toggle view mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":363,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":364,"author":{"gitId":"maxtance"},"content":"Step 1. The user enters the command `toggleView`","lastModifiedDate":"2022-10-20"},{"lineNumber":365,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":366,"author":{"gitId":"maxtance"},"content":"Step 2. The `StudentRecordParser` will identify the command and create a `ToggleViewCommand` object in the `LogicManager`","lastModifiedDate":"2022-10-20"},{"lineNumber":367,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":368,"author":{"gitId":"maxtance"},"content":"Step 3. `ToggleViewCommand#execute` is called which changes the toggle status in `Model` ","lastModifiedDate":"2022-10-20"},{"lineNumber":369,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":370,"author":{"gitId":"maxtance"},"content":"Step 4. The `MainWindow` handles the updating of UI by requesting `StudentListPanel` to rerender the `StudentCard` to display or hide the student\u0027s parent details","lastModifiedDate":"2022-10-20"},{"lineNumber":371,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":372,"author":{"gitId":"maxtance"},"content":"With the above sequence, the UI is successfully updated to display the relevant student details according to the toggle status. ","lastModifiedDate":"2022-10-20"},{"lineNumber":373,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":374,"author":{"gitId":"maxtance"},"content":"Design considerations:","lastModifiedDate":"2022-10-20"},{"lineNumber":375,"author":{"gitId":"maxtance"},"content":"- Option 1: Each `Student` has a `isShowingParentDetails` `boolean` attribute","lastModifiedDate":"2022-10-20"},{"lineNumber":376,"author":{"gitId":"maxtance"},"content":"  - Pros:","lastModifiedDate":"2022-10-20"},{"lineNumber":377,"author":{"gitId":"maxtance"},"content":"    - The `StudentListPanel` will automatically update the `StudentCard` as it listens for changes in `FilteredStudentList`, thus reduces coupling (see Option 2 cons)   ","lastModifiedDate":"2022-10-20"},{"lineNumber":378,"author":{"gitId":"maxtance"},"content":"  - Cons: ","lastModifiedDate":"2022-10-20"},{"lineNumber":379,"author":{"gitId":"maxtance"},"content":"    - Each execution of the command edits and replaces all the students in the `FilteredStudentList` with new `Student` objects with the updated attribute which can be costly when there are many student objects ","lastModifiedDate":"2022-10-20"},{"lineNumber":380,"author":{"gitId":"maxtance"},"content":"    - Needs a global variable to track the current toggle as new `Student` objects added need to know the current state of the toggle","lastModifiedDate":"2022-10-20"},{"lineNumber":381,"author":{"gitId":"maxtance"},"content":"- Option 2 (current choice): The UI keeps track of the toggle","lastModifiedDate":"2022-10-20"},{"lineNumber":382,"author":{"gitId":"maxtance"},"content":"  - Pros:","lastModifiedDate":"2022-10-20"},{"lineNumber":383,"author":{"gitId":"maxtance"},"content":"    - No need to edit every student in the `FilteredStudentList`","lastModifiedDate":"2022-10-20"},{"lineNumber":384,"author":{"gitId":"maxtance"},"content":"    - Able to retain the previously filtered list after toggling","lastModifiedDate":"2022-10-20"},{"lineNumber":385,"author":{"gitId":"maxtance"},"content":"  - Cons: ","lastModifiedDate":"2022-10-20"},{"lineNumber":386,"author":{"gitId":"maxtance"},"content":"    - Increase in coupling as `StudentListPanel` is dependent on `FilteredStudent` for toggling information","lastModifiedDate":"2022-10-20"},{"lineNumber":387,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":388,"author":{"gitId":"linuschancs"},"content":"#### 4.2.8 ViewStats command","lastModifiedDate":"2022-10-20"},{"lineNumber":389,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":390,"author":{"gitId":"linuschancs"},"content":"*To be updated*","lastModifiedDate":"2022-10-20"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":392,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"jeromepui"},"content":"## 5. **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2022-10-17"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"jeromepui"},"content":"## 6. **Appendix: Requirements**","lastModifiedDate":"2022-10-17"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"jeromepui"},"content":"### 6.1 Product scope","lastModifiedDate":"2022-10-17"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"jeromepui"},"content":"Ministry of Education (MOE) Teachers who:","lastModifiedDate":"2022-10-17"},{"lineNumber":411,"author":{"gitId":"linuschancs"},"content":"* Teaches 3 to 5 classes a year","lastModifiedDate":"2022-09-29"},{"lineNumber":412,"author":{"gitId":"linuschancs"},"content":"* Manages about 60 to 100 students with varying needs","lastModifiedDate":"2022-09-29"},{"lineNumber":413,"author":{"gitId":"linuschancs"},"content":"* Finds paperwork time-consuming and messy","lastModifiedDate":"2022-09-29"},{"lineNumber":414,"author":{"gitId":"jeromepui"},"content":"* Finds it difficult to keep track of the academic progress of each individual student","lastModifiedDate":"2022-10-17"},{"lineNumber":415,"author":{"gitId":"linuschancs"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2022-09-29"},{"lineNumber":416,"author":{"gitId":"linuschancs"},"content":"* Types fast and is reasonably comfortable using CLI apps","lastModifiedDate":"2022-09-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"minjiunn"},"content":"**Value proposition**: an all-in-one platform to view and organize studentsâ€™ details. The teacher can keep track","lastModifiedDate":"2022-09-29"},{"lineNumber":419,"author":{"gitId":"minjiunn"},"content":"of class statistics / progress. Manage student details faster than a typical mouse/GUI driven app.","lastModifiedDate":"2022-09-29"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"jeromepui"},"content":"### 6.2 User stories","lastModifiedDate":"2022-10-17"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"danielk0k"},"content":"| Role (As a/ an)                                       | Goal/ Function (I want to)                                               | Benefit (So that I)                                                           | Priority |","lastModifiedDate":"2022-09-27"},{"lineNumber":426,"author":{"gitId":"jeromepui"},"content":"|-------------------------------------------------------|--------------------------------------------------------------------------|-------------------------------------------------------------------------------|----------|","lastModifiedDate":"2022-10-17"},{"lineNumber":427,"author":{"gitId":"danielk0k"},"content":"| new user                                              | purge all current data                                                   | can get rid of sample/experimental data I used for exploring the application. | ***      |","lastModifiedDate":"2022-09-27"},{"lineNumber":428,"author":{"gitId":"jeromepui"},"content":"| new user                                              | add in individual students\u0027 personal information                         | can easily find information pertaining to that student.                       | ***      |","lastModifiedDate":"2022-10-17"},{"lineNumber":429,"author":{"gitId":"jeromepui"},"content":"| new user                                              | add in individual students\u0027 academic results                             | I can keep track of their results over time.                                  | ***      |","lastModifiedDate":"2022-10-17"},{"lineNumber":430,"author":{"gitId":"jeromepui"},"content":"| new user                                              | view a summarised list of all students\u0027 information                      | get an overview of all the students that I am teaching.                       | ***      |","lastModifiedDate":"2022-10-17"},{"lineNumber":431,"author":{"gitId":"danielk0k"},"content":"| new user                                              | search for a student by his/her name                                     |                                                                               | ***      |","lastModifiedDate":"2022-09-27"},{"lineNumber":432,"author":{"gitId":"jeromepui"},"content":"| new user                                              | search for a student by his/her student ID                               |                                                                               | ***      |","lastModifiedDate":"2022-10-17"},{"lineNumber":433,"author":{"gitId":"danielk0k"},"content":"| new user                                              | search for a class by the class name                                     |                                                                               | ***      |","lastModifiedDate":"2022-09-27"},{"lineNumber":434,"author":{"gitId":"jeromepui"},"content":"| new user                                              | delete a student\u0027s record by his/her student ID                          |                                                                               | ***      |","lastModifiedDate":"2022-10-17"},{"lineNumber":435,"author":{"gitId":"jeromepui"},"content":"| new user                                              | delete a student\u0027s record by his/her name                                |                                                                               | ***      |","lastModifiedDate":"2022-10-17"},{"lineNumber":436,"author":{"gitId":"jeromepui"},"content":"| new user who is forgetful                             | automatically save the data without having to type in a separate command | do not need to worry about forgetting to save before I quit the application.  | ***      |","lastModifiedDate":"2022-10-17"},{"lineNumber":437,"author":{"gitId":"danielk0k"},"content":"| new user who is non-technical                         | follow a set of instructions/guide                                       | can get a sense of how to use the application.                                | ***      |","lastModifiedDate":"2022-09-27"},{"lineNumber":438,"author":{"gitId":"danielk0k"},"content":"| intermediate user                                     | update the details of any student record                                 | can keep my records accurate and up to date.                                  | ***      |","lastModifiedDate":"2022-09-27"},{"lineNumber":439,"author":{"gitId":"danielk0k"},"content":"| teacher with multiple classes                         | separate my different classes individually                               | can keep my records tidy and organised.                                       | ***      |","lastModifiedDate":"2022-09-27"},{"lineNumber":440,"author":{"gitId":"danielk0k"},"content":"| potential user                                        | see a summary of functionalities                                         | have an idea of what I can do with the app without accessing the user guide.  | **       |","lastModifiedDate":"2022-09-27"},{"lineNumber":441,"author":{"gitId":"jeromepui"},"content":"| potential user                                        | try the application with sample data                                     | can easily see how the application will look like when it is in use.          | **       |","lastModifiedDate":"2022-10-17"},{"lineNumber":442,"author":{"gitId":"danielk0k"},"content":"| intermediate user                                     | delete all student records from a class                                  | can reuse the class for another batch.                                        | **       |","lastModifiedDate":"2022-09-27"},{"lineNumber":443,"author":{"gitId":"jeromepui"},"content":"| intermediate user                                     | view statistics for the exam results of a particular class               | can have an overview of how all my students are doing.                        | **       |","lastModifiedDate":"2022-10-17"},{"lineNumber":444,"author":{"gitId":"danielk0k"},"content":"| intermediate user                                     | view a summary of my students\u0027 performance                               | can take note of my students\u0027 academic performance.                           | **       |","lastModifiedDate":"2022-09-27"},{"lineNumber":445,"author":{"gitId":"jeromepui"},"content":"| intermediate user                                     | see a list of students whose grades are below average                    | can quickly identify students who will need more help.                        | **       |","lastModifiedDate":"2022-10-17"},{"lineNumber":446,"author":{"gitId":"jeromepui"},"content":"| intermediate user                                     | see the parents\u0027 contact information of a student                        | can contact them to let them know that their child is not doing well.         | **       |","lastModifiedDate":"2022-10-17"},{"lineNumber":447,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":448,"author":{"gitId":"jeromepui"},"content":"### 6.3 Use cases","lastModifiedDate":"2022-10-17"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"danielk0k"},"content":"(For all use cases below, the **System** is `Class-ify` and the **Actor** is the `user`, unless specified otherwise.)","lastModifiedDate":"2022-10-26"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Use case: Add a new student**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"danielk0k"},"content":"1. User requests to add a new student to the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":457,"author":{"gitId":"danielk0k"},"content":"2. User enters relevant details of the new student.","lastModifiedDate":"2022-10-26"},{"lineNumber":458,"author":{"gitId":"danielk0k"},"content":"3. Class-ify adds new student into the student record.","lastModifiedDate":"2022-10-26"},{"lineNumber":459,"author":{"gitId":"danielk0k"},"content":"4. Class-ify displays an updated list of student(s).","lastModifiedDate":"2022-10-26"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"danielk0k"},"content":"* 2a. Student already exist in student record.","lastModifiedDate":"2022-10-26"},{"lineNumber":466,"author":{"gitId":"danielk0k"},"content":"   * 2a1. Class-ify displays a duplicate error message. ","lastModifiedDate":"2022-10-26"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"danielk0k"},"content":"     Use case resumes from step 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":470,"author":{"gitId":"danielk0k"},"content":"* 2b. User missed out a compulsory field.","lastModifiedDate":"2022-10-26"},{"lineNumber":471,"author":{"gitId":"danielk0k"},"content":"   * 2b1. Class-ify shows an invalid command error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"danielk0k"},"content":"     Use case resumes at step 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"danielk0k"},"content":"* 2c. Class-ify detects invalid format of field value.","lastModifiedDate":"2022-10-26"},{"lineNumber":476,"author":{"gitId":"danielk0k"},"content":"    * 2c1. Class-ify shows an invalid format error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Use case: Delete a student**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":482,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2022-09-29"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":484,"author":{"gitId":"danielk0k"},"content":"1. User requests to delete a student from the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":485,"author":{"gitId":"danielk0k"},"content":"2. User enters name or id of student to be deleted.","lastModifiedDate":"2022-10-26"},{"lineNumber":486,"author":{"gitId":"danielk0k"},"content":"3. Class-ify deletes student from the student record.","lastModifiedDate":"2022-10-26"},{"lineNumber":487,"author":{"gitId":"danielk0k"},"content":"4. Class-ify displays an updated list of student(s).","lastModifiedDate":"2022-10-26"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":489,"author":{"gitId":"linuschancs"},"content":"   Use case ends.","lastModifiedDate":"2022-09-29"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":491,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-29"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":493,"author":{"gitId":"danielk0k"},"content":"* 2a. Student does not exist in student record.","lastModifiedDate":"2022-10-26"},{"lineNumber":494,"author":{"gitId":"danielk0k"},"content":"    * 2a1. Class-ify displays an error message indicating the to-be-deleted student does not exist.","lastModifiedDate":"2022-10-26"},{"lineNumber":495,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":496,"author":{"gitId":"danielk0k"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":497,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":498,"author":{"gitId":"danielk0k"},"content":"* 2b. The student record is empty.","lastModifiedDate":"2022-10-26"},{"lineNumber":499,"author":{"gitId":"danielk0k"},"content":"    * 2b1. Class-ify displays an error message similar to 2a1.","lastModifiedDate":"2022-10-26"},{"lineNumber":500,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":501,"author":{"gitId":"danielk0k"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":502,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":503,"author":{"gitId":"danielk0k"},"content":"* 2c. Class-ify detects invalid format of field value.","lastModifiedDate":"2022-10-26"},{"lineNumber":504,"author":{"gitId":"danielk0k"},"content":"    * 2c1. Class-ify shows an invalid format error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":505,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":506,"author":{"gitId":"linuschancs"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":507,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":508,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Use case: Edit details of a student**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":510,"author":{"gitId":"danielk0k"},"content":"**MSS**","lastModifiedDate":"2022-10-26"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":512,"author":{"gitId":"danielk0k"},"content":"1. User requests to edit the details of a student from the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":513,"author":{"gitId":"danielk0k"},"content":"2. User enters index of student in the list to be edited.","lastModifiedDate":"2022-10-26"},{"lineNumber":514,"author":{"gitId":"danielk0k"},"content":"3. User enters the relevant details of the student to be edited.","lastModifiedDate":"2022-10-26"},{"lineNumber":515,"author":{"gitId":"danielk0k"},"content":"4. Class-ify updates the details of the student in the student record.","lastModifiedDate":"2022-10-26"},{"lineNumber":516,"author":{"gitId":"danielk0k"},"content":"5. Class-ify displays an updated list of student(s).","lastModifiedDate":"2022-10-26"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":518,"author":{"gitId":"danielk0k"},"content":"   Use case ends.","lastModifiedDate":"2022-10-26"},{"lineNumber":519,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":520,"author":{"gitId":"danielk0k"},"content":"**Extensions**","lastModifiedDate":"2022-10-26"},{"lineNumber":521,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":522,"author":{"gitId":"danielk0k"},"content":"* 2a. The given index is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":523,"author":{"gitId":"danielk0k"},"content":"    * 2a1. Class-ify displays an invalid command error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":524,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":525,"author":{"gitId":"danielk0k"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":526,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":527,"author":{"gitId":"danielk0k"},"content":"* 2b. The given index is out of bounds of the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":528,"author":{"gitId":"danielk0k"},"content":"    * 2b1. Class-ify displays an error message similar to 2a1.","lastModifiedDate":"2022-10-26"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":532,"author":{"gitId":"danielk0k"},"content":"* 3a. Class-ify detects invalid format of field value.","lastModifiedDate":"2022-10-26"},{"lineNumber":533,"author":{"gitId":"danielk0k"},"content":"    * 3a1. Class-ify shows an invalid format error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":535,"author":{"gitId":"danielk0k"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-10-26"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":537,"author":{"gitId":"danielk0k"},"content":"* 3b. No given fields to be edited.","lastModifiedDate":"2022-10-26"},{"lineNumber":538,"author":{"gitId":"danielk0k"},"content":"    * 3b1. Class-ify shows an error message to prompt user to enter at least one field to be edited.","lastModifiedDate":"2022-10-26"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":540,"author":{"gitId":"danielk0k"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2022-10-26"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":542,"author":{"gitId":"danielk0k"},"content":"\u003cu\u003e**Use case: Find a student**\u003c/u\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":543,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":544,"author":{"gitId":"danielk0k"},"content":"**MSS**","lastModifiedDate":"2022-10-26"},{"lineNumber":545,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":546,"author":{"gitId":"danielk0k"},"content":"1. User requests to find some student(s) in the list.","lastModifiedDate":"2022-10-26"},{"lineNumber":547,"author":{"gitId":"danielk0k"},"content":"2. User enters name or id of the student(s) to be found.","lastModifiedDate":"2022-10-26"},{"lineNumber":548,"author":{"gitId":"danielk0k"},"content":"3. Class-ify search for the student(s) in the student record.","lastModifiedDate":"2022-10-26"},{"lineNumber":549,"author":{"gitId":"danielk0k"},"content":"4. Class-ify displays a list of student(s) found.","lastModifiedDate":"2022-10-26"},{"lineNumber":550,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":551,"author":{"gitId":"danielk0k"},"content":"   Use case ends.","lastModifiedDate":"2022-10-26"},{"lineNumber":552,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":553,"author":{"gitId":"danielk0k"},"content":"**Extensions**","lastModifiedDate":"2022-10-26"},{"lineNumber":554,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":555,"author":{"gitId":"danielk0k"},"content":"* 2a. No fields are given.","lastModifiedDate":"2022-10-26"},{"lineNumber":556,"author":{"gitId":"danielk0k"},"content":"    * 2a1. Class-ify displays an invalid command error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":557,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":558,"author":{"gitId":"danielk0k"},"content":"      Use case resumes from step 2.","lastModifiedDate":"2022-10-26"},{"lineNumber":559,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":560,"author":{"gitId":"danielk0k"},"content":"* 2b. Class-ify detects invalid format of field value.","lastModifiedDate":"2022-10-26"},{"lineNumber":561,"author":{"gitId":"danielk0k"},"content":"    * 2b1. Class-ify shows an invalid format error message.","lastModifiedDate":"2022-10-26"},{"lineNumber":562,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":563,"author":{"gitId":"linuschancs"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2022-09-29"},{"lineNumber":564,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":565,"author":{"gitId":"danielk0k"},"content":"* 4a. No students are found.","lastModifiedDate":"2022-10-26"},{"lineNumber":566,"author":{"gitId":"danielk0k"},"content":"    * 4b1. Class-ify display an empty list and a message indicating no students are found. ","lastModifiedDate":"2022-10-26"},{"lineNumber":567,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":568,"author":{"gitId":"danielk0k"},"content":"      Use case ends.","lastModifiedDate":"2022-10-26"},{"lineNumber":569,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":570,"author":{"gitId":"jeromepui"},"content":"*More to be added*","lastModifiedDate":"2022-10-17"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"jeromepui"},"content":"### 6.4 Non-Functional Requirements","lastModifiedDate":"2022-10-17"},{"lineNumber":573,"author":{"gitId":"jeromepui"},"content":"- **Technical Requirement**:","lastModifiedDate":"2022-09-28"},{"lineNumber":574,"author":{"gitId":"jeromepui"},"content":"  - Application should work on any mainstream operating system (OS) as long as it has Java version 11 or above installed.","lastModifiedDate":"2022-10-17"},{"lineNumber":575,"author":{"gitId":"jeromepui"},"content":"- **Quality Requirement**:","lastModifiedDate":"2022-09-28"},{"lineNumber":576,"author":{"gitId":"jeromepui"},"content":"  - Display of information on the application should not feel cluttered.","lastModifiedDate":"2022-09-28"},{"lineNumber":577,"author":{"gitId":"jeromepui"},"content":"- **Performance Requirement**:","lastModifiedDate":"2022-09-28"},{"lineNumber":578,"author":{"gitId":"jeromepui"},"content":"  - Should be able to process any command within two seconds - response of application should not feel laggy.","lastModifiedDate":"2022-09-28"},{"lineNumber":579,"author":{"gitId":"jeromepui"},"content":"- **Project Scope**:","lastModifiedDate":"2022-09-28"},{"lineNumber":580,"author":{"gitId":"jeromepui"},"content":"  - Application does not offer student or parent accounts, and hence no communication with students or their guardians via the product.","lastModifiedDate":"2022-09-28"},{"lineNumber":581,"author":{"gitId":"jeromepui"},"content":"  - Application does not allow synchronisation of class lists with other teachers, but allows for sharing of data between teachers.","lastModifiedDate":"2022-09-28"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"jeromepui"},"content":"*More to be added*","lastModifiedDate":"2022-10-17"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"jeromepui"},"content":"### 6.5 Glossary","lastModifiedDate":"2022-10-17"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"maxtance"},"content":"* **Student**: a person studying in a secondary school. A student typically takes up to 8 subjects and thus, may be taught by up to 8 teachers.","lastModifiedDate":"2022-09-29"},{"lineNumber":589,"author":{"gitId":"jeromepui"},"content":"* **MOE Teacher**: a person teaching a subject in a secondary school. A teacher usually teaches 3 to 5 classes. Each class has roughly 20 students.","lastModifiedDate":"2022-10-17"},{"lineNumber":590,"author":{"gitId":"maxtance"},"content":"* **CLI**: Command Line Interface (CLI) is a text-based User Interface (UI) used to run programs.","lastModifiedDate":"2022-09-28"},{"lineNumber":591,"author":{"gitId":"maxtance"},"content":"Through the CLI, users interact with the application by typing in text commands","lastModifiedDate":"2022-09-28"},{"lineNumber":592,"author":{"gitId":"maxtance"},"content":"* **MSS**: Main Success Scenario (MSS) describes the most straightforward interaction for a given use case, ","lastModifiedDate":"2022-09-28"},{"lineNumber":593,"author":{"gitId":"maxtance"},"content":"which assumes that nothing goes wrong","lastModifiedDate":"2022-09-28"},{"lineNumber":594,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":595,"author":{"gitId":"jeromepui"},"content":"*More to be added*","lastModifiedDate":"2022-10-17"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":597,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"jeromepui"},"content":"## 7. **Appendix: Instructions for manual testing**","lastModifiedDate":"2022-10-17"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"jeromepui"},"content":"\u003cdiv class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2022-10-25"},{"lineNumber":604,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"jeromepui"},"content":"### 7.1 Launch and shutdown","lastModifiedDate":"2022-10-17"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"jeromepui"},"content":"   2. Double-click the jar file","lastModifiedDate":"2022-10-26"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"jeromepui"},"content":"Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2022-10-26"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"jeromepui"},"content":"2. Saving window preferences","lastModifiedDate":"2022-10-25"},{"lineNumber":617,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"jeromepui"},"content":"   2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"jeromepui"},"content":"### 7.2 Adding a new student record","lastModifiedDate":"2022-10-25"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"jeromepui"},"content":"Prerequisites: Existing student records do not have the names or IDs that will be added.","lastModifiedDate":"2022-10-25"},{"lineNumber":625,"author":{"gitId":"jeromepui"},"content":"1. Test case: `addstud nm/Peter Tan id/452B class/1F`","lastModifiedDate":"2022-10-25"},{"lineNumber":626,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"jeromepui"},"content":"Expected: A new student record with the provided details is added to the list. Details of the student record are shown in the status message. Since no exam grades have been provided, the student card UI does not show anything below the grades section.","lastModifiedDate":"2022-10-26"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":629,"author":{"gitId":"jeromepui"},"content":"2. Test case: `addstud nm/Alex Yeoh id/123A class/2B exam/CA1 60 exam/CA2 70`","lastModifiedDate":"2022-10-25"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":631,"author":{"gitId":"jeromepui"},"content":"Expected: A new student record with the provided details is added to the list. Details of the student record are shown in the status message. Since exam grades have been provided, the student card UI shows the exam scores for each exam that has been provided.","lastModifiedDate":"2022-10-25"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":633,"author":{"gitId":"jeromepui"},"content":"3. Test case: `addstud nm/John Doe id/928C class/1A pn/Bob Doe hp/98765432 e/bobdoe@gmail.com exam/CA1 50`","lastModifiedDate":"2022-10-25"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":635,"author":{"gitId":"jeromepui"},"content":"Expected: A new student record with the provided details is added to the list. Details of the student record are shown in the status message. This test case includes parents\u0027 details as well.","lastModifiedDate":"2022-10-25"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":637,"author":{"gitId":"jeromepui"},"content":"4. Test case: `addstud nm/Jonathan Lim id/abc2 class/2A`","lastModifiedDate":"2022-10-25"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"jeromepui"},"content":"Expected: The command entered by the user is highlighted red. The status message shows an error: \"Id should only contain 3 digits and 1 character\". \"abc2\" is an invalid value for the ID as Class-ify only accepts the last 3 numbers and last letter of a student\u0027s ID.","lastModifiedDate":"2022-10-25"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"jeromepui"},"content":"### 7.3 Editing a student record","lastModifiedDate":"2022-10-25"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"jeromepui"},"content":"1. Test case: `edit 1 exam/CA2 70 exam/SA1 60`","lastModifiedDate":"2022-10-25"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"jeromepui"},"content":"Expected: Adds or updates the CA2 and SA1 exam grades of the 1st student in the list to be `70` and `60` respectively.","lastModifiedDate":"2022-10-25"},{"lineNumber":646,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":647,"author":{"gitId":"jeromepui"},"content":"2. Test case `edit 2 nm/Jacob Teo`","lastModifiedDate":"2022-10-25"},{"lineNumber":648,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":649,"author":{"gitId":"jeromepui"},"content":"Expected: Edits the name of the 2nd student in the list to `Jacob Teo`.","lastModifiedDate":"2022-10-25"},{"lineNumber":650,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":651,"author":{"gitId":"jeromepui"},"content":"### 7.4 Deleting a student record","lastModifiedDate":"2022-10-25"},{"lineNumber":652,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":653,"author":{"gitId":"jeromepui"},"content":"Prerequisites: List all persons using the `list` command. Multiple students in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":654,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":655,"author":{"gitId":"jeromepui"},"content":"1. Test case: `delete 1`","lastModifiedDate":"2022-10-25"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"jeromepui"},"content":"2. Test case: `delete 0`","lastModifiedDate":"2022-10-25"},{"lineNumber":660,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":661,"author":{"gitId":"-"},"content":"Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"jeromepui"},"content":"3. Other incorrect delete commands to try: `delete`, `delete x`","lastModifiedDate":"2022-10-25"},{"lineNumber":664,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":665,"author":{"gitId":"-"},"content":"Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"jeromepui"},"content":"### 7.5 Finding a student record","lastModifiedDate":"2022-10-25"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"jeromepui"},"content":"Prerequisites: Students with \"Alex\" in their name exist in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"jeromepui"},"content":"1. Test case: `find nm/Alex`","lastModifiedDate":"2022-10-25"},{"lineNumber":672,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":673,"author":{"gitId":"jeromepui"},"content":"Expected: Students with \"Alex\" in their name appears in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"jeromepui"},"content":"Prerequisites: Student with \"123A\" as their ID exists in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"jeromepui"},"content":"1. Test case: `find id/123A`","lastModifiedDate":"2022-10-25"},{"lineNumber":678,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":679,"author":{"gitId":"jeromepui"},"content":"Expected: Student with \"123A\" as their ID appears in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":680,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":681,"author":{"gitId":"jeromepui"},"content":"### 7.6 Viewing all student records","lastModifiedDate":"2022-10-25"},{"lineNumber":682,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":683,"author":{"gitId":"jeromepui"},"content":"Prerequisites: There are existing student records.","lastModifiedDate":"2022-10-25"},{"lineNumber":684,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":685,"author":{"gitId":"jeromepui"},"content":"1. Test case: `viewAll`","lastModifiedDate":"2022-10-25"},{"lineNumber":686,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":687,"author":{"gitId":"jeromepui"},"content":"Expected: All student records will appear in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":688,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":689,"author":{"gitId":"jeromepui"},"content":"### 7.7 Viewing student records from a class","lastModifiedDate":"2022-10-25"},{"lineNumber":690,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":691,"author":{"gitId":"jeromepui"},"content":"Prerequisites: Class provided must exist within the student records.","lastModifiedDate":"2022-10-25"},{"lineNumber":692,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":693,"author":{"gitId":"jeromepui"},"content":"1. Test case: `viewClass 1A`","lastModifiedDate":"2022-10-25"},{"lineNumber":694,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":695,"author":{"gitId":"jeromepui"},"content":"Expected: Student records from class 1A will appear in the list.","lastModifiedDate":"2022-10-25"},{"lineNumber":696,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":697,"author":{"gitId":"jeromepui"},"content":"### 7.8 Toggling view","lastModifiedDate":"2022-10-25"},{"lineNumber":698,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":699,"author":{"gitId":"jeromepui"},"content":"1. Test case: `toggleView`","lastModifiedDate":"2022-10-25"},{"lineNumber":700,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":701,"author":{"gitId":"jeromepui"},"content":"Expected: Shows/hides parent details in each student card UI.","lastModifiedDate":"2022-10-25"},{"lineNumber":702,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":703,"author":{"gitId":"jeromepui"},"content":"### 7.9 Calculating exam statistics","lastModifiedDate":"2022-10-25"},{"lineNumber":704,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":705,"author":{"gitId":"jeromepui"},"content":"*To be updated*","lastModifiedDate":"2022-10-25"},{"lineNumber":706,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":707,"author":{"gitId":"jeromepui"},"content":"### 7.10 Saving data","lastModifiedDate":"2022-10-25"},{"lineNumber":708,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":709,"author":{"gitId":"jeromepui"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2022-10-25"},{"lineNumber":710,"author":{"gitId":"jeromepui"},"content":"   1. Prerequisites: Missing `data/classify.json` file","lastModifiedDate":"2022-10-25"},{"lineNumber":711,"author":{"gitId":"jeromepui"},"content":"      1. Test case: Delete `data/classify.json` file and relaunch the application.","lastModifiedDate":"2022-10-25"},{"lineNumber":712,"author":{"gitId":"jeromepui"},"content":"         Expected: Application will be populated with sample data.","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"jeromepui":222,"-":246,"maxtance":37,"danielk0k":144,"minjiunn":16,"linuschancs":47}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"   1. Run the `seedu.classify.Main` and try a few commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBookâ€™s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"jeromepui":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"   e.g. `seedu.classify.commons.StringUtilTest`","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"   e.g. `seedu.classify.storage.StorageManagerTest`","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"   e.g. `seedu.classify.logic.LogicManagerTest`","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromepui":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"## 1. **Introduction**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"### 1.1 What is Class-ify?","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"Class-ify is a class management application built specially for Ministry of Education (MOE) teachers to easily monitor ","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"their studentsâ€™ academic progress. Teachers can generate exam statistics for each class, and Class-ify quickly flags out","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"students who require more support for contacting.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"### 1.2 Who is this guide for?","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"Are you a teacher who is looking to use Class-ify to manage your classes? Well, look no further! This user guide will","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"get you started in no time and be your guiding light as you navigate through Class-ify\u0027s features. For a quick start","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"guide, head over to [Quick Start](#2-quick-start) or to learn about Class-ify\u0027s features, head over to","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"[Features](#3-features) for more information.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"## 2 How to use this user guide","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"Class-ify uses a command line interface, which may be new to some users. We strongly recommend new users to look through","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"the user guide thoroughly to understand how to use Class-ify. We have also included some links to navigate around the","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"user guide more easily for related information. This guide also contains some tips and cautions for you to take note of","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"when using our application. Additionally, we have provided a link back to the table of contents at the end of each","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"section. We suggest using our table of contents to jump around and access information that you need quickly.","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"maxtance"},"content":"### 2.1 Symbols","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"Before you begin reading, here are some special notations to help you along the way!","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"**Tips**","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"Tips are useful bits of information that will help you have a better experience with Class-ify.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"**Tip:** Tips are useful!","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"\u003c/div\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"**Notes**","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"Notes are here to provide you with extra information that you may find helpful when using Class-ify.","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"maxtance"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"**Note:** Take notes when you see this icon!","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"\u003c/div\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"**Caution**","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"Cautions are around to warn you of potential pitfalls that new users may encounter. For example, commands like `clear`","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jeromepui"},"content":"will delete all data stored locally and this action is irreversible. You will lose your data permanently.","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":":exclamation: Stop and read carefully when you see this!","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"maxtance"},"content":"### 2.2 Command format","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"maxtance"},"content":"*To be updated*","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"maxtance"},"content":"### 2.3 Command parameters","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"maxtance"},"content":"*To be updated*","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"maxtance"},"content":"## 3. **Quick start**","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"jeromepui"},"content":"2. Download the latest `classify.jar` from [here](https://github.com/AY2223S1-CS2103T-T15-2/tp/releases).","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"jeromepui"},"content":"3. Copy the file to the folder you want to use as the **home folder** for *Class-ify*.","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"jeromepui"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"jeromepui"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"   * **`addstud`**`nm/John Doe id/928C class/1A pn/Bob Doe hp/98765432 exam/CA1 90` : Adds a new student named `John Doe` with his details to *Class-ify*.","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"jeromepui"},"content":"   * **`viewAll`** : Shows a list of all student records.","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"jeromepui"},"content":"   * **`delete`**`n/Jonathan Tan` : Deletes the student record with name of student as \u0027Jonathan Tan\u0027.","lastModifiedDate":"2022-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"jeromepui"},"content":"   * **`clear`** : Clears all student records.","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"jeromepui"},"content":"   * **`exit`** : Exits the application.","lastModifiedDate":"2022-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"jeromepui"},"content":"Click \u003ca href\u003d\"#top\"\u003ehere\u003c/a\u003e to return to the top.","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"maxtance"},"content":"## 4. **Features**","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"maxtance"},"content":"## 4.1 Managing student records","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"maxtance"},"content":"### 4.1.1 Adding a new student record : `addstud`","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"Creates a new student record with the following details:","lastModifiedDate":"2022-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"* **Name of Student** `nm/`","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"* **Student\u0027s ID (last 4 digits of NRIC)** `id/`","lastModifiedDate":"2022-10-25"},{"lineNumber":110,"author":{"gitId":"danielk0k"},"content":"* **Student\u0027s Class** `class/`","lastModifiedDate":"2022-10-25"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"* Exam Grades for CA1, CA2, SA1, and SA2 `exam/`","lastModifiedDate":"2022-10-25"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"* Name of Parent `pn/`","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"danielk0k"},"content":"* Mobile Number of Parent `hp/`","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"* Email Address of Parent `e/`","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"Format: `addstud nm/[STUDENT-NAME] id/[ID] class/[CLASS] exam/[NAME SCORE] pn/[PARENT-NAME] hp/[PHONE-NUMBER] e/[EMAIL]`","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"**Tip #1:** All **bolded** fields are compulsory. Optional fields can be added later using the [edit command](#414-editing-a-student-record--edit).","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-25"},{"lineNumber":123,"author":{"gitId":"danielk0k"},"content":"**Tip #2:** To add exam grades, specify the tag `exam/` followed by an exam name (CA1, CA2, SA1, or SA2) and score (a number from 0 to 100). Multiple exams can be added in a single line.\u003cbr\u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"Example: `exam/CA1 50 exam/SA1 60 exam/CA1 80` will add grades 80 for CA1 and 60 for SA1. Notice the first score for CA1 is overridden by the second score for CA1.","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"danielk0k"},"content":"* `addstud nm/Peter Tan id/452B class/1F`","lastModifiedDate":"2022-10-25"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"* `addstud nm/Alex Yeoh id/123A class/2B exam/CA1 60 exam/CA2 70`","lastModifiedDate":"2022-10-25"},{"lineNumber":130,"author":{"gitId":"danielk0k"},"content":"* `addstud nm/John Doe id/928C class/1A pn/Bob Doe hp/98765432 e/bobdoe@gmail.com exam/CA1 50`","lastModifiedDate":"2022-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"maxtance"},"content":"### 4.1.2 Clearing all student records : `clear`","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"maxtance"},"content":"Clears all student records from local storage.","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"maxtance"},"content":"Format: `clear`","lastModifiedDate":"2022-10-24"},{"lineNumber":137,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"maxtance"},"content":"### 4.1.3 Deleting a student record : `delete`","lastModifiedDate":"2022-10-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"maxtance"},"content":"Deletes an existing student record from the class list, using the studentâ€™s name or the studentâ€™s ID.","lastModifiedDate":"2022-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"maxtance"},"content":"Format: `delete nm/[name of student]` or `delete id/[id of student]`","lastModifiedDate":"2022-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"linuschancs"},"content":"Examples:","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"maxtance"},"content":"* `delete nm/Jonathan Tan` deletes student record with student name as \u0027Jonathan Tan\u0027.","lastModifiedDate":"2022-10-24"},{"lineNumber":146,"author":{"gitId":"maxtance"},"content":"* `delete id/123A` deletes student record with student ID as \u0027123A\u0027.","lastModifiedDate":"2022-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":148,"author":{"gitId":"danielk0k"},"content":"### 4.1.4 Editing a student record : `edit`","lastModifiedDate":"2022-10-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"danielk0k"},"content":"Edits the respective details of an existing student.","lastModifiedDate":"2022-10-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"danielk0k"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the current displayed list. The index **must be a positive integer** 1, 2, 3 ...","lastModifiedDate":"2022-10-25"},{"lineNumber":153,"author":{"gitId":"danielk0k"},"content":"* Existing values will be updated to the new input values.","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"danielk0k"},"content":"* Refer to the complete list of tags for each field under [addstud command](#411-adding-a-new-student-record--addstud).","lastModifiedDate":"2022-10-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"danielk0k"},"content":"Format: `edit [INDEX] nm/[STUDENT-NAME] id/[ID] exam/[NAME SCORE] pn/[PARENT-NAME]...`","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"danielk0k"},"content":"*  `edit 1 exam/CA2 70 exam/SA1 60` Adds or updates the CA2 and SA1 exam grades of the 1st student to be `70` and `60` respectively.","lastModifiedDate":"2022-10-25"},{"lineNumber":160,"author":{"gitId":"danielk0k"},"content":"*  `edit 2 nm/Jacob Teo` Edits the name of the 2nd student to `Jacob Teo`.","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"maxtance"},"content":"## 4.2 Managing display of student records","lastModifiedDate":"2022-10-24"},{"lineNumber":163,"author":{"gitId":"maxtance"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"maxtance"},"content":"   **Note:**","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"maxtance"},"content":"   The default display, when starting the application, shows all student records in Classify.","lastModifiedDate":"2022-10-24"},{"lineNumber":166,"author":{"gitId":"maxtance"},"content":"   Commands related to managing display are not saved upon exiting the application.","lastModifiedDate":"2022-10-24"},{"lineNumber":167,"author":{"gitId":"maxtance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"maxtance"},"content":"### 4.2.1 Finding a student record : `find`","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"minjiunn"},"content":"Shows a full record, including all stored details, using the input student\u0027s name or student\u0027s id. Search for multiple","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"minjiunn"},"content":"students by including more keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"minjiunn"},"content":"Format: `view nm/[name]` or `view id/[id]`","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"minjiunn"},"content":"* Only the name or the id is searched, depending on the given input.","lastModifiedDate":"2022-09-29"},{"lineNumber":178,"author":{"gitId":"minjiunn"},"content":"* Only full names / full ids will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2022-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"minjiunn"},"content":"* `view nm/John` returns the record for the student named `john`","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"minjiunn"},"content":"* `view nm/john alice` returns the records for the students named `John` and the student named `Alice`.","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"maxtance"},"content":"### 4.2.2 Toggling view : `toggleView`","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"maxtance"},"content":"Toggles the display between showing and hiding the students\u0027 parent details. ","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"maxtance"},"content":"Format: `toggleView`","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"maxtance"},"content":"*To be updated: insert screenshots*","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"maxtance"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"maxtance"},"content":"   **Tip:** The default display renders the students\u0027 parent details as a reminder that these optional fields exists.    ","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"maxtance"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"maxtance"},"content":"### 4.2.3 Viewing all student records : `viewAll`","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"maxtance"},"content":"Shows a list of all student records in Classify.","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"maxtance"},"content":"Format: `viewAll`","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"maxtance"},"content":"### 4.2.4 Viewing student records from a class : `viewClass`","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"maxtance"},"content":"Shows a list of all students in the specified class.","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"maxtance"},"content":"Format: `viewClass [class name]`","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"maxtance"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2022-10-24"},{"lineNumber":209,"author":{"gitId":"maxtance"},"content":"   **Note:** Class name is case-insensitive.","lastModifiedDate":"2022-10-24"},{"lineNumber":210,"author":{"gitId":"maxtance"},"content":"\u003c/div\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2022-10-24"},{"lineNumber":213,"author":{"gitId":"maxtance"},"content":"* `viewClass 2A`","lastModifiedDate":"2022-10-24"},{"lineNumber":214,"author":{"gitId":"maxtance"},"content":"* `viewClass Loyalty1`","lastModifiedDate":"2022-10-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":216,"author":{"gitId":"maxtance"},"content":"## 4.3 Exam statistics","lastModifiedDate":"2022-10-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":218,"author":{"gitId":"maxtance"},"content":"### 4.3.1 Getting exam statistics: `statistics`","lastModifiedDate":"2022-10-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":220,"author":{"gitId":"maxtance"},"content":"*To be updated* ","lastModifiedDate":"2022-10-24"},{"lineNumber":221,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":222,"author":{"gitId":"maxtance"},"content":"## 4.4 Miscellaneous","lastModifiedDate":"2022-10-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":224,"author":{"gitId":"maxtance"},"content":"### 4.4.1 Exiting the application : `exit`","lastModifiedDate":"2022-10-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"jeromepui"},"content":"Exits the application.","lastModifiedDate":"2022-10-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"maxtance"},"content":"### 4.4.2 Viewing help : `help`","lastModifiedDate":"2022-10-24"},{"lineNumber":231,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":232,"author":{"gitId":"maxtance"},"content":"Shows a summary of all commands available.","lastModifiedDate":"2022-10-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":234,"author":{"gitId":"maxtance"},"content":"Format: `help`","lastModifiedDate":"2022-10-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":236,"author":{"gitId":"maxtance"},"content":"### 4.4.3 Saving the data","lastModifiedDate":"2022-10-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"jeromepui"},"content":"Student records are saved locally after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"jeromepui"},"content":"Click \u003ca href\u003d\"#top\"\u003ehere\u003c/a\u003e to return to the top.","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"maxtance"},"content":"## 5. **FAQ**","lastModifiedDate":"2022-10-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"maxtance"},"content":"**Q**: Where can I locate my data file?  ","lastModifiedDate":"2022-09-29"},{"lineNumber":247,"author":{"gitId":"maxtance"},"content":"**A**: You can locate the JSON file in the path `[JAR file location]/data/classify.json`.","lastModifiedDate":"2022-09-29"},{"lineNumber":248,"author":{"gitId":"maxtance"},"content":"We suggest that you **do not** edit the data file.","lastModifiedDate":"2022-09-29"},{"lineNumber":249,"author":{"gitId":"maxtance"},"content":"Class-ify will discard all data and start with an empty data file at the next run if the format of the data file is invalid.","lastModifiedDate":"2022-09-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":251,"author":{"gitId":"maxtance"},"content":"**Q**: Why is Class-ify not running?  ","lastModifiedDate":"2022-09-29"},{"lineNumber":252,"author":{"gitId":"maxtance"},"content":"**A**: Ensure Java`11` or above is installed on your computer.","lastModifiedDate":"2022-09-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"jeromepui"},"content":"Click \u003ca href\u003d\"#top\"\u003ehere\u003c/a\u003e to return to the top.","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"maxtance"},"content":"## 6. **Command summary**","lastModifiedDate":"2022-10-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"minjiunn"},"content":"|              Action               | Format                                                                                                           | Example                                                                       |  ","lastModifiedDate":"2022-09-29"},{"lineNumber":261,"author":{"gitId":"danielk0k"},"content":"|:---------------------------------:|:-----------------------------------------------------------------------------------------------------------------|:------------------------------------------------------------------------------|","lastModifiedDate":"2022-10-25"},{"lineNumber":262,"author":{"gitId":"danielk0k"},"content":"|     Add a new student record      | `addstud nm/[STUDENT-NAME] id/[ID] class/[CLASS] exam/[NAME SCORE] pn/[PARENT-NAME] hp/[PHONE-NUMBER] e/[EMAIL]` | _addstud nm/Alex Yeoh id/123A class/1A pn/Bernice Yu hp/99272758 exam/CA1 90_ |","lastModifiedDate":"2022-10-25"},{"lineNumber":263,"author":{"gitId":"jeromepui"},"content":"|     View all student records      | `viewAll`                                                                                                        | _viewAll_                                                                     |","lastModifiedDate":"2022-10-24"},{"lineNumber":264,"author":{"gitId":"jeromepui"},"content":"| View student records from a class | `viewClass [class name]`                                                                                         | _viewClass 1A_                                                                |","lastModifiedDate":"2022-10-24"},{"lineNumber":265,"author":{"gitId":"danielk0k"},"content":"|       Edit a student record       | `edit [INDEX] nm/[STUDENT-NAME] id/[ID] exam/[NAME SCORE] pn/[PARENT-NAME]...`                                   | _edit 1 nm/Alexander Yeoh_                                                    |","lastModifiedDate":"2022-10-25"},{"lineNumber":266,"author":{"gitId":"jeromepui"},"content":"|      Delete a student record      | `delete nm/[name]` or `delete id/[id]`                                                                           | _delete nm/Jonathan Tan or delete id/123A_                                    |","lastModifiedDate":"2022-10-24"},{"lineNumber":267,"author":{"gitId":"jeromepui"},"content":"|       Find a student record       | `find nm/[name]` or `find id/[id]`                                                                               | _find nm/Jonathan Tan or find id/123A_                                        |","lastModifiedDate":"2022-10-24"},{"lineNumber":268,"author":{"gitId":"jeromepui"},"content":"|            Toggle view            | `toggleView`                                                                                                     | _toggleView_                                                                  |","lastModifiedDate":"2022-10-24"},{"lineNumber":269,"author":{"gitId":"jeromepui"},"content":"|     Clear all student records     | `clear`                                                                                                          | _clear_                                                                       |","lastModifiedDate":"2022-10-17"},{"lineNumber":270,"author":{"gitId":"jeromepui"},"content":"|    View command summary table     | `help`                                                                                                           | _help_                                                                        |","lastModifiedDate":"2022-10-24"},{"lineNumber":271,"author":{"gitId":"jeromepui"},"content":"|         Exit application          | `exit`                                                                                                           | _exit_                                                                        |","lastModifiedDate":"2022-10-24"},{"lineNumber":272,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":273,"author":{"gitId":"jeromepui"},"content":"Click \u003ca href\u003d\"#top\"\u003ehere\u003c/a\u003e to return to the top.","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"maxtance"},"content":"## 7. **Glossary**","lastModifiedDate":"2022-10-24"},{"lineNumber":278,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"jeromepui"},"content":"* **CLI**: Command Line Interface (CLI) is a text-based User Interface (UI) used to run programs. Through the CLI,","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"jeromepui"},"content":"users interact with the application by typing in text commands.","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"jeromepui"},"content":"* **Student**: a person studying in a secondary school. A student typically takes up to 8 subjects and thus, may be","lastModifiedDate":"2022-10-20"},{"lineNumber":282,"author":{"gitId":"jeromepui"},"content":"taught by up to 8 teachers.","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"jeromepui"},"content":"* **MOE Teacher**: a person teaching a subject in a secondary school. A teacher usually teaches 3 to 5 classes. Each","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"jeromepui"},"content":"class has roughly 20 students.","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromepui":72,"-":103,"maxtance":66,"danielk0k":33,"linuschancs":2,"minjiunn":9}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"danielk0k"},"content":"    content: \"Class-ify\";","lastModifiedDate":"2022-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"danielk0k":1}},{"path":"docs/diagrams/AddStudentCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"@startuml","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"!include style.puml","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"start","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":":User inputs addstud command;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":":Parse user input;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"if () then ([valid command])","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"    if () then ([student in student record])","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"        :Display duplicate student message;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    else ([else])","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"        :Save student in student record;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"        :Display success message;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    endif","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"else ([else])","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    :Display invalid command message;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"endif","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"stop","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"@enduml","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"danielk0k":20}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"user -[USER_COLOR]\u003e ui : \"delete id/123A\"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete id/123A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(s)","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveStudentRecord(studentRecord)","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromepui":4,"-":34}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"StudentRecord *-right-\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"StudentRecord *-right-\u003e \"1\" UniqueClassList","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"UniqueClassList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"UniqueClassList -[hidden]down- UniqueStudentList","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"UniqueClassList -right-\u003e Class","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"UniqueStudentList -right-\u003e Student","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"Class -down-\u003e Student","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"Class *-down-\u003e Exam","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Name","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Id","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Phone","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Email","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"Student --\u003e Exam","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"Name -[hidden]right-\u003e Id","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"Id -[hidden]right-\u003e Phone","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"Email -[hidden]right-\u003e Exam","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":10,"danielk0k":18}},{"path":"docs/diagrams/DeleteCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"@startuml","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"jeromepui"},"content":"!include style.puml","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"participant \":StudentRecordParser\" as StudentRecordParser LOGIC_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"end box","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"end box","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"[-\u003e LogicManager : execute(\"delete id/123A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"activate LogicManager","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"LogicManager -\u003e StudentRecordParser : parseCommand(\"delete id/123A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"activate StudentRecordParser","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"create DeleteCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"StudentRecordParser -\u003e DeleteCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"DeleteCommandParser --\u003e StudentRecordParser","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"StudentRecordParser -\u003e DeleteCommandParser : parse(\" id/123A\")","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"activate DeleteCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"create DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"activate DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"DeleteCommandParser --\u003e StudentRecordParser : d","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"DeleteCommandParser -[hidden]-\u003e StudentRecordParser","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"StudentRecordParser --\u003e LogicManager : d","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"deactivate StudentRecordParser","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"LogicManager -\u003e DeleteCommand : execute(Model)","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"jeromepui"},"content":"activate DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"DeleteCommand -\u003e Model : updateFilteredStudentList(Predicate)","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"activate Model","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"jeromepui"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"deactivate Model","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"jeromepui"},"content":"DeleteCommand -\u003e Model : deleteStudent(Student)","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"activate Model","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":61,"author":{"gitId":"jeromepui"},"content":"deactivate Model","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"jeromepui"},"content":"DeleteCommand -\u003e Model : updateFilteredStudentList(Predicate)","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"activate Model","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":66,"author":{"gitId":"jeromepui"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"jeromepui"},"content":"deactivate Model","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"jeromepui"},"content":"create CommandResult","lastModifiedDate":"2022-10-25"},{"lineNumber":70,"author":{"gitId":"jeromepui"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"jeromepui"},"content":"activate CommandResult","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"jeromepui"},"content":"CommandResult --\u003e DeleteCommand : commandResult","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"jeromepui"},"content":"deactivate CommandResult","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"jeromepui"},"content":"DeleteCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"jeromepui"},"content":"deactivate DeleteCommand","lastModifiedDate":"2022-10-25"},{"lineNumber":78,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"jeromepui"},"content":"[\u003c--LogicManager","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"jeromepui"},"content":"deactivate LogicManager","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"jeromepui"},"content":"@enduml","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"jeromepui":81}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"Class StudentRecordParser","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"LogicManager -right-\u003e\"1\" StudentRecordParser","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"StudentRecordParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromepui":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyStudentRecord\" as ReadOnlyStudentRecord","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"Class StudentRecord","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"Class UniqueStudentList","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"Class Student","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"Class Id","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"Class Class","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"Class Email","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"Class Exam","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"StudentRecord .up.|\u003e ReadOnlyStudentRecord","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"Model .left.\u003e ReadOnlyStudentRecord","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"ModelManager -left-\u003e \"1\" StudentRecord","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"StudentRecord *--\u003e \"1\" UniqueStudentList","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"UniqueStudentList ---\u003e \"~* all\" Student","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"ModelManager --\u003e\"~* filtered\" Student","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Name","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Id","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Class","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Phone","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Email","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e Exam","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"Name -[hidden]right-\u003e Id","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"Id -[hidden]right-\u003e Class","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"Class -[hidden]right-\u003e Phone","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"Email -[hidden]right-\u003e Exam","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":29,"danielk0k":26}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"package \"StudentRecord Storage\" #F4F6F6{","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStudentRecordStorage\" as StudentRecordStorage","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"Class JsonStudentRecordStorage","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"Class JsonSerializableStudentRecord","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"Class JsonAdaptedExam","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"StorageManager -up-\u003e \"1\" StudentRecordStorage","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"Storage -right-|\u003e StudentRecordStorage","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"jeromepui"},"content":"JsonStudentRecordStorage .up.|\u003e StudentRecordStorage","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"JsonStudentRecordStorage ..\u003e JsonSerializableStudentRecord","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"JsonSerializableStudentRecord --\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"JsonAdaptedStudent --\u003e \"*\" JsonAdaptedExam","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromepui":12,"-":31}},{"path":"docs/diagrams/StudentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"@startuml","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"!include style.puml","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e \"1..2\" Name","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e \"1\" Id","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e \"1\" Class","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e \"0..1\" Phone","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e \"0..1\" Email","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"Student *--\u003e \"0..4\" Exam:set of","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"Name -[hidden]right-\u003e Id","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"Id -[hidden]right-\u003e Class","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"Class -[hidden]right-\u003e Phone","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"Email -[hidden]right-\u003e Exam","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"@enduml","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"danielk0k":20}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"Class StudentListPanel","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"Class StudentCard","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"StudentCard --|\u003e UiPart","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"jeromepui"},"content":"StudentListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeromepui":8,"-":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"title: Class-ify","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"[![Codecov](https://codecov.io/gh/AY2223S1-CS2103T-T15-2/tp/branch/master/graph/badge.svg?token\u003dLKPSW2V6NG)](https://codecov.io/gh/AY2223S1-CS2103T-T15-2/tp)","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"[![Pages](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/pages/pages-build-deployment/badge.svg)](https://github.com/AY2223S1-CS2103T-T15-2/tp/actions/workflows/pages/pages-build-deployment)","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"**Class-ify** is a class management application built specially for Ministry of Education (MOE) teachers to easily monitor their studentsâ€™ academic progress.","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"Teachers can generate exam statistics for each class, and Class-ify quickly flags out students who require more support for contacting.","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"* If you are interested in using Class-ify, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"* If you are interested about developing Class-ify, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromepui":3,"-":12,"danielk0k":5}},{"path":"docs/team/danielk0k.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"title: Daniel Kok\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"### Project: Class-ify","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"Class-ify is a class management application build specifically for teachers to handle all administrative related matters.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"It is written in Java and the GUI is build using JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003ddanielk0k\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"* **Implemented Features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    * New student command","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    * Feature","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"* **Project management**:","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    * Managed release `v1.1` on GitHub","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"* **Documentation**:","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    * User Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        * Added documentation for the feature `new student` [\\#14]()","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    * Developer Guide:","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    * README:","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        * Created Ui mockup","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"danielk0k":30}},{"path":"docs/team/jeromepui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"jeromepui"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"title: Jerome Pui\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"## Project: Class-ify","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"[Class-ify](https://github.com/AY2223S1-CS2103T-T15-2/tp) is a class management application build specifically for teachers to handle all administrative related matters.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"It is written in Java and the GUI is build using JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"My contributions to the project are documented below.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"### Code contributed","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"[RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003djeromepui\u0026breakdown\u003dtrue)","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"### Enhancements implemented","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"- Add command for deleting individual student record","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"### Contributions to the User Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"- [x] Add documentation for the feature `delete` [\\#30](https://github.com/AY2223S1-CS2103T-T15-2/tp/pull/30)","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"### Contributions to the Developer Guide","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"- Add implementation details of the `delete` feature.","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"### Review/mentoring contributions","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"*To be updated*","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"### Contributions beyond the project team","lastModifiedDate":"2022-09-28"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"*To be updated*","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"jeromepui":31}},{"path":"docs/team/linuschancs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"layout: page","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"title: Linus Chan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"---","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"### Project: Class-ify","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"Class-ify is a class management application build specifically for teachers to handle all administrative related matters.","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"It is written in Java and the GUI is build using JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dlinuschancs)","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"* **Contributions to UG**:","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"* **Contributions to DG**:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"* **Contributions to team-based tasks**:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"* **Review/ Mentoring Contributions**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"linuschancs":25}},{"path":"docs/team/maxtance.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"maxtance"},"content":"# Max Tan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-28"},{"lineNumber":2,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":3,"author":{"gitId":"maxtance"},"content":"## Project: Class-ify","lastModifiedDate":"2022-09-28"},{"lineNumber":4,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":5,"author":{"gitId":"maxtance"},"content":"Class-ify is a class management application build specifically for teachers to handle all ","lastModifiedDate":"2022-09-28"},{"lineNumber":6,"author":{"gitId":"maxtance"},"content":"administrative related matters. It is written in Java and the GUI is build using JavaFX.","lastModifiedDate":"2022-09-28"},{"lineNumber":7,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":8,"author":{"gitId":"maxtance"},"content":"Given below are my contributions to the project:","lastModifiedDate":"2022-09-28"},{"lineNumber":9,"author":{"gitId":"maxtance"},"content":"- **Code contribution**: ","lastModifiedDate":"2022-09-28"},{"lineNumber":10,"author":{"gitId":"maxtance"},"content":"  - Check out [RepoSense](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dmaxtance)","lastModifiedDate":"2022-09-28"},{"lineNumber":11,"author":{"gitId":"maxtance"},"content":"- **Features added**:","lastModifiedDate":"2022-09-28"},{"lineNumber":12,"author":{"gitId":"maxtance"},"content":"  - Feature 1","lastModifiedDate":"2022-09-28"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"  - Feature 2","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"maxtance"},"content":"- **Enhancement to existing features**:","lastModifiedDate":"2022-09-28"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"  - Existing feature 1","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"maxtance"},"content":"- **Project management**:","lastModifiedDate":"2022-09-28"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"  - Task 1","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"- **Documentation**:","lastModifiedDate":"2022-09-28"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"  - User Guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"    - Added documentations for the feature `view all`","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"maxtance"},"content":"  - Developer guide:","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"maxtance"},"content":"    - Added implementation details of the `view all` feature","lastModifiedDate":"2022-09-28"},{"lineNumber":23,"author":{"gitId":"maxtance"},"content":"- **Community**:","lastModifiedDate":"2022-09-28"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"  - PRs review: \u003cinsert PRs here\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"- **Tools**:","lastModifiedDate":"2022-09-28"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"  - Tools 1","lastModifiedDate":"2022-09-28"},{"lineNumber":27,"author":{"gitId":"maxtance"},"content":"  - Tools 2","lastModifiedDate":"2022-09-28"},{"lineNumber":28,"author":{"gitId":"maxtance"},"content":"  - ","lastModifiedDate":"2022-09-28"}],"authorContributionMap":{"maxtance":28}},{"path":"docs/team/minjiunn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"minjiunn"},"content":"title: Chia Min Jiun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"### Project: Class-ify","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"minjiunn"},"content":"[Class-ify](https://github.com/AY2223S1-CS2103T-T15-2/tp) is a class management application build specifically for teachers to handle all administrative related matters.","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"minjiunn"},"content":"It is written in Java and the GUI is build using JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003dminjiunn)","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":"* **Features added**: ","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"    * Added documentation for the features `view` [\\#47]()","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"    * Added a command summary table ","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    * ","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":21,"minjiunn":9}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"jeromepui"},"content":"Create a `RemarkCommandParser` class in the `seedu.classify.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the personâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"jeromepui"},"content":"Create a new `Remark` in `seedu.classify.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-10-20"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"jeromepui"},"content":"Simply add the following to [`seedu.classify.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"jeromepui":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"The `address` field in `Person` is actually an instance of the `seedu.classify.model.student.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Letâ€™s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromepui":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.classify.logic.Logic`.","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"A quick look at the `seedu.classify.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeromepui":2,"-":299}},{"path":"src/main/java/seedu/classify/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.FileUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"jeromepui":3,"-":61}},{"path":"src/main/java/seedu/classify/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"jeromepui":1,"-":24}},{"path":"src/main/java/seedu/classify/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Config;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Version;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.ConfigUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.StringUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.Logic;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.LogicManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.JsonStudentRecordStorage;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.Storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.StorageManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.StudentRecordStorage;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.UserPrefsStorage;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.ui.Ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.ui.UiManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Class-ify ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"        StudentRecordStorage studentRecordStorage \u003d new JsonStudentRecordStorage(userPrefs.getStudentRecordFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"        storage \u003d new StorageManager(studentRecordStorage, userPrefsStorage);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"minjiunn"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s Student Record and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"minjiunn"},"content":"     * The data from the sample Student Record will be used instead if {@code storage}\u0027s Student Record is not found,","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"     * or an empty Student Record will be used instead if errors occur when reading {@code storage}\u0027s Student Record.","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"        Optional\u003cReadOnlyStudentRecord\u003e studentRecordOptional;","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"        ReadOnlyStudentRecord initialData;","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"            studentRecordOptional \u003d storage.readStudentRecord();","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"linuschancs"},"content":"            if (!studentRecordOptional.isPresent()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"minjiunn"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Class-ify Record\");","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"            initialData \u003d studentRecordOptional.orElseGet(SampleDataUtil::getSampleStudentRecord);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"minjiunn"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Class-ify Record\");","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"            initialData \u003d new StudentRecord();","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"minjiunn"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Class-ify Record\");","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"            initialData \u003d new StudentRecord();","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"jeromepui"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Class-ify\");","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"jeromepui"},"content":"        logger.info(\"Starting Class-ify \" + MainApp.VERSION);","lastModifiedDate":"2022-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"jeromepui"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Class-ify ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":31,"-":139,"minjiunn":6,"linuschancs":4,"danielk0k":3}},{"path":"src/main/java/seedu/classify/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":62}},{"path":"src/main/java/seedu/classify/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":78}},{"path":"src/main/java/seedu/classify/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"    private static final String LOG_FILE \u003d \"Classify.log\";","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":110,"minjiunn":1}},{"path":"src/main/java/seedu/classify/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"    public static final String MESSAGE_INVALID_STUDENT_ID \u003d \"The student ID provided does not exist!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"    public static final String MESSAGE_INVALID_STUDENT_NAME \u003d \"The student name provided does not exist!\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    public static final String MESSAGE_PERSONS_LISTED_IN_CLASS \u003d \"There are %1$d students in this class!\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    public static final String MESSAGE_SINGLE_PERSON_LISTED_IN_CLASS \u003d \"There is %1$d student in this class!\";","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":5,"-":9,"linuschancs":2}},{"path":"src/main/java/seedu/classify/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":115}},{"path":"src/main/java/seedu/classify/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core.index;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jeromepui":1,"-":53}},{"path":"src/main/java/seedu/classify/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":10}},{"path":"src/main/java/seedu/classify/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":1,"-":20}},{"path":"src/main/java/seedu/classify/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.MainApp;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromepui":2,"-":40}},{"path":"src/main/java/seedu/classify/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":1,"-":34}},{"path":"src/main/java/seedu/classify/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Config;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jeromepui":3,"-":20}},{"path":"src/main/java/seedu/classify/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":82}},{"path":"src/main/java/seedu/classify/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":3,"-":140}},{"path":"src/main/java/seedu/classify/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":2,"-":66}},{"path":"src/main/java/seedu/classify/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.FilteredStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"     * Returns the StudentRecord.","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"     * @see Model#getStudentRecord()","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    ReadOnlyStudentRecord getStudentRecord();","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * Returns the user prefs\u0027 student record file path.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    Path getStudentRecordFilePath();","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"maxtance"},"content":"    FilteredStudents getFilteredStudents();","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jeromepui":11,"-":36,"maxtance":3,"danielk0k":6}},{"path":"src/main/java/seedu/classify/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.StudentRecordParser;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.FilteredStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.Storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    private final StudentRecordParser studentRecordParser;","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        studentRecordParser \u003d new StudentRecordParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        Command command \u003d studentRecordParser.parseCommand(commandText);","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"            storage.saveStudentRecord(model.getStudentRecord());","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"    public ReadOnlyStudentRecord getStudentRecord() {","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        return model.getStudentRecord();","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"maxtance"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"    public Path getStudentRecordFilePath() {","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"        return model.getStudentRecordFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"maxtance"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"maxtance"},"content":"    public FilteredStudents getFilteredStudents() {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"maxtance"},"content":"        return this.model.getFilteredStudents();","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jeromepui":14,"-":59,"maxtance":7,"danielk0k":8}},{"path":"src/main/java/seedu/classify/logic/commands/AddStudCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":" * Adds a student into the record.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"public class AddStudCommand extends Command {","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    public static final String COMMAND_WORD \u003d \"addstud\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student into the record. \"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"            + PREFIX_STUDENT_NAME + \"STUDENT NAME \"","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"            + PREFIX_CLASS + \"CLASS \"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"            + \"[\" + PREFIX_PARENT_NAME + \"PARENT NAME] \"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"            + \"[\" + PREFIX_PHONE + \"PARENT PHONE NUMBER] \"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"            + \"[\" + PREFIX_EMAIL + \"PARENT EMAIL] \"","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"            + \"[\" + PREFIX_EXAM + \"NAME SCORE]...\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"            + PREFIX_STUDENT_NAME + \"John Doe \"","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"            + PREFIX_ID + \"928C \"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"            + PREFIX_CLASS + \"1A \"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"            + PREFIX_PARENT_NAME + \"Bob Doe \"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"            + PREFIX_EMAIL + \"bobdoe@gmail.com \"","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"            + PREFIX_EXAM + \"CA1 50\";","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the record\";","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    private final Student toAdd;","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"     * Creates an AddStudCommand to add the specified {@code Student}","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    public AddStudCommand(Student person) {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"                || (other instanceof AddStudCommand // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 toAdd.equals(((AddStudCommand) other).toAdd));","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":4,"-":35,"danielk0k":27,"linuschancs":6}},{"path":"src/main/java/seedu/classify/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":" * Clears all student records from local storage.","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"All student records have been cleared!\";","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"        model.setStudentRecord(new StudentRecord());","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":5,"-":17,"danielk0k":1}},{"path":"src/main/java/seedu/classify/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":3,"-":17}},{"path":"src/main/java/seedu/classify/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"    /** The application should toggle between showing and hiding parent details. */","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"    private final boolean toggleView;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean toggleView, boolean exit) {","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"maxtance"},"content":"        this.toggleView \u003d toggleView;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"maxtance"},"content":"    public boolean isToggleView() {","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"maxtance"},"content":"        return toggleView;","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"maxtance"},"content":"                \u0026\u0026 toggleView \u003d\u003d otherCommandResult.toggleView","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"maxtance"},"content":"        return Objects.hash(feedbackToUser, showHelp, toggleView, exit);","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":1,"-":67,"maxtance":12}},{"path":"src/main/java/seedu/classify/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.IdPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NamePredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":" * Deletes an existing student record from the class list, using the studentâ€™s name or the studentâ€™s ID.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"            + \": Deletes a student record identified by the student name or student ID used in the student list.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"            + \"Parameters:\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"            + \"NAME (should only contain alphanumeric characters and spaces) or\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"            + \"ID (should only contain 3 digits followed by 1 character)\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"            + \"Example: \" + COMMAND_WORD + \" nm/Jonathan Tan\" + \" or \" + COMMAND_WORD + \" id/123A\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"    private final Optional\u003cId\u003e targetId;","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"    private final Optional\u003cName\u003e targetName;","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"    private final Optional\u003cIdPredicate\u003e idPredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"    private final Optional\u003cNamePredicate\u003e namePredicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"     * @param targetId of the student in the filtered student list to delete","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"     * @param idPredicate to filter the student list","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"    public DeleteCommand(Id targetId, IdPredicate idPredicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"        this.targetId \u003d Optional.of(targetId);","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"        this.targetName \u003d Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"        this.idPredicate \u003d Optional.of(idPredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jeromepui"},"content":"        this.namePredicate \u003d Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"     * @param targetName of the student in the filtered student list to delete","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jeromepui"},"content":"     * @param namePredicate to filter the student list","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jeromepui"},"content":"    public DeleteCommand(Name targetName, NamePredicate namePredicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jeromepui"},"content":"        this.targetId \u003d Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"        this.targetName \u003d Optional.of(targetName);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"        this.idPredicate \u003d Optional.empty();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"        this.namePredicate \u003d Optional.of(namePredicate);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"jeromepui"},"content":"        if (targetId.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jeromepui"},"content":"            assert(namePredicate.isPresent());","lastModifiedDate":"2022-10-25"},{"lineNumber":69,"author":{"gitId":"jeromepui"},"content":"            model.updateFilteredStudentList(namePredicate.get());","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jeromepui"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"jeromepui"},"content":"            assert(idPredicate.isPresent());","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"jeromepui"},"content":"            model.updateFilteredStudentList(idPredicate.get());","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jeromepui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"jeromepui"},"content":"        List\u003cStudent\u003e studentList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jeromepui"},"content":"        if (studentList.size() \u003d\u003d 0) {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"jeromepui"},"content":"            model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"jeromepui"},"content":"            if (targetId.isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jeromepui"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"jeromepui"},"content":"            } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"jeromepui"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_ID);","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"jeromepui"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"jeromepui"},"content":"        Student studentToDelete \u003d studentList.get(0);","lastModifiedDate":"2022-10-10"},{"lineNumber":87,"author":{"gitId":"jeromepui"},"content":"        model.deleteStudent(studentList.get(0));","lastModifiedDate":"2022-10-10"},{"lineNumber":88,"author":{"gitId":"jeromepui"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"jeromepui"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"jeromepui"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"jeromepui"},"content":"            return true;","lastModifiedDate":"2022-10-10"},{"lineNumber":96,"author":{"gitId":"jeromepui"},"content":"        } else if (targetId.isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"jeromepui"},"content":"            return other instanceof DeleteCommand \u0026\u0026 targetName.equals(((DeleteCommand) other).targetName);","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"jeromepui"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"jeromepui"},"content":"            return other instanceof DeleteCommand \u0026\u0026 targetId.equals(((DeleteCommand) other).targetId);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"jeromepui"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":71,"-":30,"danielk0k":1}},{"path":"src/main/java/seedu/classify/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":" * Edits the details of an existing student in the student record.","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"            + \"[\" + PREFIX_STUDENT_NAME + \"STUDENT NAME] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"            + \"[\" + PREFIX_ID + \"ID] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"            + \"[\" + PREFIX_CLASS + \"CLASS] \"","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"            + \"[\" + PREFIX_PARENT_NAME + \"PARENT NAME] \"","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"            + \"[\" + PREFIX_PHONE + \"PARENT PHONE NUMBER] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"            + \"[\" + PREFIX_EMAIL + \"PARENT EMAIL] \"","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"            + \"[\" + PREFIX_EXAM + \"NAME SCORE]...\\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the student record.\";","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"     * @param index of the student in the filtered student list to edit","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"     * @param editStudentDescriptor details to edit the student with","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    public EditCommand(Index index, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"jeromepui"},"content":"        if (!studentToEdit.hasSameNameOrId(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"jeromepui"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"        Name updatedStudentName \u003d editStudentDescriptor.getStudentName().orElse(studentToEdit.getStudentName());","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"        Id updatedId \u003d editStudentDescriptor.getId().orElse(studentToEdit.getId());","lastModifiedDate":"2022-10-07"},{"lineNumber":99,"author":{"gitId":"linuschancs"},"content":"        Class updatedClassName \u003d editStudentDescriptor.getClassName().orElse(studentToEdit.getClassName());","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"        Name updatedParentName \u003d editStudentDescriptor.getParentName().orElse(studentToEdit.getParentName());","lastModifiedDate":"2022-10-07"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2022-10-07"},{"lineNumber":102,"author":{"gitId":"linuschancs"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"        Set\u003cExam\u003e updatedExams \u003d editStudentDescriptor.getExams().orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"        updatedExams.addAll(studentToEdit.getExams());","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"linuschancs"},"content":"        return new Student(updatedStudentName, updatedId, updatedClassName, updatedParentName, updatedPhone,","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"                updatedEmail, updatedExams);","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2022-10-07"},{"lineNumber":130,"author":{"gitId":"danielk0k"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2022-10-07"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"        private Name studentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"        private Id id;","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"linuschancs"},"content":"        private Class className;","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"danielk0k"},"content":"        private Name parentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"linuschancs"},"content":"        private Email email;","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"danielk0k"},"content":"        private Set\u003cExam\u003e exams;","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"danielk0k"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"danielk0k"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"danielk0k"},"content":"            setStudentName(toCopy.studentName);","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"danielk0k"},"content":"            setId(toCopy.id);","lastModifiedDate":"2022-10-07"},{"lineNumber":150,"author":{"gitId":"linuschancs"},"content":"            setClassName(toCopy.className);","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"danielk0k"},"content":"            setParentName(toCopy.parentName);","lastModifiedDate":"2022-10-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"linuschancs"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2022-10-19"},{"lineNumber":154,"author":{"gitId":"danielk0k"},"content":"            setExams(toCopy.exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"danielk0k"},"content":"            return CollectionUtil.isAnyNonNull(studentName, id, className, parentName, phone, email, exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"danielk0k"},"content":"        public void setStudentName(Name studentName) {","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"danielk0k"},"content":"            this.studentName \u003d studentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"danielk0k"},"content":"        public Optional\u003cName\u003e getStudentName() {","lastModifiedDate":"2022-10-07"},{"lineNumber":169,"author":{"gitId":"danielk0k"},"content":"            return Optional.ofNullable(studentName);","lastModifiedDate":"2022-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"danielk0k"},"content":"        public void setId(Id id) {","lastModifiedDate":"2022-10-07"},{"lineNumber":173,"author":{"gitId":"danielk0k"},"content":"            this.id \u003d id;","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"danielk0k"},"content":"        public Optional\u003cId\u003e getId() {","lastModifiedDate":"2022-10-07"},{"lineNumber":177,"author":{"gitId":"danielk0k"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2022-10-07"},{"lineNumber":178,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":179,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"linuschancs"},"content":"        public void setClassName(Class className) {","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"linuschancs"},"content":"            this.className \u003d className;","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"linuschancs"},"content":"        public Optional\u003cClass\u003e getClassName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"linuschancs"},"content":"            return Optional.ofNullable(className);","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"danielk0k"},"content":"        public void setParentName(Name parentName) {","lastModifiedDate":"2022-10-07"},{"lineNumber":189,"author":{"gitId":"danielk0k"},"content":"            this.parentName \u003d parentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"danielk0k"},"content":"        public Optional\u003cName\u003e getParentName() {","lastModifiedDate":"2022-10-07"},{"lineNumber":193,"author":{"gitId":"danielk0k"},"content":"            return Optional.ofNullable(parentName);","lastModifiedDate":"2022-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"danielk0k"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2022-10-07"},{"lineNumber":197,"author":{"gitId":"danielk0k"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":198,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":199,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":200,"author":{"gitId":"danielk0k"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2022-10-07"},{"lineNumber":201,"author":{"gitId":"danielk0k"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2022-10-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"linuschancs"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2022-10-19"},{"lineNumber":205,"author":{"gitId":"linuschancs"},"content":"            this.email \u003d email;","lastModifiedDate":"2022-10-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"linuschancs"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2022-10-19"},{"lineNumber":209,"author":{"gitId":"linuschancs"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2022-10-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"danielk0k"},"content":"         * Sets {@code exams} to this object\u0027s {@code exams}.","lastModifiedDate":"2022-10-20"},{"lineNumber":214,"author":{"gitId":"danielk0k"},"content":"         * A defensive copy of {@code exams} is used internally.","lastModifiedDate":"2022-10-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"danielk0k"},"content":"        public void setExams(Set\u003cExam\u003e exams) {","lastModifiedDate":"2022-10-20"},{"lineNumber":217,"author":{"gitId":"danielk0k"},"content":"            this.exams \u003d (exams !\u003d null) ? new HashSet\u003c\u003e(exams) : null;","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"danielk0k"},"content":"         * Returns an exam set.","lastModifiedDate":"2022-10-20"},{"lineNumber":222,"author":{"gitId":"danielk0k"},"content":"         * Returns {@code Optional#empty()} if {@code exams} is null.","lastModifiedDate":"2022-10-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"danielk0k"},"content":"        public Optional\u003cSet\u003cExam\u003e\u003e getExams() {","lastModifiedDate":"2022-10-20"},{"lineNumber":225,"author":{"gitId":"danielk0k"},"content":"            return (exams !\u003d null) ? Optional.of(exams) : Optional.empty();","lastModifiedDate":"2022-10-20"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"danielk0k"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"danielk0k"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"danielk0k"},"content":"            return getStudentName().equals(e.getStudentName())","lastModifiedDate":"2022-10-07"},{"lineNumber":244,"author":{"gitId":"danielk0k"},"content":"                    \u0026\u0026 getId().equals((e.getId()))","lastModifiedDate":"2022-10-07"},{"lineNumber":245,"author":{"gitId":"linuschancs"},"content":"                    \u0026\u0026 getClassName().equals((e.getClassName()))","lastModifiedDate":"2022-10-11"},{"lineNumber":246,"author":{"gitId":"danielk0k"},"content":"                    \u0026\u0026 getParentName().equals(e.getParentName())","lastModifiedDate":"2022-10-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"linuschancs"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2022-10-19"},{"lineNumber":249,"author":{"gitId":"danielk0k"},"content":"                    \u0026\u0026 getExams().equals(e.getExams());","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"jeromepui":14,"-":124,"danielk0k":90,"linuschancs":24}},{"path":"src/main/java/seedu/classify/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":" * Terminates the application.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"minjiunn"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Class-ify as requested ...\";","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"maxtance"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jeromepui":3,"-":14,"maxtance":1,"minjiunn":1}},{"path":"src/main/java/seedu/classify/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"minjiunn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.CliSyntax;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"minjiunn"},"content":" * Finds and lists all students in the Student Record whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds students based on the specified search\"","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"            + \" keywords (case-insensitive) and displays them as a list. Search\"","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"            + \" for a student using parts of their name or their ID.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"            + \"Parameters: \" + CliSyntax.PREFIX_STUDENT_NAME + \"NAME TO SEARCH or \"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"            + CliSyntax.PREFIX_ID + \"ID TO SEARCH\\n\" + \"Example: \" + COMMAND_WORD + \" nm/alice\";","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    private final Predicate\u003cStudent\u003e predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"    public FindCommand(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"minjiunn"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"minjiunn"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jeromepui":8,"-":23,"minjiunn":13,"danielk0k":2}},{"path":"src/main/java/seedu/classify/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":" * Displays a command summary table and a link to Class-ify\u0027s user guide.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows application usage instructions.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":4,"-":16,"maxtance":1}},{"path":"src/main/java/seedu/classify/logic/commands/ToggleViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"maxtance"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"maxtance"},"content":" * Toggles application between showing and hiding students\u0027 parent details","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"maxtance"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"maxtance"},"content":"public class ToggleViewCommand extends Command {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"maxtance"},"content":"    public static final String COMMAND_WORD \u003d \"toggleView\";","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"maxtance"},"content":"    public static final String MESSAGE_SUCCESS_HIDE \u003d \"Parent details are hidden\";","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"    public static final String MESSAGE_SUCCESS_SHOW \u003d \"Parent details are shown\";","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"maxtance"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"        model.toggleStudentListInfoConcise();","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"        boolean isShowingParentDetails \u003d !model.isStudentListInfoConcise();","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"        if (isShowingParentDetails) {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"maxtance"},"content":"            return new CommandResult(MESSAGE_SUCCESS_SHOW, false, true, false);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"maxtance"},"content":"        return new CommandResult(MESSAGE_SUCCESS_HIDE, false, true, false);","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"jeromepui":2,"maxtance":24}},{"path":"src/main/java/seedu/classify/logic/commands/ViewAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":" * Lists all student records.","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"maxtance"},"content":"public class ViewAllCommand extends Command {","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"    public static final String COMMAND_WORD \u003d \"viewAll\";","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all students\";","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":4,"-":16,"maxtance":3,"danielk0k":1}},{"path":"src/main/java/seedu/classify/logic/commands/ViewClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.ClassPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":" * Lists all the students who are in a particular class.","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"public class ViewClassCommand extends Command {","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    public static final String COMMAND_WORD \u003d \"viewClass\";","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all students in the given class.\\n\"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"            + \"Parameters: CLASS\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"            + \"Example: \" + COMMAND_WORD + \" class1A\";","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    private final ClassPredicate predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    public ViewClassCommand(ClassPredicate predicate) {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"        int numberOfStudents \u003d model.getFilteredStudentList().size();","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"        if (numberOfStudents \u003d\u003d 1) {","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"                    String.format(Messages.MESSAGE_SINGLE_PERSON_LISTED_IN_CLASS, numberOfStudents));","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"            return new CommandResult(","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"                    String.format(Messages.MESSAGE_PERSONS_LISTED_IN_CLASS, numberOfStudents));","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"                || (other instanceof ViewClassCommand // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"                \u0026\u0026 predicate.equals(((ViewClassCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jeromepui":5,"linuschancs":41}},{"path":"src/main/java/seedu/classify/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.Command;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jeromepui":2,"-":17}},{"path":"src/main/java/seedu/classify/logic/parser/AddStudCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.AddStudCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":" * Parses input arguments and creates a new AddStudCommand object","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"public class AddStudCommandParser implements Parser\u003cAddStudCommand\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStudCommand","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * and returns an AddStudCommand object for execution.","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    public AddStudCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENT_NAME, PREFIX_ID, PREFIX_CLASS,","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"                        PREFIX_PARENT_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_EXAM);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDENT_NAME, PREFIX_ID, PREFIX_CLASS)","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"                    AddStudCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        Name studentName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_STUDENT_NAME).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        Id id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"        Class className \u003d ParserUtil.parseClass(argMultimap.getValue(PREFIX_CLASS).get());","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        Phone phone \u003d new Phone();","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        Name parentName \u003d new Name();","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        Email email \u003d new Email();","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        if (!argMultimap.getValue(PREFIX_PHONE).isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        if (!argMultimap.getValue(PREFIX_PARENT_NAME).isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"            parentName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_PARENT_NAME).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        if (!argMultimap.getValue(PREFIX_EMAIL).isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"        Set\u003cExam\u003e examSet \u003d ParserUtil.parseExams(argMultimap.getAllValues(PREFIX_EXAM));","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        Student person \u003d new Student(studentName, id, className, parentName, phone, email, examSet);","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        return new AddStudCommand(person);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jeromepui":18,"-":30,"danielk0k":20,"linuschancs":9}},{"path":"src/main/java/seedu/classify/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"jeromepui":1,"-":59}},{"path":"src/main/java/seedu/classify/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"jeromepui":1,"-":147}},{"path":"src/main/java/seedu/classify/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"ad/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"    public static final Prefix PREFIX_CLASS \u003d new Prefix(\"class/\");","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    public static final Prefix PREFIX_PARENT_NAME \u003d new Prefix(\"pn/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"hp/\");","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    public static final Prefix PREFIX_STUDENT_NAME \u003d new Prefix(\"nm/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    public static final Prefix PREFIX_EXAM \u003d new Prefix(\"exam/\");","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jeromepui":1,"-":9,"linuschancs":5,"danielk0k":3}},{"path":"src/main/java/seedu/classify/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.IdPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NamePredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"        if (args.startsWith(\" id/\")) {","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"                Id id \u003d ParserUtil.parseId(args.substring(4));","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"                return new DeleteCommand(id, new IdPredicate(id));","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"            } catch (ParseException idPE) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"                        String.format(Messages.MESSAGE_INVALID_STUDENT_ID, DeleteCommand.MESSAGE_USAGE), idPE);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"        } else if (args.startsWith(\" nm/\")) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"            try {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"                Name name \u003d ParserUtil.parseName(args.substring(4));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"                return new DeleteCommand(name, new NamePredicate(name));","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"            } catch (ParseException namePE) {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"                throw new ParseException(","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"                        String.format(Messages.MESSAGE_INVALID_STUDENT_NAME, DeleteCommand.MESSAGE_USAGE), namePE);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"jeromepui"},"content":"        } else {","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"                    DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jeromepui":25,"-":18}},{"path":"src/main/java/seedu/classify/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-21"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2022-10-21"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-21"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"                        PREFIX_STUDENT_NAME, PREFIX_ID, PREFIX_CLASS, PREFIX_PARENT_NAME,","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_EXAM);","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"                    EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor editStudentDescriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_STUDENT_NAME).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"            editStudentDescriptor.setStudentName(ParserUtil.parseName(argMultimap","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"                    .getValue(CliSyntax.PREFIX_STUDENT_NAME).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"jeromepui"},"content":"            editStudentDescriptor.setId(ParserUtil.parseId(argMultimap.getValue(CliSyntax.PREFIX_ID).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_CLASS).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"            editStudentDescriptor.setClassName(ParserUtil.parseClass(argMultimap","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"                    .getValue(CliSyntax.PREFIX_CLASS).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"jeromepui"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_PARENT_NAME).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"            editStudentDescriptor.setParentName(ParserUtil.parseName(","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"                    argMultimap.getValue(CliSyntax.PREFIX_PARENT_NAME).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"jeromepui"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"jeromepui"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"jeromepui"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"jeromepui"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get()));","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"        parseExamsForEdit(argMultimap.getAllValues(PREFIX_EXAM)).ifPresent(editStudentDescriptor::setExams);","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"        return new EditCommand(index, editStudentDescriptor);","lastModifiedDate":"2022-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"     * Parses {@code Collection\u003cString\u003e exams} into a {@code Set\u003cExam\u003e} if {@code exams} is non-empty.","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"     * If {@code exams} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"     * {@code Set\u003cExam\u003e} containing zero exams.","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"    private Optional\u003cSet\u003cExam\u003e\u003e parseExamsForEdit(Collection\u003cString\u003e exams) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        assert exams !\u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"        if (exams.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"        Collection\u003cString\u003e examSet \u003d exams.size() \u003d\u003d 1 \u0026\u0026 exams.contains(\"\") ? new HashSet\u003c\u003e() : exams;","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        return Optional.of(ParserUtil.parseExams(examSet));","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"jeromepui":22,"-":47,"danielk0k":24,"linuschancs":3}},{"path":"src/main/java/seedu/classify/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.FindCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.IdPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"        ArgumentMultimap argMultiMap \u003d ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_STUDENT_NAME,","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"                CliSyntax.PREFIX_ID);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"        if (argMultiMap.getValue(CliSyntax.PREFIX_STUDENT_NAME).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"            String[] nameKeywords \u003d argMultiMap.getValue(CliSyntax.PREFIX_STUDENT_NAME).get().split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"        } else if (argMultiMap.getValue(CliSyntax.PREFIX_ID).isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"            return new FindCommand(","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"                    new IdPredicate(ParserUtil.parseId(argMultiMap.getValue(CliSyntax.PREFIX_ID).get())));","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"jeromepui"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromepui":41,"minjiunn":2}},{"path":"src/main/java/seedu/classify/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"jeromepui":3,"-":13}},{"path":"src/main/java/seedu/classify/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.StringUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"     * Parses a {@code String id} into a {@code Id}.","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"    public static Id parseId(String id) throws ParseException {","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"        if (!Id.isValidId(trimmedId)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        return new Id(trimmedId);","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"     * Parses a {@code String className} into a {@code Class}.","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"linuschancs"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"linuschancs"},"content":"     * @throws ParseException if the given {@code className} is invalid.","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"    public static Class parseClass(String className) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"linuschancs"},"content":"        requireNonNull(className);","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"        String trimmedClassName \u003d className.trim();","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"        if (!Class.isValidClassName(trimmedClassName)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"            throw new ParseException(Class.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"linuschancs"},"content":"        return new Class(trimmedClassName);","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"danielk0k"},"content":"     * Parses a {@code String exam} into a {@code Exam}.","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"     * @throws ParseException if the given {@code exam} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"    public static Exam parseExam(String exam) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(exam);","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"        String trimmedExam \u003d exam.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"danielk0k"},"content":"        if (!Exam.isValidFormat(trimmedExam)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"            throw new ParseException(Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"        String[] args \u003d trimmedExam.split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"danielk0k"},"content":"        String name \u003d args[0];","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"danielk0k"},"content":"        String score \u003d args[1];","lastModifiedDate":"2022-10-18"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"        if (!Exam.isValidName(name)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":130,"author":{"gitId":"danielk0k"},"content":"            throw new ParseException(Exam.MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"        if (!Exam.isValidScore(score)) {","lastModifiedDate":"2022-10-18"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"            throw new ParseException(Exam.MESSAGE_SCORE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"danielk0k"},"content":"        return new Exam(trimmedExam);","lastModifiedDate":"2022-10-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"danielk0k"},"content":"     * Parses {@code Collection\u003cString\u003e exams} into a {@code Set\u003cExam\u003e}.","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"danielk0k"},"content":"    public static Set\u003cExam\u003e parseExams(Collection\u003cString\u003e exams) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":143,"author":{"gitId":"danielk0k"},"content":"        Set\u003cExam\u003e examSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":144,"author":{"gitId":"danielk0k"},"content":"        for (String exam : exams) {","lastModifiedDate":"2022-10-20"},{"lineNumber":145,"author":{"gitId":"danielk0k"},"content":"            Exam temp \u003d parseExam(exam);","lastModifiedDate":"2022-10-20"},{"lineNumber":146,"author":{"gitId":"danielk0k"},"content":"            examSet.remove(temp); // Removes duplicate exam and overrides it with the latest one.","lastModifiedDate":"2022-10-20"},{"lineNumber":147,"author":{"gitId":"danielk0k"},"content":"            examSet.add(temp);","lastModifiedDate":"2022-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":149,"author":{"gitId":"danielk0k"},"content":"        return examSet;","lastModifiedDate":"2022-10-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jeromepui":9,"-":85,"danielk0k":43,"linuschancs":15}},{"path":"src/main/java/seedu/classify/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"jeromepui":1,"-":38}},{"path":"src/main/java/seedu/classify/logic/parser/StudentRecordParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.AddStudCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.FindCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ToggleViewCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ViewAllCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ViewClassCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"public class StudentRecordParser {","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        case AddStudCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"            return new AddStudCommandParser().parse(arguments);","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"maxtance"},"content":"        case ViewAllCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"maxtance"},"content":"            return new ViewAllCommand();","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        case ViewClassCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"            return new ViewClassCommandParser().parse(arguments);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"maxtance"},"content":"        case ToggleViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"maxtance"},"content":"            return new ToggleViewCommand();","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":78,"author":{"gitId":"jeromepui"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":16,"-":56,"maxtance":5,"danielk0k":3,"linuschancs":2}},{"path":"src/main/java/seedu/classify/logic/parser/ViewClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ViewClassCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.ClassPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":" * Parses input arguments and creates a new ViewClassCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"public class ViewClassCommandParser implements Parser\u003cViewClassCommand\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewClassCommand","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * and returns a ViewClassCommand object for execution.","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-11"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    public ViewClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"        try {","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"            Class className \u003d ParserUtil.parseClass(args);","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"            return new ViewClassCommand(new ClassPredicate(className));","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ViewClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jeromepui":7,"linuschancs":22}},{"path":"src/main/java/seedu/classify/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"jeromepui":2,"-":15}},{"path":"src/main/java/seedu/classify/model/FilteredStudents.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"maxtance"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"maxtance"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"maxtance"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"maxtance"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"maxtance"},"content":" * Represents the students and type of information to be displayed on the GUI.","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"maxtance"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"maxtance"},"content":"public class FilteredStudents {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"maxtance"},"content":"    // Only the student\u0027s name and ID should be displayed if true; all information should be shown otherwise","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"    private boolean hasConciseInfo;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"     * Constructs a {@code FilteredStudent} with the given {@code filteredStudents}.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"    public FilteredStudents(FilteredList\u003cStudent\u003e filteredStudents) {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"maxtance"},"content":"        this.filteredStudents \u003d filteredStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"maxtance"},"content":"        this.hasConciseInfo \u003d false;","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"        return this.filteredStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"maxtance"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"maxtance"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"maxtance"},"content":"     * Returns true only if the student\u0027s name and ID should be displayed.","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"    public boolean hasConciseInfo() {","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"maxtance"},"content":"        return this.hasConciseInfo;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"maxtance"},"content":"     * Toggles the filtered student list between showing all information and concise information.","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"maxtance"},"content":"     * Concise information hides the parent\u0027s details","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"maxtance"},"content":"    public void toggleConciseInfo() {","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"maxtance"},"content":"        this.hasConciseInfo \u003d !hasConciseInfo;","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"maxtance"},"content":"    @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"maxtance"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"maxtance"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"maxtance"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"maxtance"},"content":"            return true;","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"maxtance"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"maxtance"},"content":"        if (!(obj instanceof FilteredStudents)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"maxtance"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"        // state check","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"maxtance"},"content":"        FilteredStudents other \u003d (FilteredStudents) obj;","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"maxtance"},"content":"        return this.filteredStudents.equals(other.filteredStudents)","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"maxtance"},"content":"                \u0026\u0026 this.hasConciseInfo \u003d\u003d other.hasConciseInfo;","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jeromepui":2,"maxtance":63}},{"path":"src/main/java/seedu/classify/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     * Returns the user prefs\u0027 student record file path.","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    Path getStudentRecordFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"     * Sets the user prefs\u0027 student record file path.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"    void setStudentRecordFilePath(Path studentRecordFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"     * Replaces student record data with the data in {@code studentRecord}.","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    void setStudentRecord(ReadOnlyStudentRecord studentRecord);","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    /** Returns the StudentRecord */","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    ReadOnlyStudentRecord getStudentRecord();","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"     * Deletes the given student.","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"     * The student must exist in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"     * Adds the given student.","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"     * {@code student} must not already exist in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"    void addStudent(Student student);","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"     * {@code target} must exist in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"     * The student identity of {@code editedStudent} must not be the same as","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"     * another existing student in the student record.","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"maxtance"},"content":"     * Toggles between showing all students\u0027 information and hiding students\u0027 parent details","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"maxtance"},"content":"    void toggleStudentListInfoConcise();","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"maxtance"},"content":"     * Returns true if the filtered student list should only show the student\u0027s name and ID","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"maxtance"},"content":"    boolean isStudentListInfoConcise();","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"maxtance"},"content":"    FilteredStudents getFilteredStudents();","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jeromepui":3,"-":59,"maxtance":14,"danielk0k":26}},{"path":"src/main/java/seedu/classify/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":" * Represents the in-memory model of the student record data.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    private final StudentRecord studentRecord;","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"    private FilteredStudents filteredStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     * Initializes a ModelManager with the given studentRecord and userPrefs.","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    public ModelManager(ReadOnlyStudentRecord studentRecord, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"        CollectionUtil.requireAllNonNull(studentRecord, userPrefs);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        logger.fine(\"Initializing with student record: \" + studentRecord + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        this.studentRecord \u003d new StudentRecord(studentRecord);","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"        this.filteredStudents \u003d new FilteredStudents(new FilteredList\u003c\u003e(this.studentRecord.getStudentList()));","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        this(new StudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"    public Path getStudentRecordFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"        return userPrefs.getStudentRecordFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"    public void setStudentRecordFilePath(Path studentRecordFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(studentRecordFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"        userPrefs.setStudentRecordFilePath(studentRecordFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"    public void setStudentRecord(ReadOnlyStudentRecord studentRecord) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"        this.studentRecord.resetData(studentRecord);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"    public ReadOnlyStudentRecord getStudentRecord() {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        return studentRecord;","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"    public boolean hasStudent(Student person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        return studentRecord.hasStudent(person);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"        studentRecord.removePerson(target);","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"    public void addStudent(Student person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"        studentRecord.addStudent(person);","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"jeromepui"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"        studentRecord.setStudent(target, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"     * {@code versionedStudentRecord}","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"danielk0k"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"maxtance"},"content":"        return this.filteredStudents.getFilteredStudentList();","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"maxtance"},"content":"        this.filteredStudents.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"maxtance"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"maxtance"},"content":"    public void toggleStudentListInfoConcise() {","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"maxtance"},"content":"        this.filteredStudents.toggleConciseInfo();","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"maxtance"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"maxtance"},"content":"    public boolean isStudentListInfoConcise() {","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"maxtance"},"content":"        return this.filteredStudents.hasConciseInfo();","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"maxtance"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"maxtance"},"content":"    public FilteredStudents getFilteredStudents() {","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"maxtance"},"content":"        return this.filteredStudents;","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"danielk0k"},"content":"        return studentRecord.equals(other.studentRecord)","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"maxtance"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":7,"-":106,"maxtance":21,"danielk0k":31}},{"path":"src/main/java/seedu/classify/model/ReadOnlyStudentRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Unmodifiable view of a student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public interface ReadOnlyStudentRecord {","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"     * Returns an unmodifiable view of the student list.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jeromepui":2,"danielk0k":15}},{"path":"src/main/java/seedu/classify/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    Path getStudentRecordFilePath();","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jeromepui":2,"-":13,"danielk0k":1}},{"path":"src/main/java/seedu/classify/model/StudentRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.UniqueStudentList;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":" * Wraps all data at the record level","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"public class StudentRecord implements ReadOnlyStudentRecord {","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     * among constructors.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    {","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    public StudentRecord() {}","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     * Creates an StudentRecord using the Students in the {@code toBeCopied}","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    public StudentRecord(ReadOnlyStudentRecord toBeCopied) {","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        this();","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"    public void setPersons(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"     * Resets the existing data of this {@code StudentRecord} with {@code newData}.","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    public void resetData(ReadOnlyStudentRecord newData) {","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        setPersons(newData.getStudentList());","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"    //// student-level operations","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"        return students.contains(student);","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"     * Adds a student to the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"     * The student must not already exist in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"        students.add(p);","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"     * {@code target} must exist in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"     * The student identity of {@code editedStudent} must not be the same as","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"     * another existing student in the student record.","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"        students.setPerson(target, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"     * Removes {@code key} from this {@code StudentRecord}.","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"     * {@code key} must exist in the student record.","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"    public void removePerson(Student key) {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"        students.remove(key);","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"    //// util methods","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\";","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"        // TODO: refine later","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"danielk0k"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"                || (other instanceof StudentRecord // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 students.equals(((StudentRecord) other).students));","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"        return students.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jeromepui":3,"danielk0k":116}},{"path":"src/main/java/seedu/classify/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"minjiunn"},"content":"    private Path studentRecordFilePath \u003d Paths.get(\"data\" , \"classify.json\");","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        setStudentRecordFilePath(newUserPrefs.getStudentRecordFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    public Path getStudentRecordFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        return studentRecordFilePath;","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"    public void setStudentRecordFilePath(Path studentRecordFilePath) {","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(studentRecordFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        this.studentRecordFilePath \u003d studentRecordFilePath;","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 studentRecordFilePath.equals(o.studentRecordFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"        return Objects.hash(guiSettings, studentRecordFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        sb.append(\"\\nLocal data file location : \" + studentRecordFilePath);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":2,"-":75,"minjiunn":1,"danielk0k":9}},{"path":"src/main/java/seedu/classify/model/student/Class.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.AppUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * Represents a Class that a student belongs to.","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassName(String)}","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"public class Class {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"            \"Class names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    /*","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public final String className;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"     * @param className A valid class name.","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    public Class(String className) {","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"        requireNonNull(className);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"        AppUtil.checkArgument(isValidClassName(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"        this.className \u003d className.toUpperCase();","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"     * Returns true if a given string is a valid class name.","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"    public static boolean isValidClassName(String test) {","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"    public String toString() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"        return this.className;","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"                || (other instanceof Class // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"                \u0026\u0026 this.className.equals(((Class) other).className)); // state check","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"        return this.className.hashCode();","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jeromepui":4,"linuschancs":54}},{"path":"src/main/java/seedu/classify/model/student/ClassPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":" * Tests that a {@code Student}\u0027s {@code Class} matches the class name given.","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"public class ClassPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"    private Class className;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    public ClassPredicate(Class className) {","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"        this.className \u003d className;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"        return student.getClassName().className.equalsIgnoreCase(this.className.className);","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"                || (other instanceof ClassPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"                \u0026\u0026 className.equals(((ClassPredicate) other).className)); // state check","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-11"}],"authorContributionMap":{"jeromepui":1,"linuschancs":26}},{"path":"src/main/java/seedu/classify/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.AppUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" * Represents a Student\u0027s email in the record.","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"     * Constructs an {@code Email} and checks for validity.","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"        value \u003d email.toUpperCase();","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"     * Constructs an {@code Email} with empty value.","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"    public Email() {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":4,"-":67,"danielk0k":1,"linuschancs":8}},{"path":"src/main/java/seedu/classify/model/student/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.AppUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":" * Represents a Student Id in the record.","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":" * Id is the last 4 characters of the NRIC (e.g. 123A).","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidId(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"public class Id {","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Id should only contain 3 digits and 1 character\";","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3}[a-zA-Z]\";","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    public final String value;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     * @param id A valid id.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public Id(String id) {","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"        AppUtil.checkArgument(isValidId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        value \u003d id.toUpperCase();","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    public static boolean isValidId(String test) {","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        return test.length() \u003d\u003d 4 \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        return value;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"                || (other instanceof Id // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 value.equals(((Id) other).value)); // state check","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jeromepui":6,"danielk0k":47}},{"path":"src/main/java/seedu/classify/model/student/IdPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":" * Tests that a {@code Student}\u0027s {@code Id} matches the id provided.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"public class IdPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"    private Id id;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"    public IdPredicate(Id id) {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"        return student.getId().equals(id);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"        return other \u003d\u003d this || (other instanceof IdPredicate \u0026\u0026 id.equals(((IdPredicate) other).id));","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jeromepui":24}},{"path":"src/main/java/seedu/classify/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.AppUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * Represents a Student or Parent name in the record.","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"            \"Name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"     * Constructs a {@code Name} and checks for validity.","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"        fullName \u003d name.toUpperCase();","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"     * Constructs a {@code Name} with empty value.","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"    public Name() {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        fullName \u003d \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":4,"-":52,"linuschancs":10,"danielk0k":1}},{"path":"src/main/java/seedu/classify/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.StringUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    public boolean test(Student person) {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getStudentName().fullName, keyword));","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jeromepui":2,"-":25,"danielk0k":4}},{"path":"src/main/java/seedu/classify/model/student/NamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":" * Tests that a {@code Student}\u0027s {@code Id} matches the id provided.","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"public class NamePredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"    private Name name;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"    public NamePredicate(Name name) {","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"        this.name \u003d name;","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"        return student.getStudentName().equals(name);","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"        return other \u003d\u003d this || (other instanceof NamePredicate \u0026\u0026 name.equals(((NamePredicate) other).name));","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jeromepui":24}},{"path":"src/main/java/seedu/classify/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.AppUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":" * Represents a Parent\u0027s phone number in the record.","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"     * Constructs a {@code Phone} and checks for validity.","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"     * Constructs a {@code Phone} with empty value.","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    public Phone() {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"        value \u003d \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":4,"-":47,"linuschancs":9}},{"path":"src/main/java/seedu/classify/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-21"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":" * Represents a Student in the record.","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"public class Student {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    // Student fields","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    private final Name studentName;","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    private final Id id;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    // Academic fields","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    private final Class className;","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    private final Set\u003cExam\u003e exams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    // Parent fields","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    private final Name parentName;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    private final Phone phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    private final Email email;","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"    public Student(Name studentName, Id id, Class className, Name parentName, Phone phone,","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"                   Email email, Set\u003cExam\u003e exams) {","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"        requireAllNonNull(studentName, id, className, parentName, phone, email, exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        this.className \u003d className;","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        this.exams.addAll(exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    public Name getStudentName() {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        return studentName;","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"    public Id getId() {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        return id;","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"    public Class getClassName() {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"        return className;","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"    public Name getParentName() {","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        return parentName;","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    public Phone getPhone() {","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        return phone;","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"    public Email getEmail() {","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"        return email;","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"     * Returns an immutable exam set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"    public Set\u003cExam\u003e getExams() {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"        return Collections.unmodifiableSet(exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"     * Returns true if both students have the same name.","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"     * This defines a weaker notion of equality between two students.","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"jeromepui"},"content":"    public boolean hasSameNameOrId(Student otherStudent) {","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"jeromepui"},"content":"                \u0026\u0026 (otherStudent.getStudentName().equals(getStudentName())","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jeromepui"},"content":"                || otherStudent.getId().equals(getId()));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"linuschancs"},"content":"     * Returns true if both students have the same identity, class and parent fields.","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"        return otherStudent.getStudentName().equals(getStudentName())","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 otherStudent.getId().equals(getId())","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"                \u0026\u0026 otherStudent.getClassName().equals(getClassName())","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 otherStudent.getParentName().equals(getParentName())","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"linuschancs"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 otherStudent.getExams().equals(getExams());","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"        return Objects.hash(studentName, id, className, parentName, phone, email, exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"        builder.append(getStudentName())","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"danielk0k"},"content":"                .append(\"; Id: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"danielk0k"},"content":"                .append(getId())","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"linuschancs"},"content":"                .append(\"; Class: \")","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"linuschancs"},"content":"                .append(getClassName())","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"                .append(\"; Parent Name: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"                .append(getParentName())","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"linuschancs"},"content":"                .append(\"; Parent Phone: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"linuschancs"},"content":"                .append(\"; Parent Email: \")","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"linuschancs"},"content":"                .append(getEmail());","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"danielk0k"},"content":"        Set\u003cExam\u003e examSet \u003d getExams();","lastModifiedDate":"2022-10-20"},{"lineNumber":139,"author":{"gitId":"danielk0k"},"content":"        if (!examSet.isEmpty()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":140,"author":{"gitId":"danielk0k"},"content":"            builder.append(\"; Exams: \");","lastModifiedDate":"2022-10-20"},{"lineNumber":141,"author":{"gitId":"danielk0k"},"content":"            examSet.forEach(builder::append);","lastModifiedDate":"2022-10-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeromepui":4,"-":65,"danielk0k":56,"linuschancs":21}},{"path":"src/main/java/seedu/classify/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import java.util.List;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.CollectionUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}. As such, adding and","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":" * updating of students uses Student#isSameStudent(Student) for equality to ensure that the student being added or","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":" * updated is unique in terms of identity in the UniqueStudentList. However, the removal of a student uses","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":" * Student#equals(Object) to ensure that the student with exactly the same fields will be removed.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":" *","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":" * @see Student#hasSameNameOrId(Student)","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"        return internalList.stream().anyMatch(toCheck::hasSameNameOrId);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     * Adds a student to the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"    public void setPerson(Student target, Student editedStudent) {","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"jeromepui"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"        if (!target.hasSameNameOrId(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"     * The student must exist in the list.","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"jeromepui"},"content":"        CollectionUtil.requireAllNonNull(students);","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        if (!personsAreUnique(students)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"        internalList.setAll(students);","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"danielk0k"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"danielk0k"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"danielk0k"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"danielk0k"},"content":"    private boolean personsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"danielk0k"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"jeromepui"},"content":"                if (students.get(i).hasSameNameOrId(students.get(j))) {","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"                    return false;","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"                }","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"danielk0k"},"content":"        return true;","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jeromepui":10,"danielk0k":127}},{"path":"src/main/java/seedu/classify/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":" * same identity).","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jeromepui":1,"danielk0k":10}},{"path":"src/main/java/seedu/classify/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student.exceptions;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"jeromepui":1,"danielk0k":5}},{"path":"src/main/java/seedu/classify/model/tag/Exam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package seedu.classify.model.tag;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * Represents an Exam that a student has.","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class Exam {","lastModifiedDate":"2022-10-17"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Exam should be in the format \u003cNAME\u003e \u003cSCORE\u003e\";","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_NAME_CONSTRAINTS \u003d \"Exam name should be CA1, CA2, SA1 or SA2.\";","lastModifiedDate":"2022-10-17"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_SCORE_CONSTRAINTS \u003d \"Exam score should be a number between 0 to 100.\";","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9]+\";","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    private final String name;","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    private final int score;","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"     * Constructs a {@code Exam}.","lastModifiedDate":"2022-10-17"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"     * @param exam","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    public Exam(String exam) {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        requireNonNull(exam);","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        checkArgument(isValidFormat(exam), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        String[] args \u003d exam.split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        String name \u003d args[0];","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"        String score \u003d args[1];","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        checkArgument(isValidName(name.toUpperCase()), MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        checkArgument(isValidScore(score), MESSAGE_SCORE_CONSTRAINTS);","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        this.name \u003d name.toUpperCase();","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        this.score \u003d Integer.parseInt(score);","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     * Returns true if a given string is a valid exam format.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    public static boolean isValidFormat(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        String[] args \u003d test.split(\"\\\\s+\");","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        return args.length \u003d\u003d 2;","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"     * Returns true if a given string is a valid exam name.","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        return test.equals(\"CA1\") || test.equals(\"CA2\")","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"                || test.equals(\"SA1\") || test.equals(\"SA2\");","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"     * Returns true if a given string is a valid exam score.","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"    public static boolean isValidScore(String test) {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"            int score \u003d Integer.parseInt(test);","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"            return score \u003e\u003d 0 \u0026\u0026 score \u003c\u003d 100;","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"     * Returns the score of the exam.","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"    public int getScore() {","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"        return this.score;","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"                || (other instanceof Exam // instanceof handles nulls","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 this.name.equals(((Exam) other).name)); // state check","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-17"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"        return this.name.hashCode();","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-17"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-10-17"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"    @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"    public String toString() {","lastModifiedDate":"2022-10-17"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        return String.format(\"%s %d\", this.name, this.score);","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-17"}],"authorContributionMap":{"danielk0k":90}},{"path":"src/main/java/seedu/classify/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":" * Contains utility methods for populating {@code StudentRecord} with sample data.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"        return new Student[]{","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Id(\"123A\"), new Class(\"1A\"), new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"                    new Phone(\"99272758\"), new Email(\"berniceyu@gmail.com\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"                    getExamSet(\"CA1 50\", \"CA2 70\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"            new Student(new Name(\"David Yeoh\"), new Id(\"456B\"), new Class(\"1A\"), new Name(\"Bernice Yu\"),","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"                    new Phone(\"87438807\"), new Email(\"berniceyu@gmail.com\"),","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"                    getExamSet(\"SA1 20\", \"SA2 50\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Id(\"435A\"), new Class(\"2A\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"                    new Name(\"Dean Oliveiro\"), new Phone(\"93210283\"), new Email(\"deanoliveiro@hotmail.com\"),","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"                    getExamSet(\"CA1 80\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Id(\"189A\"), new Class(\"3A\"),","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"                    new Name(\"Roy Balakrishnan\"), new Phone(\"91031282\"),","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"                    new Email(\"RoyBalakrishnan@gmail.com\"), getExamSet(\"CA1 60\", \"CA2 100\", \"SA1 60\", \"SA2 70\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public static ReadOnlyStudentRecord getSampleStudentRecord() {","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        StudentRecord sampleSr \u003d new StudentRecord();","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"            sampleSr.addStudent(sampleStudent);","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        return sampleSr;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"     * Returns a exam set containing the list of strings given.","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    public static Set\u003cExam\u003e getExamSet(String... strings) {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"                .map(Exam::new)","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"jeromepui":9,"-":22,"danielk0k":16,"linuschancs":8}},{"path":"src/main/java/seedu/classify/storage/JsonAdaptedExam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielk0k"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":" * Jackson-friendly version of {@link Exam}.","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"class JsonAdaptedExam {","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    private final String exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code exam}.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    public JsonAdaptedExam(String exam) {","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"        this.exam \u003d exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * Converts a given {@code Exam} into this class for Jackson use.","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    public JsonAdaptedExam(Exam source) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        exam \u003d source.toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    @JsonValue","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    public String getExam() {","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        return exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     * Converts this Jackson-friendly adapted exam object into the model\u0027s {@code Exam} object.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted exam.","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    public Exam toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        if (!Exam.isValidFormat(exam)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        String[] args \u003d exam.split(\"\\\\s+\");","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        String name \u003d args[0];","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        String score \u003d args[1];","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        if (!Exam.isValidName(name)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(Exam.MESSAGE_NAME_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        if (!Exam.isValidScore(score)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(Exam.MESSAGE_SCORE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"        return new Exam(exam);","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"danielk0k":57}},{"path":"src/main/java/seedu/classify/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    private final String studentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    private final String id;","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    private final String className;","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    private final String parentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    private final String phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    private final String email;","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    private final List\u003cJsonAdaptedExam\u003e exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"studentName\") String studentName, @JsonProperty(\"id\") String id,","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"                              @JsonProperty(\"className\") String className,","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"                              @JsonProperty(\"parentName\") String parentName,","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"                              @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"                              @JsonProperty(\"exams\") List\u003cJsonAdaptedExam\u003e exams) {","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        this.studentName \u003d studentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        this.id \u003d id;","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        this.className \u003d className;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"        this.email \u003d email;","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        if (exams !\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"            this.exams.addAll(exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        studentName \u003d source.getStudentName().fullName;","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"        id \u003d source.getId().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"        className \u003d source.getClassName().className;","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"        parentName \u003d source.getParentName().fullName;","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        exams.addAll(source.getExams().stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"                .map(JsonAdaptedExam::new)","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-07"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"        final List\u003cExam\u003e studentExams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"        for (JsonAdaptedExam exam : exams) {","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"            studentExams.add(exam.toModelType());","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"        if (studentName \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"        if (!Name.isValidName(studentName)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        final Name modelStudentName \u003d new Name(studentName);","lastModifiedDate":"2022-10-07"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        if (!Id.isValidId(id)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"danielk0k"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2022-10-07"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":98,"author":{"gitId":"linuschancs"},"content":"        if (className \u003d\u003d null) {","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"linuschancs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Class.class.getSimpleName()));","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"linuschancs"},"content":"        if (!Class.isValidClassName(className)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"linuschancs"},"content":"            throw new IllegalValueException(Class.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"linuschancs"},"content":"        final Class modelClassName \u003d new Class(className);","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"        if (parentName \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"        if (!parentName.isEmpty() \u0026\u0026 !Name.isValidName(parentName)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"        final Name modelParentName \u003d parentName.isEmpty() ? new Name() : new Name(parentName);","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2022-10-07"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"        if (!phone.isEmpty() \u0026\u0026 !Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"        final Phone modelPhone \u003d phone.isEmpty() ? new Phone() : new Phone(phone);","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"linuschancs"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"linuschancs"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"linuschancs"},"content":"                    Email.class.getSimpleName()));","lastModifiedDate":"2022-10-19"},{"lineNumber":125,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"        if (!email.isEmpty() \u0026\u0026 !Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"linuschancs"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"        final Email modelEmail \u003d email.isEmpty() ? new Email() : new Email(email);","lastModifiedDate":"2022-10-20"},{"lineNumber":130,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"        final Set\u003cExam\u003e modelExams \u003d new HashSet\u003c\u003e(studentExams);","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"linuschancs"},"content":"        return new Student(modelStudentName, modelId, modelClassName, modelParentName, modelPhone,","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"                modelEmail, modelExams);","lastModifiedDate":"2022-10-20"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":135,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":136,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"jeromepui":8,"danielk0k":106,"linuschancs":22}},{"path":"src/main/java/seedu/classify/storage/JsonSerializableStudentRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.util.List;","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":" * An Immutable StudentRecord that is serializable to JSON format.","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"@JsonRootName(value \u003d \"studentrecord\")","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"class JsonSerializableStudentRecord {","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"     * Constructs a {@code JsonSerializableStudentRecord} with the given students.","lastModifiedDate":"2022-10-07"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    public JsonSerializableStudentRecord(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        this.students.addAll(students);","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     * Converts a given {@code ReadOnlyStudentRecord} into this class for Jackson use.","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableStudentRecord}.","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    public JsonSerializableStudentRecord(ReadOnlyStudentRecord source) {","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"     * Converts this student record into the model\u0027s {@code StudentRecord} object.","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-10-07"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    public StudentRecord toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"jeromepui"},"content":"        StudentRecord studentRecord \u003d new StudentRecord();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"            if (studentRecord.hasStudent(student)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"            studentRecord.addStudent(student);","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"jeromepui"},"content":"        return studentRecord;","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"jeromepui":9,"danielk0k":51}},{"path":"src/main/java/seedu/classify/storage/JsonStudentRecordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.FileUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.JsonUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":" * A class to access StudentRecord data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"public class JsonStudentRecordStorage implements StudentRecordStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonStudentRecordStorage.class);","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"    public JsonStudentRecordStorage(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"    public Path getStudentRecordFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"    public Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord() throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"        return readStudentRecord(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"     * Similar to {@link #readStudentRecord()}.","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"    public Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"        Optional\u003cJsonSerializableStudentRecord\u003e jsonStudentRecord \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"                filePath, JsonSerializableStudentRecord.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"        if (!jsonStudentRecord.isPresent()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"            return Optional.of(jsonStudentRecord.get().toModelType());","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"jeromepui"},"content":"    public void saveStudentRecord(ReadOnlyStudentRecord studentRecord) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"        saveStudentRecord(studentRecord, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"jeromepui"},"content":"     * Similar to {@link #saveStudentRecord(ReadOnlyStudentRecord)}.","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"jeromepui"},"content":"    public void saveStudentRecord(ReadOnlyStudentRecord studentRecord, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":73,"author":{"gitId":"jeromepui"},"content":"        requireNonNull(studentRecord);","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"jeromepui"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableStudentRecord(studentRecord), filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jeromepui":25,"-":54,"danielk0k":1}},{"path":"src/main/java/seedu/classify/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.JsonUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jeromepui":5,"-":42}},{"path":"src/main/java/seedu/classify/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"public interface Storage extends StudentRecordStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"    Path getStudentRecordFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"    Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"    void saveStudentRecord(ReadOnlyStudentRecord studentRecord) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jeromepui":9,"-":23}},{"path":"src/main/java/seedu/classify/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"minjiunn"},"content":" * Manages storage of Class-ify data in local storage.","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"    private StudentRecordStorage studentRecordStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"     * Creates a {@code StorageManager} with the given {@code StudentRecordStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"    public StorageManager(StudentRecordStorage studentRecordStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"        this.studentRecordStorage \u003d studentRecordStorage;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d StudentRecord methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"    public Path getStudentRecordFilePath() {","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"        return studentRecordStorage.getStudentRecordFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"jeromepui"},"content":"    public Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"        return readStudentRecord(studentRecordStorage.getStudentRecordFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"jeromepui"},"content":"    public Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord(Path filePath)","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jeromepui"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"jeromepui"},"content":"        return studentRecordStorage.readStudentRecord(filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"jeromepui"},"content":"    public void saveStudentRecord(ReadOnlyStudentRecord studentRecord) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"jeromepui"},"content":"        saveStudentRecord(studentRecord, studentRecordStorage.getStudentRecordFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"jeromepui"},"content":"    public void saveStudentRecord(ReadOnlyStudentRecord studentRecord, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"jeromepui"},"content":"        studentRecordStorage.saveStudentRecord(studentRecord, filePath);","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":20,"-":56,"minjiunn":2,"linuschancs":1}},{"path":"src/main/java/seedu/classify/storage/StudentRecordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":" * Represents a storage for {@link StudentRecord}.","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"public interface StudentRecordStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"    Path getStudentRecordFilePath();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"     * Returns StudentRecord data as a {@link ReadOnlyStudentRecord}.","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"    Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"     * @see #getStudentRecordFilePath()","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"    Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"     * Saves the given {@link ReadOnlyStudentRecord} to the storage.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"     * @param studentRecord cannot be null.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"    void saveStudentRecord(ReadOnlyStudentRecord studentRecord) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"     * @see #saveStudentRecord(ReadOnlyStudentRecord)","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"    void saveStudentRecord(ReadOnlyStudentRecord studentRecord, Path filePath) throws IOException;","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jeromepui":14,"-":30,"danielk0k":2}},{"path":"src/main/java/seedu/classify/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jeromepui":6,"-":30}},{"path":"src/main/java/seedu/classify/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.Logic;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"jeromepui"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"jeromepui":6,"-":80}},{"path":"src/main/java/seedu/classify/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromepui":2,"-":100}},{"path":"src/main/java/seedu/classify/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.Logic;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"maxtance"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudents());","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"        personListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2022-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getStudentRecordFilePath());","lastModifiedDate":"2022-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"maxtance"},"content":"     * Toggle between showing and hiding students\u0027 parent details","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"maxtance"},"content":"    public void handleToggleView() {","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"maxtance"},"content":"        logger.info(\"Toggling view\");","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"maxtance"},"content":"        studentListPanel.updateListView();","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"danielk0k"},"content":"    public StudentListPanel getPersonListPanel() {","lastModifiedDate":"2022-10-07"},{"lineNumber":175,"author":{"gitId":"danielk0k"},"content":"        return studentListPanel;","lastModifiedDate":"2022-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"jeromepui"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"maxtance"},"content":"            if (commandResult.isToggleView()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":198,"author":{"gitId":"maxtance"},"content":"                assert !commandResult.isShowHelp() \u0026\u0026 !commandResult.isExit();","lastModifiedDate":"2022-10-20"},{"lineNumber":199,"author":{"gitId":"maxtance"},"content":"                handleToggleView();","lastModifiedDate":"2022-10-19"},{"lineNumber":200,"author":{"gitId":"maxtance"},"content":"            }","lastModifiedDate":"2022-10-19"},{"lineNumber":201,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromepui":8,"-":182,"maxtance":14,"danielk0k":5}},{"path":"src/main/java/seedu/classify/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromepui":1,"-":27}},{"path":"src/main/java/seedu/classify/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":27}},{"path":"src/main/java/seedu/classify/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"maxtance"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":" * A UI component that displays information of a {@code Student}.","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    public final Student student;","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    private Label studentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"maxtance"},"content":"    private Label studentId;","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"    @FXML","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"    private Label className;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"maxtance"},"content":"    private VBox parentDetailsContainer;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"maxtance"},"content":"    @FXML","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    private Label parentName;","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"    private Label email;","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    private FlowPane exams;","lastModifiedDate":"2022-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"     * Creates a {@code StudentCard} with the given {@code Student} and index to display.","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"maxtance"},"content":"    public StudentCard(Student student, int displayedIndex, boolean conciseInfo) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        this.student \u003d student;","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"maxtance"},"content":"        // Set compulsory student details","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"        studentId.setText(student.getId().toString());","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"        studentName.setText(student.getStudentName().fullName);","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"        className.setText(student.getClassName().className);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"maxtance"},"content":"        // Set optional parent details","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        if (student.getParentName().fullName \u003d\u003d \"\") {","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"            parentName.setText(\"-\");","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"            parentName.setText(student.getParentName().fullName);","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"        if (student.getPhone().value \u003d\u003d \"\") {","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"linuschancs"},"content":"            phone.setText(\"-\");","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"            phone.setText(student.getPhone().value);","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"        if (student.getEmail().value \u003d\u003d \"\") {","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"linuschancs"},"content":"            email.setText(\"-\");","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"            email.setText(student.getEmail().value);","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"        // Set exam grade details","lastModifiedDate":"2022-10-21"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"        student.getExams().stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"                .sorted(Comparator.comparing(exam -\u003e exam.toString()))","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"                .forEach(exam -\u003e exams.getChildren().add(new Label(exam.toString())));","lastModifiedDate":"2022-10-21"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-21"},{"lineNumber":86,"author":{"gitId":"maxtance"},"content":"        if (conciseInfo) {","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"maxtance"},"content":"            showConciseInfo();","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"maxtance"},"content":"        } else {","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"maxtance"},"content":"            showAllInfo();","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"maxtance"},"content":"     * Updates PersonCard to show all info","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"maxtance"},"content":"    public void showAllInfo() {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"maxtance"},"content":"        parentDetailsContainer.setManaged(true);","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"maxtance"},"content":"        parentDetailsContainer.setVisible(true);","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"maxtance"},"content":"     * Updates PersonCard to only show student\u0027s name and ID","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"maxtance"},"content":"    public void showConciseInfo() {","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"maxtance"},"content":"        parentDetailsContainer.setManaged(false);","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"maxtance"},"content":"        parentDetailsContainer.setVisible(false);","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2022-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2022-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jeromepui":2,"-":53,"maxtance":31,"danielk0k":23,"linuschancs":17}},{"path":"src/main/java/seedu/classify/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-07"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.FilteredStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":" * Panel containing the list of students.","lastModifiedDate":"2022-10-07"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2022-10-07"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    @FXML","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"maxtance"},"content":"    public StudentListPanel(FilteredStudents filteredStudents) {","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        super(FXML);","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"maxtance"},"content":"        ObservableList\u003cStudent\u003e studentList \u003d filteredStudents.getFilteredStudentList();","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"maxtance"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell(filteredStudents));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"maxtance"},"content":"     * Refreshes StudentListViewCell to update each Student Card","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"maxtance"},"content":"    public void updateListView() {","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"        studentListView.refresh();","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"maxtance"},"content":"        private FilteredStudents filteredStudents;","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"maxtance"},"content":"        public StudentListViewCell(FilteredStudents filteredStudents) {","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"maxtance"},"content":"            this.filteredStudents \u003d filteredStudents;","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        protected void updateItem(Student person, boolean empty) {","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2022-10-07"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"                setText(null);","lastModifiedDate":"2022-10-07"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"            } else {","lastModifiedDate":"2022-10-07"},{"lineNumber":59,"author":{"gitId":"maxtance"},"content":"                setGraphic(new StudentCard(person, getIndex() + 1,","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"                        this.filteredStudents.hasConciseInfo()).getRoot());","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-10-07"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"jeromepui":4,"maxtance":18,"danielk0k":43}},{"path":"src/main/java/seedu/classify/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"jeromepui":1,"-":12}},{"path":"src/main/java/seedu/classify/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.MainApp;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.LogsCenter;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.StringUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.Logic;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromepui":5,"-":83}},{"path":"src/main/java/seedu/classify/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.MainApp;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jeromepui":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"maxtance"},"content":"@font-face{","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"maxtance"},"content":"    font-family: \u0027Roboto Mono\u0027;","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"maxtance"},"content":"    src: url(\u0027fonts/RobotoMono-Regular.ttf\u0027);","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"maxtance"},"content":"@font-face{","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"maxtance"},"content":"    font-family: \u0027Roboto Mono Semibold\u0027;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"maxtance"},"content":"    src: url(\u0027fonts/RobotoMono-SemiBold.ttf\u0027);","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"maxtance"},"content":"@font-face{","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"maxtance"},"content":"    font-family: \u0027Roboto Mono Light\u0027;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"    src: url(\u0027fonts/RobotoMono-Light.ttf\u0027);","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"    background-color: #0D0630; /* Used in the default.html file */","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":31,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"maxtance"},"content":"    -fx-base: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"maxtance"},"content":"    -fx-control-inner-background: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":85,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":102,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #8BB8A8;","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #BBD9CC;","lastModifiedDate":"2022-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #7F968D;","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"maxtance"},"content":"    -fx-border-color: #7F968D;","lastModifiedDate":"2022-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"maxtance"},"content":"    -fx-font-family: \"Roboto Mono Semibold\";","lastModifiedDate":"2022-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"maxtance"},"content":"    -fx-font-family: \"Roboto Mono\";","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"maxtance"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"maxtance"},"content":".cell_big_text {","lastModifiedDate":"2022-10-19"},{"lineNumber":151,"author":{"gitId":"maxtance"},"content":"    -fx-font-family: \"Roboto Mono Semibold\";","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"maxtance"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"maxtance"},"content":"    -fx-fill: black;","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"maxtance"},"content":".cell_small_text {","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"maxtance"},"content":"    -fx-font-family: \"Roboto Mono Semibold\";","lastModifiedDate":"2022-10-26"},{"lineNumber":158,"author":{"gitId":"maxtance"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"maxtance"},"content":"    -fx-fill: black;","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":163,"author":{"gitId":"maxtance"},"content":"     -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":167,"author":{"gitId":"maxtance"},"content":"     -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"maxtance"},"content":"     -fx-border-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: derive(#0D0630, 30%);","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":178,"author":{"gitId":"maxtance"},"content":"    -fx-font-family: \"Roboto Mono Light\";","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":180,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":189,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":196,"author":{"gitId":"maxtance"},"content":"    -fx-border-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":206,"author":{"gitId":"maxtance"},"content":"    -fx-border-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":211,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"maxtance"},"content":"  -fx-background-color: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":260,"author":{"gitId":"maxtance"},"content":"  -fx-text-fill: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"maxtance"},"content":"    -fx-border-color: #D6D6D6, #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":274,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"maxtance"},"content":"    -fx-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":308,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: derive(#0D0630, 30%);","lastModifiedDate":"2022-10-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #18314F;","lastModifiedDate":"2022-10-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"maxtance"},"content":"    -fx-border-color: #18314F;","lastModifiedDate":"2022-10-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"maxtance"},"content":"    -fx-font-family: \"Roboto Mono Light\";","lastModifiedDate":"2022-10-26"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: #D6D6D6;","lastModifiedDate":"2022-10-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #18314F;","lastModifiedDate":"2022-10-26"},{"lineNumber":364,"author":{"gitId":"maxtance"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-26"},{"lineNumber":365,"author":{"gitId":"maxtance"},"content":"    -fx-background-radius: 0px;","lastModifiedDate":"2022-10-26"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"danielk0k"},"content":"#exams {","lastModifiedDate":"2022-10-21"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":373,"author":{"gitId":"danielk0k"},"content":"#exams .label {","lastModifiedDate":"2022-10-21"},{"lineNumber":374,"author":{"gitId":"maxtance"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2022-10-26"},{"lineNumber":375,"author":{"gitId":"maxtance"},"content":"    -fx-background-color: #f5dddd;","lastModifiedDate":"2022-10-26"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"maxtance"},"content":"    -fx-font-family: \"Roboto Mono\";","lastModifiedDate":"2022-10-26"},{"lineNumber":380,"author":{"gitId":"danielk0k"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2022-10-21"},{"lineNumber":381,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"maxtance":87,"-":291,"danielk0k":3}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"    -fx-background: #0D0630;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"danielk0k":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Class-ify\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        \u003cHBox styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"          \u003cVBox fx:id\u003d\"personList\" alignment\u003d\"CENTER_LEFT\" minWidth\u003d\"400\" prefWidth\u003d\"400\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"          \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minWidth\u003d\"200\" prefWidth\u003d\"200\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"maxtance"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":47,"maxtance":3,"danielk0k":11}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"maxtance"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"result-display\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"maxtance":1,"danielk0k":1}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"maxtance"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"maxtance"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/18\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"maxtance"},"content":"  \u003cGridPane prefWidth\u003d\"150.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"75.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"maxtance"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"maxtance"},"content":"        \u003cLabel fx:id\u003d\"studentName\" prefWidth\u003d\"200.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$studentName\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"maxtance"},"content":"         \u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$studentId\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"maxtance"},"content":"               \u003cgraphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"maxtance"},"content":"                  \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_big_text\" text\u003d\"ID:\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"maxtance"},"content":"               \u003c/graphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"maxtance"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"maxtance"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"maxtance"},"content":"      \u003cLabel fx:id\u003d\"className\" alignment\u003d\"CENTER\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$className\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"maxtance"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"maxtance"},"content":"               \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_big_text\" text\u003d\"Class:\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"maxtance"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"maxtance"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"maxtance"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"maxtance"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"maxtance"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"maxtance"},"content":"               \u003cFont name\u003d\"Apple Braille\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"maxtance"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"maxtance"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"maxtance"},"content":"         \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_small_text\" text\u003d\"Grades\" underline\u003d\"true\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"maxtance"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"maxtance"},"content":"               \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":55,"author":{"gitId":"maxtance"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"maxtance"},"content":"         \u003c/Text\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        \u003cFlowPane fx:id\u003d\"exams\" prefWidth\u003d\"130.0\"\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":58,"author":{"gitId":"maxtance"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"                \u003cInsets top\u003d\"4.0\" /\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"maxtance"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"maxtance"},"content":"               \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"maxtance"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2022-10-21"},{"lineNumber":65,"author":{"gitId":"maxtance"},"content":"         \u003cVBox fx:id\u003d\"parentDetailsContainer\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"maxtance"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"maxtance"},"content":"               \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_small_text\" text\u003d\"Parent Details\" underline\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"maxtance"},"content":"            \u003cLabel fx:id\u003d\"parentName\" alignment\u003d\"CENTER\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentName\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"maxtance"},"content":"                  \u003cgraphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"maxtance"},"content":"                     \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_small_text\" text\u003d\"Name:\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":71,"author":{"gitId":"maxtance"},"content":"                  \u003c/graphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"maxtance"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"maxtance"},"content":"                     \u003cInsets top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"maxtance"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"maxtance"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"maxtance"},"content":"                     \u003cFont name\u003d\"Apple SD Gothic Neo Regular\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"maxtance"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"maxtance"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"maxtance"},"content":"            \u003cLabel fx:id\u003d\"phone\" alignment\u003d\"CENTER\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"maxtance"},"content":"                  \u003cgraphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"maxtance"},"content":"                     \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_small_text\" text\u003d\"Phone:\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"maxtance"},"content":"                  \u003c/graphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"maxtance"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"maxtance"},"content":"                     \u003cInsets top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"maxtance"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"maxtance"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"maxtance"},"content":"            \u003cLabel fx:id\u003d\"email\" alignment\u003d\"CENTER\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":88,"author":{"gitId":"maxtance"},"content":"                  \u003cgraphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"maxtance"},"content":"                     \u003cText strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" styleClass\u003d\"cell_small_text\" text\u003d\"Email:\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"maxtance"},"content":"                  \u003c/graphic\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"maxtance"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"maxtance"},"content":"                     \u003cInsets top\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"maxtance"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":94,"author":{"gitId":"maxtance"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"maxtance"},"content":"            \u003c/children\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"maxtance"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"maxtance"},"content":"               \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":98,"author":{"gitId":"maxtance"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"maxtance"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"maxtance"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"maxtance"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"maxtance"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":24,"maxtance":78,"danielk0k":3}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"  \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":7,"danielk0k":1}},{"path":"src/test/java/seedu/classify/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"jeromepui":1,"-":57}},{"path":"src/test/java/seedu/classify/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"jeromepui":1,"-":26}},{"path":"src/test/java/seedu/classify/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":2,"-":133}},{"path":"src/test/java/seedu/classify/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.core.index;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jeromepui":2,"-":58}},{"path":"src/test/java/seedu/classify/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"jeromepui":2,"-":34}},{"path":"src/test/java/seedu/classify/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"jeromepui":3,"-":105}},{"path":"src/test/java/seedu/classify/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Config;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jeromepui":4,"-":112}},{"path":"src/test/java/seedu/classify/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":2,"-":21}},{"path":"src/test/java/seedu/classify/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.TestUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":3,"-":42}},{"path":"src/test/java/seedu/classify/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.commons.util;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"jeromepui":2,"-":141}},{"path":"src/test/java/seedu/classify/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_INVALID_STUDENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.CLASS_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PARENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.AddStudCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.CommandResult;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ViewAllCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.JsonStudentRecordStorage;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.storage.StorageManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"minjiunn"},"content":"        JsonStudentRecordStorage studentRecordStorage \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"minjiunn"},"content":"                new JsonStudentRecordStorage(temporaryFolder.resolve(\"classify.json\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"        StorageManager storage \u003d new StorageManager(studentRecordStorage, userPrefsStorage);","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"jeromepui"},"content":"        String deleteCommand \u003d \"delete nm/Alice\";","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"maxtance"},"content":"        String listCommand \u003d ViewAllCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"maxtance"},"content":"        assertCommandSuccess(listCommand, ViewAllCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"        // Setup LogicManager with JsonStudentRecordIoExceptionThrowingStub","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"minjiunn"},"content":"        JsonStudentRecordStorage studentRecordStorage \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"                new JsonStudentRecordIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionStudentRecord.json\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"minjiunn"},"content":"        StorageManager storage \u003d new StorageManager(studentRecordStorage, userPrefsStorage);","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"        String addCommand \u003d AddStudCommand.COMMAND_WORD + STUDENT_NAME_DESC_AMY + ID_DESC_AMY + CLASS_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"        Student expectedPerson \u003d new StudentBuilder(AMY).withExams().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        expectedModel.addStudent(expectedPerson);","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"jeromepui"},"content":"    private static class JsonStudentRecordIoExceptionThrowingStub extends JsonStudentRecordStorage {","lastModifiedDate":"2022-10-10"},{"lineNumber":155,"author":{"gitId":"jeromepui"},"content":"        private JsonStudentRecordIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"jeromepui"},"content":"        public void saveStudentRecord(ReadOnlyStudentRecord studentRecord, Path filePath) throws IOException {","lastModifiedDate":"2022-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"jeromepui":30,"-":119,"maxtance":2,"minjiunn":5,"linuschancs":4,"danielk0k":4}},{"path":"src/test/java/seedu/classify/logic/commands/AddStudCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":" * Contains integration tests (interaction with the Model) for {@code AddStudCommand}.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"public class AddStudCommandIntegrationTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"        assertCommandSuccess(new AddStudCommand(validStudent), model,","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"                String.format(AddStudCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        Student personInList \u003d model.getStudentRecord().getStudentList().get(0);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        assertCommandFailure(new AddStudCommand(personInList), model, AddStudCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jeromepui":9,"-":24,"linuschancs":1,"danielk0k":11}},{"path":"src/test/java/seedu/classify/logic/commands/AddStudCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.FilteredStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"public class AddStudCommandTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddStudCommand(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        CommandResult commandResult \u003d new AddStudCommand(validPerson).execute(modelStub);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        assertEquals(String.format(AddStudCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.studentsAdded);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        Student validPerson \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        AddStudCommand addStudCommand \u003d new AddStudCommand(validPerson);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        assertThrows(","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"                CommandException.class, AddStudCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addStudCommand.execute(modelStub)","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        );","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        Student alice \u003d new StudentBuilder().withStudentName(\"Alice\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        Student bob \u003d new StudentBuilder().withStudentName(\"Bob\").build();","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        AddStudCommand addAliceCommand \u003d new AddStudCommand(alice);","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"        AddStudCommand addBobCommand \u003d new AddStudCommand(bob);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"        AddStudCommand addAliceCommandCopy \u003d new AddStudCommand(alice);","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"        public Path getStudentRecordFilePath() {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"        public void setStudentRecordFilePath(Path studentRecordFilePath) {","lastModifiedDate":"2022-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"        public void addStudent(Student person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"        public void setStudentRecord(ReadOnlyStudentRecord newData) {","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"        public ReadOnlyStudentRecord getStudentRecord() {","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"        public boolean hasStudent(Student person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"danielk0k"},"content":"        public void setStudent(Student target, Student editedPerson) {","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"danielk0k"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"danielk0k"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2022-10-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"maxtance"},"content":"        public void toggleStudentListInfoConcise() {","lastModifiedDate":"2022-10-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":158,"author":{"gitId":"maxtance"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":159,"author":{"gitId":"maxtance"},"content":"        public boolean isStudentListInfoConcise() {","lastModifiedDate":"2022-10-07"},{"lineNumber":160,"author":{"gitId":"maxtance"},"content":"            return false;","lastModifiedDate":"2022-10-07"},{"lineNumber":161,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":162,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":163,"author":{"gitId":"maxtance"},"content":"        @Override","lastModifiedDate":"2022-10-07"},{"lineNumber":164,"author":{"gitId":"maxtance"},"content":"        public FilteredStudents getFilteredStudents() {","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"maxtance"},"content":"            return null;","lastModifiedDate":"2022-10-07"},{"lineNumber":166,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"danielk0k"},"content":"        private final Student student;","lastModifiedDate":"2022-10-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"danielk0k"},"content":"        ModelStubWithPerson(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":176,"author":{"gitId":"danielk0k"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":177,"author":{"gitId":"danielk0k"},"content":"            this.student \u003d student;","lastModifiedDate":"2022-10-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"danielk0k"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":181,"author":{"gitId":"danielk0k"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":182,"author":{"gitId":"jeromepui"},"content":"            return this.student.hasSameNameOrId(student);","lastModifiedDate":"2022-10-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"danielk0k"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"danielk0k"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":193,"author":{"gitId":"danielk0k"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":194,"author":{"gitId":"jeromepui"},"content":"            return studentsAdded.stream().anyMatch(student::hasSameNameOrId);","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"danielk0k"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":199,"author":{"gitId":"danielk0k"},"content":"            requireNonNull(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":200,"author":{"gitId":"danielk0k"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"danielk0k"},"content":"        public ReadOnlyStudentRecord getStudentRecord() {","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"danielk0k"},"content":"            return new StudentRecord();","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"jeromepui":13,"-":145,"maxtance":11,"danielk0k":39,"linuschancs":1}},{"path":"src/test/java/seedu/classify/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"    public void execute_emptyStudentRecord_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"minjiunn"},"content":"    public void execute_nonEmptyStudentRecord_success() {","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        Model model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        expectedModel.setStudentRecord(new StudentRecord());","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jeromepui":7,"-":20,"minjiunn":2,"danielk0k":3}},{"path":"src/test/java/seedu/classify/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"maxtance"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"maxtance"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"maxtance"},"content":"        // different toggleView value -\u003e returns false","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"maxtance"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"maxtance"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"maxtance"},"content":"        // different toggleView value -\u003e returns different hashcode","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"maxtance"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"maxtance"},"content":"    public void getFeedbackToUser() {","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"maxtance"},"content":"        String expectedFeedback \u003d \"feedback\";","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"maxtance"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"maxtance"},"content":"        assertEquals(expectedFeedback, commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"maxtance"},"content":"    public void isShowHelp() {","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"maxtance"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, false, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"maxtance"},"content":"        assertTrue(commandResult.isShowHelp());","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"maxtance"},"content":"    public void isToggleView() {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"maxtance"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"maxtance"},"content":"        assertTrue(commandResult.isToggleView());","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"maxtance"},"content":"    public void isExit() {","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"maxtance"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, true);","lastModifiedDate":"2022-10-20"},{"lineNumber":83,"author":{"gitId":"maxtance"},"content":"        assertTrue(commandResult.isExit());","lastModifiedDate":"2022-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"jeromepui":1,"-":49,"maxtance":35}},{"path":"src/test/java/seedu/classify/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2022-10-21"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_STUDENT_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_STUDENT_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_PARENT_NAME_AMY \u003d \"Jenny Bee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_PARENT_NAME_BOB \u003d \"Eric Choo\";","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_ID_AMY \u003d \"498C\";","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_ID_BOB \u003d \"883A\";","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"    public static final String VALID_CLASS_AMY \u003d \"20A68\";","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"    public static final String VALID_CLASS_BOB \u003d \"20A70\";","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@gmail.com\";","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@gmail.com\";","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_EXAM_1 \u003d \"CA1 50\";","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"    public static final String VALID_EXAM_2 \u003d \"SA2 80\";","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"    public static final String STUDENT_NAME_DESC_AMY \u003d \" \" + PREFIX_STUDENT_NAME + VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    public static final String STUDENT_NAME_DESC_BOB \u003d \" \" + PREFIX_STUDENT_NAME + VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    public static final String PARENT_NAME_DESC_AMY \u003d \" \" + PREFIX_PARENT_NAME + VALID_PARENT_NAME_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"    public static final String PARENT_NAME_DESC_BOB \u003d \" \" + PREFIX_PARENT_NAME + VALID_PARENT_NAME_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"    public static final String CLASS_DESC_AMY \u003d \" \" + PREFIX_CLASS + VALID_CLASS_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"    public static final String CLASS_DESC_BOB \u003d \" \" + PREFIX_CLASS + VALID_CLASS_BOB;","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"    public static final String TAG_DESC_EXAM_1 \u003d \" \" + PREFIX_EXAM + VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"    public static final String TAG_DESC_EXAM_2 \u003d \" \" + PREFIX_EXAM + VALID_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    public static final String INVALID_STUDENT_NAME_DESC \u003d \" \" + PREFIX_STUDENT_NAME + \"A\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"    public static final String INVALID_PARENT_NAME_DESC \u003d \" \" + PREFIX_PARENT_NAME + \"JC!\"; // \u0027!\u0027 not allowed in names","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"    public static final String INVALID_ID_DESC \u003d \" \" + PREFIX_ID + \"461\"; // missing last character","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"    public static final String INVALID_CLASS_DESC \u003d \" \" + PREFIX_CLASS; // empty string not allowed in class names","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"            + \"test@@gmail.com\"; // only a single @ is allowed for emails","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"    public static final String INVALID_EXAM_DESC \u003d \" \" + PREFIX_EXAM + \"CA2 1*0\"; // \u0027*\u0027 not allowed in exam score","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"                .withStudentName(VALID_STUDENT_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"                .withId(VALID_ID_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"                .withClassName(VALID_CLASS_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"                .withParentName(VALID_PARENT_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"                .withExams(VALID_EXAM_2).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"                .withId(VALID_ID_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"                .withParentName(VALID_PARENT_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"linuschancs"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"                .withExams(VALID_EXAM_1, VALID_EXAM_2).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"jeromepui"},"content":"            assertEquals(expectedModel.getFilteredStudentList(), actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"danielk0k"},"content":"     * - the student record, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"jeromepui"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-10-10"},{"lineNumber":131,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"        StudentRecord expectedStudentRecord \u003d new StudentRecord(actualModel.getStudentRecord());","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedStudentRecord, actualModel.getStudentRecord());","lastModifiedDate":"2022-10-09"},{"lineNumber":136,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"danielk0k"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"danielk0k"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"danielk0k"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"danielk0k"},"content":"        final String[] splitName \u003d student.getStudentName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"danielk0k"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"danielk0k"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jeromepui":18,"-":74,"danielk0k":46,"linuschancs":14}},{"path":"src/test/java/seedu/classify/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.IdPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NamePredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"        Name studentNameToDelete \u003d studentToDelete.getStudentName();","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(studentNameToDelete, new NamePredicate(studentNameToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"    public void execute_validIdUnfilteredList_success() {","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"        Id studentIdToDelete \u003d studentToDelete.getId();","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(studentIdToDelete, new IdPredicate(studentIdToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, studentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"    public void execute_invalidNameUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"        Name invalidName \u003d new Name(\"Harry Styles\");","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidName, new NamePredicate(invalidName));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"jeromepui"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_NAME);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"jeromepui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jeromepui"},"content":"    public void execute_invalidIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"jeromepui"},"content":"        Id invalidId \u003d new Id(\"999Z\");","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidId, new IdPredicate(invalidId));","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"jeromepui"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_ID);","lastModifiedDate":"2022-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"jeromepui"},"content":"        Student firstStudentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"jeromepui"},"content":"        Name studentNameToDelete \u003d firstStudentToDelete.getStudentName();","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(studentNameToDelete,","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"jeromepui"},"content":"                new NamePredicate(studentNameToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":81,"author":{"gitId":"jeromepui"},"content":"        Student secondStudentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"jeromepui"},"content":"        Id studentIdToDelete \u003d secondStudentToDelete.getId();","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(studentIdToDelete, new IdPredicate(studentIdToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(studentNameToDelete,","lastModifiedDate":"2022-10-10"},{"lineNumber":90,"author":{"gitId":"jeromepui"},"content":"                new NamePredicate(studentNameToDelete));","lastModifiedDate":"2022-10-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"jeromepui":47,"-":60,"danielk0k":4}},{"path":"src/test/java/seedu/classify/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        Student editedPerson \u003d new StudentBuilder().withExams(\"CA2 90\", \"SA1 60\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        Model expectedModel \u003d new ModelManager(new StudentRecord(model.getStudentRecord()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"maxtance"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        Student lastPerson \u003d model.getFilteredStudentList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        StudentBuilder personInList \u003d new StudentBuilder(lastPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        Student editedPerson \u003d personInList.withStudentName(VALID_STUDENT_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"                .withExams(VALID_EXAM_1).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"                .withPhone(VALID_PHONE_BOB).withExams(VALID_EXAM_1).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"        Model expectedModel \u003d new ModelManager(new StudentRecord(model.getStudentRecord()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        expectedModel.setStudent(lastPerson, editedPerson);","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditStudentDescriptor());","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"        Student editedPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"        Model expectedModel \u003d new ModelManager(new StudentRecord(model.getStudentRecord()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        Student personInFilteredList \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        Student editedPerson \u003d new StudentBuilder(personInFilteredList).withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"                new EditStudentDescriptorBuilder().withStudentName(VALID_STUDENT_NAME_BOB).build());","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedPerson);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"        Model expectedModel \u003d new ModelManager(new StudentRecord(model.getStudentRecord()), new UserPrefs());","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedPerson);","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"        Student firstPerson \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"        Student personInList \u003d model.getStudentRecord().getStudentList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"                new EditStudentDescriptorBuilder(personInList).build());","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"maxtance"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2022-10-07"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":125,"author":{"gitId":"danielk0k"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"danielk0k"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getStudentRecord().getStudentList().size());","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"danielk0k"},"content":"                new EditStudentDescriptorBuilder().withStudentName(VALID_STUDENT_NAME_BOB).build());","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor copyDescriptor \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"jeromepui":21,"-":113,"maxtance":2,"danielk0k":37}},{"path":"src/test/java/seedu/classify/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptorWithSameValues \u003d new EditStudentDescriptor(DESC_AMY);","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY)","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"                .withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(DESC_AMY).withExams(VALID_EXAM_1).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"jeromepui":9,"-":40,"danielk0k":7,"linuschancs":3}},{"path":"src/test/java/seedu/classify/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jeromepui":5,"-":14,"maxtance":1}},{"path":"src/test/java/seedu/classify/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.CARL;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":63,"author":{"gitId":"maxtance"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"maxtance"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-17"},{"lineNumber":73,"author":{"gitId":"maxtance"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"maxtance"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredStudentList());","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jeromepui":11,"-":67,"maxtance":4,"danielk0k":2}},{"path":"src/test/java/seedu/classify/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"jeromepui":5,"-":14,"maxtance":1}},{"path":"src/test/java/seedu/classify/logic/commands/ToggleViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"maxtance"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"maxtance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"maxtance"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewAll Command.","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"class ToggleViewCommandTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"    private Model model;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"maxtance"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"maxtance"},"content":"     * At initialisation, the actual model will show all students\u0027 information.","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"     * Expected Model hides students\u0027 parent details.","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"maxtance"},"content":"    void init() {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"maxtance"},"content":"        model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"maxtance"},"content":"        expectedModel \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"maxtance"},"content":"        expectedModel.toggleStudentListInfoConcise();","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"maxtance"},"content":"    public void execute_toggleHide() {","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"maxtance"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"                ToggleViewCommand.MESSAGE_SUCCESS_HIDE, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"maxtance"},"content":"        assertCommandSuccess(new ToggleViewCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"maxtance"},"content":"    public void execute_toggleHide_thenToggleShow() {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"maxtance"},"content":"        CommandResult expectedCommandResult1 \u003d new CommandResult(","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"maxtance"},"content":"                ToggleViewCommand.MESSAGE_SUCCESS_HIDE, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"maxtance"},"content":"        CommandResult expectedCommandResult2 \u003d new CommandResult(","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"maxtance"},"content":"                ToggleViewCommand.MESSAGE_SUCCESS_SHOW, false, true, false);","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"maxtance"},"content":"        Command toggleViewCommand \u003d new ToggleViewCommand();","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"maxtance"},"content":"        // First toggle. Actual model hides students\u0027 parent details","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"maxtance"},"content":"        assertCommandSuccess(toggleViewCommand, model, expectedCommandResult1, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"maxtance"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"maxtance"},"content":"            // Second toggle. Actual model shows all students\u0027 information","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"maxtance"},"content":"            expectedModel.toggleStudentListInfoConcise();","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"maxtance"},"content":"            CommandResult result \u003d toggleViewCommand.execute(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"maxtance"},"content":"            assertEquals(model, expectedModel);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"maxtance"},"content":"            assertEquals(model.getFilteredStudentList(), expectedModel.getFilteredStudentList());","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"maxtance"},"content":"            assertEquals(result, expectedCommandResult2);","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"maxtance"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"maxtance"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"maxtance"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"jeromepui":7,"maxtance":53}},{"path":"src/test/java/seedu/classify/logic/commands/ViewAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewAll Command.","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"public class ViewAllCommandTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"    private Model expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"        assertCommandSuccess(new ViewAllCommand(), model, ViewAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":30,"author":{"gitId":"maxtance"},"content":"        assertCommandSuccess(new ViewAllCommand(), model, ViewAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jeromepui":8,"-":18,"maxtance":6}},{"path":"src/test/java/seedu/classify/logic/commands/ViewClassCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"linuschancs"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_PERSONS_LISTED_IN_CLASS;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_SINGLE_PERSON_LISTED_IN_CLASS;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import static seedu.classify.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"import seedu.classify.model.student.ClassPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewClassCommand}.","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"public class ViewClassCommandIntegrationTest {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    private Model model;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"        model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"    public void execute_viewClass_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d preparePredicate(\"XXX\");","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(new ViewClassCommand(predicate), model,","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"                String.format(MESSAGE_PERSONS_LISTED_IN_CLASS, 0), expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"    public void execute_viewClassAfterAddStud_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        //Initially there are no students with class \"XXX\"","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d preparePredicate(\"XXX\");","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(new ViewClassCommand(predicate), model,","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"                String.format(MESSAGE_PERSONS_LISTED_IN_CLASS, 0), expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"        //After adding a student with class \"XXX\"","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"        Student validStudent \u003d new StudentBuilder().withClassName(\"XXX\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"        model.addStudent(validStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(new ViewClassCommand(predicate), model,","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"                String.format(MESSAGE_SINGLE_PERSON_LISTED_IN_CLASS, 1), expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"    public void execute_viewClassAfterDeleteStud_success() {","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        //Initially there is one student ALICE with class \"4A1\"","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"        Model expectedModel \u003d new ModelManager(model.getStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d preparePredicate(\"4A1\");","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(new ViewClassCommand(predicate), model,","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"                String.format(MESSAGE_SINGLE_PERSON_LISTED_IN_CLASS, 1), expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"        //After deleting the student ALICE with class \"4A1\"","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"linuschancs"},"content":"        model.deleteStudent(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"        expectedModel.deleteStudent(ALICE);","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(new ViewClassCommand(predicate), model,","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"                String.format(MESSAGE_PERSONS_LISTED_IN_CLASS, 0), expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"linuschancs"},"content":"     * Parses {@code userInput} into a {@code ClassPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"    private ClassPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"        return new ClassPredicate(new Class(userInput));","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"linuschancs":88}},{"path":"src/test/java/seedu/classify/logic/commands/ViewClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_PERSONS_LISTED_IN_CLASS;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_SINGLE_PERSON_LISTED_IN_CLASS;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.DANIEL;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"import static seedu.classify.testutil.TypicalStudents.GEORGE;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.ClassPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":" * Contains integration tests (interaction with the Model) for {@code ViewClassCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"public class ViewClassCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"                new ClassPredicate(new Class(\"First\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"                new ClassPredicate(new Class(\"Second\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"        ViewClassCommand firstCommand \u003d new ViewClassCommand(firstPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        ViewClassCommand secondCommand \u003d new ViewClassCommand(secondPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"        ViewClassCommand firstCommandCopy \u003d new ViewClassCommand(firstPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        assertTrue(firstCommand.equals(firstCommandCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"        // different classes -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"        assertFalse(firstCommand.equals(secondCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"    public void execute_noPersonFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_IN_CLASS, 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d preparePredicate(\"XXX\");","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"        ViewClassCommand command \u003d new ViewClassCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"    public void execute_multiplePersonsFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_IN_CLASS, 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d preparePredicate(\"3A1\");","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"linuschancs"},"content":"        ViewClassCommand command \u003d new ViewClassCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"linuschancs"},"content":"        assertEquals(Arrays.asList(DANIEL, ELLE), model.getFilteredStudentList());","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"    public void execute_singlePersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d String.format(MESSAGE_SINGLE_PERSON_LISTED_IN_CLASS, 1);","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d preparePredicate(\"17S68\");","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"        ViewClassCommand command \u003d new ViewClassCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"linuschancs"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"linuschancs"},"content":"        assertEquals(Arrays.asList(GEORGE), model.getFilteredStudentList());","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"linuschancs"},"content":"     * Parses {@code userInput} into a {@code ClassPredicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"    private ClassPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"linuschancs"},"content":"        return new ClassPredicate(new Class(userInput));","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jeromepui":11,"linuschancs":84}},{"path":"src/test/java/seedu/classify/logic/parser/AddStudCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.CLASS_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.CLASS_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_CLASS_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_EXAM_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_PARENT_NAME_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_STUDENT_NAME_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PARENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PARENT_NAME_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.TAG_DESC_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.TAG_DESC_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_CLASS_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.AddStudCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"public class AddStudCommandParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    private AddStudCommandParser parser \u003d new AddStudCommandParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        Student expectedPerson \u003d new StudentBuilder(BOB).withExams(VALID_EXAM_2).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2, new AddStudCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2, new AddStudCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_EXAM_2, new AddStudCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"        // multiple ids - last id accepted","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + ID_DESC_AMY + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2, new AddStudCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"        // multiple class - last class accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_AMY + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2, new AddStudCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"                + EMAIL_DESC_AMY + EMAIL_DESC_BOB + TAG_DESC_EXAM_2, new AddStudCommand(expectedPerson));","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"        Student expectedPersonMultipleTags \u003d new StudentBuilder(BOB).withExams(VALID_EXAM_2, VALID_EXAM_1)","lastModifiedDate":"2022-10-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":91,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"                        + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"                        + TAG_DESC_EXAM_2 + TAG_DESC_EXAM_1, new AddStudCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"        Student expectedPerson \u003d new StudentBuilder(AMY).withExams().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + ID_DESC_AMY + CLASS_DESC_AMY","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY, new AddStudCommand(expectedPerson));","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"linuschancs"},"content":"        // missing parent name","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"linuschancs"},"content":"        Student expectedPersonWithoutParentName \u003d new StudentBuilder(AMY).withParentName(\"\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + ID_DESC_AMY + CLASS_DESC_AMY","lastModifiedDate":"2022-10-19"},{"lineNumber":105,"author":{"gitId":"linuschancs"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY, new AddStudCommand(expectedPersonWithoutParentName));","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"linuschancs"},"content":"        // missing phone","lastModifiedDate":"2022-10-19"},{"lineNumber":107,"author":{"gitId":"linuschancs"},"content":"        Student expectedPersonWithoutPhone \u003d new StudentBuilder(AMY).withPhone(\"\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + ID_DESC_AMY + CLASS_DESC_AMY","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_AMY + EMAIL_DESC_AMY, new AddStudCommand(expectedPersonWithoutPhone));","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"        // missing email","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"linuschancs"},"content":"        Student expectedPersonWithoutEmail \u003d new StudentBuilder(AMY).withEmail(\"\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":112,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + ID_DESC_AMY + CLASS_DESC_AMY","lastModifiedDate":"2022-10-19"},{"lineNumber":113,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_AMY + PHONE_DESC_AMY, new AddStudCommand(expectedPersonWithoutEmail));","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"linuschancs"},"content":"        // missing parent name, phone, email and zero tags","lastModifiedDate":"2022-10-19"},{"lineNumber":115,"author":{"gitId":"linuschancs"},"content":"        Student expectedPersonWithoutOptional \u003d new StudentBuilder(AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"linuschancs"},"content":"                .withParentName(\"\")","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"linuschancs"},"content":"                .withEmail(\"\")","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"linuschancs"},"content":"                .withPhone(\"\")","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"                .withExams().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, STUDENT_NAME_DESC_AMY + ID_DESC_AMY + CLASS_DESC_AMY,","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"linuschancs"},"content":"                new AddStudCommand(expectedPersonWithoutOptional));","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, VALID_STUDENT_NAME_BOB + CLASS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"linuschancs"},"content":"                        + ID_DESC_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"        // missing id prefix","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + CLASS_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"linuschancs"},"content":"                        + VALID_ID_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"linuschancs"},"content":"        // missing class prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + VALID_CLASS_BOB + PHONE_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"linuschancs"},"content":"                + ID_DESC_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, VALID_STUDENT_NAME_BOB + CLASS_DESC_BOB + VALID_PHONE_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"linuschancs"},"content":"                        + VALID_ID_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, INVALID_STUDENT_NAME_DESC + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":150,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"linuschancs"},"content":"        // invalid class","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + INVALID_CLASS_DESC","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"linuschancs"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2, Class.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB + PARENT_NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"danielk0k"},"content":"                + INVALID_PHONE_DESC + EMAIL_DESC_BOB + TAG_DESC_EXAM_2, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"linuschancs"},"content":"        // invalid parent name","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB + INVALID_PARENT_NAME_DESC","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"danielk0k"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_EXAM_2, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":164,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"danielk0k"},"content":"        // invalid id","lastModifiedDate":"2022-10-09"},{"lineNumber":166,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + INVALID_ID_DESC + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"danielk0k"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_EXAM_2, Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"linuschancs"},"content":"        // invalid email","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB + PARENT_NAME_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"danielk0k"},"content":"                + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TAG_DESC_EXAM_2, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"danielk0k"},"content":"        // invalid exam","lastModifiedDate":"2022-10-20"},{"lineNumber":174,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"danielk0k"},"content":"                + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_EXAM_DESC","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2, Exam.MESSAGE_SCORE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, INVALID_STUDENT_NAME_DESC + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"danielk0k"},"content":"                        + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TAG_DESC_EXAM_2,","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + STUDENT_NAME_DESC_BOB + ID_DESC_BOB + CLASS_DESC_BOB","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"danielk0k"},"content":"                        + PARENT_NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + TAG_DESC_EXAM_2,","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"danielk0k"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStudCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-06"},{"lineNumber":187,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"jeromepui":39,"-":51,"danielk0k":37,"linuschancs":62}},{"path":"src/test/java/seedu/classify/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"jeromepui":1,"-":149}},{"path":"src/test/java/seedu/classify/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"jeromepui":3,"-":36}},{"path":"src/test/java/seedu/classify/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.Messages;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ModelManager;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.IdPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NamePredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"    private Model model \u003d new ModelManager(getTypicalStudentRecord(), new UserPrefs());","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"    public void parse_validName_returnsDeleteCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"        Name studentNameToDelete \u003d studentToDelete.getStudentName();","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"        assertParseSuccess(parser, \" nm/Alice Pauline\",","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"jeromepui"},"content":"                new DeleteCommand(studentNameToDelete, new NamePredicate(studentNameToDelete)));","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"    public void parse_validId_returnsDeleteCommand() {","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"        Id studentIdToDelete \u003d studentToDelete.getId();","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"        assertParseSuccess(parser, \" id/123A\",","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"                new DeleteCommand(studentIdToDelete, new IdPredicate(studentIdToDelete)));","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jeromepui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"    public void parse_invalidName_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"jeromepui"},"content":"        Name studentNameToDelete \u003d studentToDelete.getStudentName();","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"        assertParseFailure(parser, \" nm/\", Messages.MESSAGE_INVALID_STUDENT_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"jeromepui"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"jeromepui"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"jeromepui"},"content":"    public void parse_invalidId_throwsParseException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"        Student studentToDelete \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"        Id studentIdToDelete \u003d studentToDelete.getId();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"        assertParseFailure(parser, \" id/123\", Messages.MESSAGE_INVALID_STUDENT_ID);","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"jeromepui":40,"-":22}},{"path":"src/test/java/seedu/classify/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.CLASS_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_CLASS_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_EXAM_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_ID_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.INVALID_STUDENT_NAME_DESC;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.TAG_DESC_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.TAG_DESC_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_CLASS_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    private static final String EXAM_EMPTY \u003d \" \" + PREFIX_EXAM;","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, VALID_STUDENT_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"-5\" + STUDENT_NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"0\" + STUDENT_NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ID_DESC, Id.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_CLASS_DESC, Class.MESSAGE_CONSTRAINTS); // invalid class","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EXAM_DESC, Exam.MESSAGE_SCORE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + ID_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_EXAM_2 + TAG_DESC_EXAM_1 + EXAM_EMPTY, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_EXAM_2 + EXAM_EMPTY + TAG_DESC_EXAM_1, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + EXAM_EMPTY + TAG_DESC_EXAM_2 + TAG_DESC_EXAM_1, Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_NAME_DESC + INVALID_ID_DESC","lastModifiedDate":"2022-10-10"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"                        + VALID_EMAIL_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_EXAM_1","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"                + ID_DESC_AMY + EMAIL_DESC_AMY + STUDENT_NAME_DESC_AMY + CLASS_DESC_AMY + TAG_DESC_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withStudentName(VALID_STUDENT_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"linuschancs"},"content":"                .withPhone(VALID_PHONE_BOB).withId(VALID_ID_AMY).withClassName(VALID_CLASS_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"                .withEmail(VALID_EMAIL_AMY).withExams(VALID_EXAM_1, VALID_EXAM_2).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + ID_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"                .withId(VALID_ID_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"danielk0k"},"content":"        String userInput \u003d targetIndex.getOneBased() + STUDENT_NAME_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":145,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder()","lastModifiedDate":"2022-10-10"},{"lineNumber":146,"author":{"gitId":"danielk0k"},"content":"                .withStudentName(VALID_STUDENT_NAME_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"danielk0k"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"linuschancs"},"content":"        // class","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"linuschancs"},"content":"        userInput \u003d targetIndex.getOneBased() + CLASS_DESC_AMY;","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"linuschancs"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withClassName(VALID_CLASS_AMY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"linuschancs"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"danielk0k"},"content":"        // id","lastModifiedDate":"2022-10-20"},{"lineNumber":163,"author":{"gitId":"danielk0k"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_AMY;","lastModifiedDate":"2022-10-09"},{"lineNumber":164,"author":{"gitId":"danielk0k"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withId(VALID_ID_AMY).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"danielk0k"},"content":"        // email","lastModifiedDate":"2022-10-20"},{"lineNumber":169,"author":{"gitId":"linuschancs"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"linuschancs"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"danielk0k"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":176,"author":{"gitId":"danielk0k"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withExams(VALID_EXAM_2).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"linuschancs"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY + ID_DESC_AMY","lastModifiedDate":"2022-10-19"},{"lineNumber":185,"author":{"gitId":"danielk0k"},"content":"                + TAG_DESC_EXAM_2 + PHONE_DESC_AMY + EMAIL_DESC_AMY + ID_DESC_AMY + TAG_DESC_EXAM_2","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"danielk0k"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ID_DESC_BOB + TAG_DESC_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":189,"author":{"gitId":"danielk0k"},"content":"                .withId(VALID_ID_BOB).withEmail(VALID_EMAIL_BOB).withExams(VALID_EXAM_2, VALID_EXAM_1)","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"linuschancs"},"content":"        userInput \u003d targetIndex.getOneBased() + ID_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":208,"author":{"gitId":"danielk0k"},"content":"        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(VALID_PHONE_BOB).withId(VALID_ID_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":209,"author":{"gitId":"linuschancs"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"danielk0k"},"content":"        String userInput \u003d targetIndex.getOneBased() + EXAM_EMPTY;","lastModifiedDate":"2022-10-20"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"danielk0k"},"content":"        EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withExams().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"jeromepui":37,"-":128,"danielk0k":44,"linuschancs":15}},{"path":"src/test/java/seedu/classify/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.FindCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.IdPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"minjiunn"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"minjiunn"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"minjiunn"},"content":"    public void parse_validNameArgs_returnsViewCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-17"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"        assertParseSuccess(parser, \" nm/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"        assertParseSuccess(parser, \" nm/\\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"minjiunn"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"minjiunn"},"content":"    public void parse_validIdArgs_returnsViewCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"minjiunn"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"minjiunn"},"content":"                new FindCommand(new IdPredicate(new Id(\"123A\")));","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"        assertParseSuccess(parser, \" id/123a\", expectedFindCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"minjiunn"},"content":"        assertParseSuccess(parser, \" id/ \\t 123a \\n\", expectedFindCommand);","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"jeromepui":8,"-":20,"minjiunn":17}},{"path":"src/test/java/seedu/classify/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"    private static final String INVALID_CLASS_SPECIAL_CHARACTER \u003d \"13@2\";","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    private static final String INVALID_EMAIL_FORMAT \u003d \"example.com\";","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"    private static final String INVALID_EMAIL_CHARACTER \u003d \"example@@example.com\";","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    private static final String VALID_CLASS \u003d \"CLASS1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    private static final String VALID_TAG_1 \u003d \"CA1 90\";","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    private static final String VALID_TAG_2 \u003d \"CA2 80\";","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"    public void parseClass_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"linuschancs"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseClass((String) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"linuschancs"},"content":"    public void parseClass_blank_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"linuschancs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClass(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"linuschancs"},"content":"    public void parseClass_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"linuschancs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseClass(INVALID_CLASS_SPECIAL_CHARACTER));","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"linuschancs"},"content":"    public void parseClass_validValueWithoutWhitespace_returnsClassName() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"linuschancs"},"content":"        Class expectedClassName \u003d new Class(VALID_CLASS);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"linuschancs"},"content":"        assertEquals(expectedClassName, ParserUtil.parseClass(VALID_CLASS));","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"linuschancs"},"content":"    public void parseClass_validValueWithWhitespace_returnsTrimmedClassName() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"linuschancs"},"content":"        String classNameWithWhitespace \u003d WHITESPACE + VALID_CLASS + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"linuschancs"},"content":"        Class expectedClassName \u003d new Class(VALID_CLASS);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"linuschancs"},"content":"        assertEquals(expectedClassName, ParserUtil.parseClass(classNameWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"linuschancs"},"content":"    public void parseEmail_blank_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"linuschancs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(\" \"));","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"linuschancs"},"content":"    public void parseEmail_invalidValueFormat_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"linuschancs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL_FORMAT));","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"linuschancs"},"content":"    public void parseEmail_invalidValueSpecialCharacter_throwsParseException() {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"linuschancs"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL_CHARACTER));","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExam(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":174,"author":{"gitId":"danielk0k"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExam(INVALID_TAG));","lastModifiedDate":"2022-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"danielk0k"},"content":"        Exam expectedTag \u003d new Exam(VALID_TAG_1);","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedTag, ParserUtil.parseExam(VALID_TAG_1));","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"danielk0k"},"content":"        Exam expectedTag \u003d new Exam(VALID_TAG_1);","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedTag, ParserUtil.parseExam(tagWithWhitespace));","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExams(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":197,"author":{"gitId":"danielk0k"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExams(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2022-10-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"danielk0k"},"content":"        assertTrue(ParserUtil.parseExams(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"danielk0k"},"content":"        Set\u003cExam\u003e actualTagSet \u003d ParserUtil.parseExams(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2022-10-20"},{"lineNumber":208,"author":{"gitId":"danielk0k"},"content":"        Set\u003cExam\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Exam(VALID_TAG_1), new Exam(VALID_TAG_2)));","lastModifiedDate":"2022-10-20"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"jeromepui":9,"-":151,"danielk0k":14,"linuschancs":38}},{"path":"src/test/java/seedu/classify/logic/parser/StudentRecordParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.AddStudCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.FindCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ToggleViewCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ViewAllCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ViewClassCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.ClassPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.IdPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NamePredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"public class StudentRecordParserTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"    private final StudentRecordParser parser \u003d new StudentRecordParser();","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        Student person \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        AddStudCommand command \u003d (AddStudCommand) parser.parseCommand(StudentUtil.getAddCommand(person));","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        assertEquals(new AddStudCommand(person), command);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"        Id studentId \u003d student.getId();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"        Name studentName \u003d student.getStudentName();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand idCommand \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"jeromepui"},"content":"                DeleteCommand.COMMAND_WORD + \" id/\" + studentId);","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"        assertEquals(new DeleteCommand(studentId, new IdPredicate(studentId)), idCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"jeromepui"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"jeromepui"},"content":"        DeleteCommand nameCommand \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"jeromepui"},"content":"                DeleteCommand.COMMAND_WORD + \" nm/\" + studentName);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"jeromepui"},"content":"        assertEquals(new DeleteCommand(studentName, new NamePredicate(studentName)), nameCommand);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"        Student person \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(person).build();","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"minjiunn"},"content":"    public void parseCommand_viewByName() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"minjiunn"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"minjiunn"},"content":"                FindCommand.COMMAND_WORD + \" nm/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"minjiunn"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"minjiunn"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"minjiunn"},"content":"    public void parseCommand_viewById() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"minjiunn"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" id/ 123a\");","lastModifiedDate":"2022-10-17"},{"lineNumber":97,"author":{"gitId":"minjiunn"},"content":"        assertEquals(new FindCommand(new IdPredicate(new Id(\"123A\"))), command);","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"minjiunn"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"minjiunn"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"maxtance"},"content":"    public void parseCommand_viewAll() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"maxtance"},"content":"        assertTrue(parser.parseCommand(ViewAllCommand.COMMAND_WORD) instanceof ViewAllCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":109,"author":{"gitId":"maxtance"},"content":"        assertTrue(parser.parseCommand(ViewAllCommand.COMMAND_WORD + \" 3\") instanceof ViewAllCommand);","lastModifiedDate":"2022-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"maxtance"},"content":"    public void parseCommand_toggleView() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"maxtance"},"content":"        assertTrue(parser.parseCommand(ToggleViewCommand.COMMAND_WORD) instanceof ToggleViewCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"maxtance"},"content":"        assertTrue(parser.parseCommand(ToggleViewCommand.COMMAND_WORD + \" 3\") instanceof ToggleViewCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"maxtance"},"content":"    public void parseCommand_viewClass() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"maxtance"},"content":"        ViewClassCommand viewClassCommand \u003d (ViewClassCommand) parser.parseCommand(","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"maxtance"},"content":"                ViewClassCommand.COMMAND_WORD + \" 3A\");","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"maxtance"},"content":"        assertEquals(new ViewClassCommand(new ClassPredicate(new Class(\"3A\"))), viewClassCommand);","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":124,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"jeromepui":38,"-":63,"maxtance":16,"danielk0k":7,"minjiunn":11}},{"path":"src/test/java/seedu/classify/logic/parser/ViewClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.logic.parser;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.ViewClassCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.ClassPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"public class ViewClassCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"    private ViewClassCommandParser parser \u003d new ViewClassCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    public void parse_validArgs_returnsViewClassCommand() {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        ViewClassCommand expectedViewClassCommand \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"                new ViewClassCommand(new ClassPredicate(new Class(\"CLASS1\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        assertParseSuccess(parser, \"CLASS1\", expectedViewClassCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jeromepui":7,"linuschancs":24}},{"path":"src/test/java/seedu/classify/model/FilteredStudentsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"maxtance"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"maxtance"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"maxtance"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"maxtance"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"maxtance"},"content":"class FilteredStudentsTest {","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"    private List\u003cStudent\u003e li \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"    private ObservableList\u003cStudent\u003e emptyList \u003d FXCollections.observableList(li);","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"maxtance"},"content":"    private FilteredStudents filteredStudents \u003d new FilteredStudents(new FilteredList\u003c\u003e(emptyList));","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"    public void hasConciseInfo_initial_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"        assertFalse(filteredStudents.hasConciseInfo());","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"maxtance"},"content":"    public void toggleConciseInfo_toggleTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"maxtance"},"content":"        filteredStudents.toggleConciseInfo();","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"maxtance"},"content":"        assertTrue(filteredStudents.hasConciseInfo());","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"maxtance"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"        // Same object, return true","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"maxtance"},"content":"        assertEquals(filteredStudents, filteredStudents);","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"maxtance"},"content":"        // Not an instance of FilteredStudents, return false","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"maxtance"},"content":"        assertNotEquals(filteredStudents, new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"maxtance"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"jeromepui":2,"maxtance":41}},{"path":"src/test/java/seedu/classify/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"maxtance"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"maxtance"},"content":"import java.util.List;","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"maxtance"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"maxtance"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"maxtance"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentRecordBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"        assertEquals(new StudentRecord(), new StudentRecord(modelManager.getStudentRecord()));","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        userPrefs.setStudentRecordFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        userPrefs.setStudentRecordFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"minjiunn"},"content":"    public void setStudentRecordFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setStudentRecordFilePath(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"jeromepui"},"content":"    public void setStudentRecordFilePath_validPath_setsStudentRecordFilePath() {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"        modelManager.setStudentRecordFilePath(path);","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"        assertEquals(path, modelManager.getStudentRecordFilePath());","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"jeromepui"},"content":"    public void hasPerson_personNotInStudentRecord_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        assertFalse(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"jeromepui"},"content":"    public void hasPerson_personInStudentRecord_returnsTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        modelManager.addStudent(ALICE);","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"        assertTrue(modelManager.hasStudent(ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"maxtance"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"maxtance"},"content":"    public void isStudentListInfoConcise_initial_returnsFalse() {","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"maxtance"},"content":"        assertFalse(modelManager.isStudentListInfoConcise());","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":106,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":107,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":108,"author":{"gitId":"maxtance"},"content":"    public void toggleStudentListInfoConcise_toggleTrue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"maxtance"},"content":"        modelManager.toggleStudentListInfoConcise();","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"maxtance"},"content":"        assertTrue(modelManager.isStudentListInfoConcise());","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":112,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":113,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":114,"author":{"gitId":"maxtance"},"content":"    public void getFilteredStudents_noStudentsInList() {","lastModifiedDate":"2022-10-10"},{"lineNumber":115,"author":{"gitId":"maxtance"},"content":"        List\u003cStudent\u003e li \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":116,"author":{"gitId":"maxtance"},"content":"        ObservableList\u003cStudent\u003e emptyList \u003d FXCollections.observableList(li);","lastModifiedDate":"2022-10-10"},{"lineNumber":117,"author":{"gitId":"maxtance"},"content":"        FilteredStudents filteredStudentsTest \u003d new FilteredStudents(new FilteredList\u003c\u003e(emptyList));","lastModifiedDate":"2022-10-10"},{"lineNumber":118,"author":{"gitId":"maxtance"},"content":"        FilteredStudents filteredStudents \u003d modelManager.getFilteredStudents();","lastModifiedDate":"2022-10-10"},{"lineNumber":119,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":120,"author":{"gitId":"maxtance"},"content":"        assertEquals(filteredStudents, filteredStudentsTest);","lastModifiedDate":"2022-10-10"},{"lineNumber":121,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":122,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"minjiunn"},"content":"        StudentRecord studentRecord \u003d new StudentRecordBuilder().withStudent(ALICE).withStudent(BENSON).build();","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"minjiunn"},"content":"        StudentRecord differentStudentRecord \u003d new StudentRecord();","lastModifiedDate":"2022-10-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"minjiunn"},"content":"        modelManager \u003d new ModelManager(studentRecord, userPrefs);","lastModifiedDate":"2022-10-18"},{"lineNumber":131,"author":{"gitId":"minjiunn"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(studentRecord, userPrefs);","lastModifiedDate":"2022-10-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"minjiunn"},"content":"        // different studentRecord -\u003e returns false","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"minjiunn"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentStudentRecord, userPrefs)));","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"danielk0k"},"content":"        String[] keywords \u003d ALICE.getStudentName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2022-10-09"},{"lineNumber":148,"author":{"gitId":"maxtance"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-07"},{"lineNumber":149,"author":{"gitId":"minjiunn"},"content":"        assertFalse(modelManager.equals(new ModelManager(studentRecord, userPrefs)));","lastModifiedDate":"2022-10-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"danielk0k"},"content":"        modelManager.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"danielk0k"},"content":"        differentUserPrefs.setStudentRecordFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"minjiunn"},"content":"        assertFalse(modelManager.equals(new ModelManager(studentRecord, differentUserPrefs)));","lastModifiedDate":"2022-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"jeromepui":12,"-":97,"maxtance":28,"danielk0k":13,"minjiunn":9}},{"path":"src/test/java/seedu/classify/model/StudentRecordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"public class StudentRecordTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    private final StudentRecord studentRecord \u003d new StudentRecord();","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        assertEquals(Collections.emptyList(), studentRecord.getStudentList());","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e studentRecord.resetData(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"minjiunn"},"content":"    public void resetData_withValidReadOnlyStudentRecord_replacesData() {","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        StudentRecord newData \u003d getTypicalStudentRecord();","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        studentRecord.resetData(newData);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        assertEquals(newData, studentRecord);","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withExams(VALID_EXAM_1)","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        List\u003cStudent\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        StudentRecordStub newData \u003d new StudentRecordStub(newPersons);","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e studentRecord.resetData(newData));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e studentRecord.hasStudent(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"minjiunn"},"content":"    public void hasPerson_personNotInStudentRecord_returnsFalse() {","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        assertFalse(studentRecord.hasStudent(ALICE));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"minjiunn"},"content":"    public void hasPerson_personInStudentRecord_returnsTrue() {","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"        studentRecord.addStudent(ALICE);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"        assertTrue(studentRecord.hasStudent(ALICE));","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"minjiunn"},"content":"    public void hasPerson_personWithSameIdentityFieldsInStudentRecord_returnsTrue() {","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"        studentRecord.addStudent(ALICE);","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withExams(VALID_EXAM_1)","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"        assertTrue(studentRecord.hasStudent(editedAlice));","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e studentRecord.getStudentList().remove(0));","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"minjiunn"},"content":"     * A stub ReadOnlyStudentrecord whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"    private static class StudentRecordStub implements ReadOnlyStudentRecord {","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"        private final ObservableList\u003cStudent\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"        StudentRecordStub(Collection\u003cStudent\u003e persons) {","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"jeromepui":8,"-":65,"danielk0k":24,"minjiunn":5}},{"path":"src/test/java/seedu/classify/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    public void setStudentRecordFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setStudentRecordFilePath(null));","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"maxtance"},"content":"    public void equals() {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"maxtance"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"maxtance"},"content":"        UserPrefs otherUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"maxtance"},"content":"        // Same object","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"maxtance"},"content":"        assertEquals(userPrefs, userPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"maxtance"},"content":"        // Not an instance of UserPrefs","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"maxtance"},"content":"        assertNotEquals(userPrefs, new Object());","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"maxtance"},"content":"        // Equality","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"maxtance"},"content":"        assertEquals(userPrefs, otherUserPrefs);","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"jeromepui":2,"-":17,"maxtance":16,"minjiunn":1,"danielk0k":1}},{"path":"src/test/java/seedu/classify/model/student/ClassPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"public class ClassPredicateTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate firstPredicate \u003d new ClassPredicate(new Class(\"CLASS1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate secondPredicate \u003d new ClassPredicate(new Class(\"CLASS2\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate firstPredicateCopy \u003d new ClassPredicate(new Class(\"CLASS1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"        // different class -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"    public void test_classPredicate_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"        // Match single word","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d new ClassPredicate(new Class(\"4A1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"linuschancs"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassName(\"4A1\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"        // Match multiple word","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"linuschancs"},"content":"        predicate \u003d new ClassPredicate(new Class(\"CLASS 4A1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassName(\"CLASS 4A1\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"linuschancs"},"content":"        // Match numbers","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"        predicate \u003d new ClassPredicate(new Class(\"12345\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"linuschancs"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassName(\"12345\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"        predicate \u003d new ClassPredicate(new Class(\"4A1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"        assertTrue(predicate.test(new StudentBuilder().withClassName(\"4a1\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"    public void test_classPredicate_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        ClassPredicate predicate \u003d new ClassPredicate(new Class(\"CLASS21\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"        // Part of keyword matches","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"linuschancs"},"content":"        predicate \u003d new ClassPredicate(new Class(\"17S68\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"                .withId(\"901B\").withEmail(\"alice@gmail.com\").withClassName(\"17S\").build()));","lastModifiedDate":"2022-10-19"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jeromepui":2,"linuschancs":63}},{"path":"src/test/java/seedu/classify/model/student/ClassTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"linuschancs"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"linuschancs"},"content":"public class ClassTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"linuschancs"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"linuschancs"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Class(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"linuschancs"},"content":"    public void constructor_invalidClass_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"linuschancs"},"content":"        String invalidClass \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Class(invalidClass));","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    public void isValidClass() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"        // null address","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        assertThrows(NullPointerException.class, () -\u003e Class.isValidClassName(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"        assertFalse(Class.isValidClassName(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"linuschancs"},"content":"        assertFalse(Class.isValidClassName(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"        // valid addresses","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"        assertTrue(Class.isValidClassName(\"A\")); // one character","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"linuschancs"},"content":"        assertTrue(Class.isValidClassName(\"20A\")); // character and number","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"        assertTrue(Class.isValidClassName(\"Loyalty 9\")); // word and number","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"linuschancs"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"jeromepui":2,"linuschancs":34}},{"path":"src/test/java/seedu/classify/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"maxtance"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        String invalidEmail \u003d \"@@\";","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    public void constructor_noParam_storeEmptyString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        Email email \u003d new Email();","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        assertEquals(email.value, \"\");","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":75,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"maxtance"},"content":"    @Test","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"maxtance"},"content":"    public void getStringValue() {","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"maxtance"},"content":"        String emailString \u003d \"johndoe@example.com\";","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"maxtance"},"content":"        Email email \u003d new Email(emailString);","lastModifiedDate":"2022-10-10"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"        assertEquals(email.toString(), emailString.toUpperCase());","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"maxtance"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"maxtance"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jeromepui":2,"-":65,"maxtance":8,"linuschancs":8}},{"path":"src/test/java/seedu/classify/model/student/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":"public class IdTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Id(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"        String invalidId \u003d \"\";","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Id(invalidId));","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public void isValidId() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"        // null phone number","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e Id.isValidId(null));","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        // invalid phone numbers","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        assertFalse(Id.isValidId(\"\")); // empty string","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"        assertFalse(Id.isValidId(\" \")); // spaces only","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"        assertFalse(Id.isValidId(\"91\")); // less than 3 numbers","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"        assertFalse(Id.isValidId(\"phone\")); // non-numeric","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        assertFalse(Id.isValidId(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"        assertFalse(Id.isValidId(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"        // valid phone numbers","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        assertTrue(Id.isValidId(\"911A\")); // exactly 3 numbers and 1 character","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"        assertTrue(Id.isValidId(\"932B\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        assertTrue(Id.isValidId(\"123C\")); // long phone numbers","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jeromepui":2,"danielk0k":38}},{"path":"src/test/java/seedu/classify/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        assertTrue(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"        // Keywords match phone, id and address, but does not match name","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"901B\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"        assertFalse(predicate.test(new StudentBuilder().withStudentName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"linuschancs"},"content":"                .withId(\"901B\").withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"jeromepui":2,"-":63,"danielk0k":9,"linuschancs":1}},{"path":"src/test/java/seedu/classify/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    public void constructor_noParam_storeEmptyString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        Name name \u003d new Name();","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        assertEquals(name.fullName, \"\");","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jeromepui":2,"-":38,"linuschancs":7}},{"path":"src/test/java/seedu/classify/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"linuschancs"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"linuschancs"},"content":"        String invalidPhone \u003d \"p\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"linuschancs"},"content":"    public void constructor_noParam_storeEmptyString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"        Phone phone \u003d new Phone();","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"linuschancs"},"content":"        assertEquals(phone.value, \"\");","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"jeromepui":2,"-":37,"linuschancs":8}},{"path":"src/test/java/seedu/classify/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_CLASS_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PARENT_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"public class StudentTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getExams().remove(0));","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"jeromepui"},"content":"    public void hasSameNameOrId() {","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"jeromepui"},"content":"        assertTrue(ALICE.hasSameNameOrId(ALICE));","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"        assertFalse(ALICE.hasSameNameOrId(null));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE)","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"                .withId(VALID_ID_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"                .withClassName(VALID_CLASS_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"                .withParentName(VALID_PARENT_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"                .withExams(VALID_EXAM_1).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"jeromepui"},"content":"        assertTrue(ALICE.hasSameNameOrId(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"jeromepui"},"content":"        // different name, different id, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"jeromepui"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"jeromepui"},"content":"                .withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"jeromepui"},"content":"        assertFalse(ALICE.hasSameNameOrId(editedAlice));","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"linuschancs"},"content":"        // name differs in case, different id, all other attributes same -\u003e returns true","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"jeromepui"},"content":"        Student editedBob \u003d new StudentBuilder(BOB).withStudentName(VALID_STUDENT_NAME_BOB.toLowerCase())","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"jeromepui"},"content":"                .withId(VALID_ID_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"        assertTrue(BOB.hasSameNameOrId(editedBob));","lastModifiedDate":"2022-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"jeromepui"},"content":"        // name has trailing spaces, different id, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        String nameWithTrailingSpaces \u003d VALID_STUDENT_NAME_BOB + \" \";","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"        editedBob \u003d new StudentBuilder(BOB).withStudentName(nameWithTrailingSpaces)","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"jeromepui"},"content":"                .withId(VALID_ID_AMY).build();","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"jeromepui"},"content":"        assertFalse(BOB.hasSameNameOrId(editedBob));","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withStudentName(VALID_STUDENT_NAME_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withId(VALID_ID_BOB).build();","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"linuschancs"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"linuschancs"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2022-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withExams(VALID_EXAM_1).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jeromepui":26,"-":55,"danielk0k":15,"linuschancs":6}},{"path":"src/test/java/seedu/classify/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.student;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_1;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.StudentBuilder;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    private final UniqueStudentList uniquePersonList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withExams(VALID_EXAM_1)","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"        expectedUniqueStudentList.add(ALICE);","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withExams(VALID_EXAM_1)","lastModifiedDate":"2022-10-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"        assertThrows(StudentNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"danielk0k"},"content":"    public void setStudents_uniquePersonList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"danielk0k"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":139,"author":{"gitId":"danielk0k"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-09"},{"lineNumber":140,"author":{"gitId":"danielk0k"},"content":"        uniquePersonList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2022-10-09"},{"lineNumber":141,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2022-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"danielk0k"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":146,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2022-10-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"danielk0k"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"danielk0k"},"content":"        List\u003cStudent\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2022-10-09"},{"lineNumber":153,"author":{"gitId":"danielk0k"},"content":"        uniquePersonList.setStudents(personList);","lastModifiedDate":"2022-10-09"},{"lineNumber":154,"author":{"gitId":"danielk0k"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2022-10-09"},{"lineNumber":155,"author":{"gitId":"danielk0k"},"content":"        expectedUniqueStudentList.add(BOB);","lastModifiedDate":"2022-10-09"},{"lineNumber":156,"author":{"gitId":"danielk0k"},"content":"        assertEquals(expectedUniqueStudentList, uniquePersonList);","lastModifiedDate":"2022-10-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"danielk0k"},"content":"    public void setStudents_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":161,"author":{"gitId":"danielk0k"},"content":"        List\u003cStudent\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2022-10-09"},{"lineNumber":162,"author":{"gitId":"danielk0k"},"content":"        assertThrows(DuplicateStudentException.class, () -\u003e uniquePersonList.setStudents(listWithDuplicatePersons));","lastModifiedDate":"2022-10-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"jeromepui":8,"-":124,"danielk0k":38}},{"path":"src/test/java/seedu/classify/model/tag/ExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.model.tag;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"public class ExamTest {","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Exam(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"        String invalidExam \u003d \"\";","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Exam(invalidExam));","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"        assertThrows(NullPointerException.class, () -\u003e Exam.isValidFormat(null));","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"jeromepui":2,"-":19,"danielk0k":5}},{"path":"src/test/java/seedu/classify/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.storage.JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"    private static final String INVALID_STUDENT_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    private static final String INVALID_PARENT_NAME \u003d \"John#\";","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"    private static final String INVALID_EMAIL \u003d \"rachel@@gmail.com\";","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    private static final String INVALID_ID \u003d \"21A\";","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"linuschancs"},"content":"    private static final String INVALID_CLASS \u003d \"17#21\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    private static final String VALID_STUDENT_NAME \u003d BENSON.getStudentName().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    private static final String VALID_PARENT_NAME \u003d BENSON.getParentName().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"    private static final String VALID_CLASS \u003d BENSON.getClassName().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"linuschancs"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"    private static final List\u003cJsonAdaptedExam\u003e VALID_TAGS \u003d BENSON.getExams().stream()","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"            .map(JsonAdaptedExam::new)","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(BENSON);","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    public void toModelType_invalidStudentName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":49,"author":{"gitId":"linuschancs"},"content":"                new JsonAdaptedStudent(INVALID_STUDENT_NAME, VALID_ID, VALID_CLASS,","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"linuschancs"},"content":"                        VALID_PARENT_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"    public void toModelType_nullStudentName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(null, VALID_ID, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2022-10-09"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"    public void toModelType_invalidParentName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, VALID_CLASS,","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"linuschancs"},"content":"                        INVALID_PARENT_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":68,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"    @Test","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"    public void toModelType_nullParentName_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"linuschancs"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, VALID_CLASS, null,","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":83,"author":{"gitId":"linuschancs"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"linuschancs"},"content":"                        INVALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"linuschancs"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"                null, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":100,"author":{"gitId":"linuschancs"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, INVALID_ID, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"linuschancs"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d Id.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"linuschancs"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, null, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"linuschancs"},"content":"                VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"danielk0k"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName());","lastModifiedDate":"2022-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"linuschancs"},"content":"    public void toModelType_invalidClass_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"linuschancs"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"linuschancs"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, INVALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"linuschancs"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d Class.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"linuschancs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"linuschancs"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"linuschancs"},"content":"    public void toModelType_nullClass_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"linuschancs"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, null,","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"linuschancs"},"content":"                VALID_PARENT_NAME, VALID_PHONE, VALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Class.class.getSimpleName());","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"linuschancs"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"linuschancs"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":134,"author":{"gitId":"linuschancs"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"linuschancs"},"content":"                        VALID_PHONE, INVALID_EMAIL, VALID_TAGS);","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"linuschancs"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"linuschancs"},"content":"        JsonAdaptedStudent person \u003d new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"danielk0k"},"content":"                VALID_PHONE, null, VALID_TAGS);","lastModifiedDate":"2022-10-09"},{"lineNumber":144,"author":{"gitId":"linuschancs"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"danielk0k"},"content":"        List\u003cJsonAdaptedExam\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2022-10-20"},{"lineNumber":151,"author":{"gitId":"danielk0k"},"content":"        invalidTags.add(new JsonAdaptedExam(INVALID_TAG));","lastModifiedDate":"2022-10-20"},{"lineNumber":152,"author":{"gitId":"danielk0k"},"content":"        JsonAdaptedStudent person \u003d","lastModifiedDate":"2022-10-07"},{"lineNumber":153,"author":{"gitId":"linuschancs"},"content":"                new JsonAdaptedStudent(VALID_STUDENT_NAME, VALID_ID, VALID_CLASS, VALID_PARENT_NAME,","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"linuschancs"},"content":"                        VALID_PHONE, VALID_EMAIL, invalidTags);","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jeromepui":10,"-":65,"danielk0k":36,"linuschancs":47}},{"path":"src/test/java/seedu/classify/storage/JsonSerializableStudentRecordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.util.JsonUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.testutil.TypicalStudents;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"public class JsonSerializableStudentRecordTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"minjiunn"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableStudentRecordTest\");","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"minjiunn"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStudentRecord.json\");","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"minjiunn"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentRecord.json\");","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"minjiunn"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentRecord.json\");","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"        JsonSerializableStudentRecord dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"                JsonSerializableStudentRecord.class).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":27,"author":{"gitId":"minjiunn"},"content":"        StudentRecord studentRecordFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"minjiunn"},"content":"        StudentRecord typicalStudentRecord \u003d TypicalStudents.getTypicalStudentRecord();","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"        assertEquals(studentRecordFromFile, typicalStudentRecord);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        JsonSerializableStudentRecord dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-07"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"                JsonSerializableStudentRecord.class).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        JsonSerializableStudentRecord dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"                JsonSerializableStudentRecord.class).get();","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableStudentRecord.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jeromepui":6,"-":26,"danielk0k":8,"minjiunn":7}},{"path":"src/test/java/seedu/classify/storage/JsonStudentRecordStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.HOON;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.IDA;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"public class JsonStudentRecordStorageTest {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"minjiunn"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonStudentRecordStorageTest\");","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"minjiunn"},"content":"    public void readStudentRecord_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"minjiunn"},"content":"        assertThrows(NullPointerException.class, () -\u003e readStudentRecord(null));","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"minjiunn"},"content":"    private java.util.Optional\u003cReadOnlyStudentRecord\u003e readStudentRecord(String filePath) throws Exception {","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"jeromepui"},"content":"        return new JsonStudentRecordStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"jeromepui"},"content":"                .readStudentRecord(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"minjiunn"},"content":"        assertFalse(readStudentRecord(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"minjiunn"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudentRecord(\"notJsonFormatStudentRecord.json\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"minjiunn"},"content":"    public void readStudentRecord_invalidStudentRecord_throwDataConversionException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"minjiunn"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudentRecord(\"invalidStudentRecord.json\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"minjiunn"},"content":"    public void readStudentRecord_invalidAndValidPersonStudentRecord_throwDataConversionException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"minjiunn"},"content":"        assertThrows(DataConversionException.class, () -\u003e readStudentRecord(\"invalidAndValidStudentRecord.json\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"minjiunn"},"content":"    public void readAndSaveStudentRecord_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"minjiunn"},"content":"        Path filePath \u003d testFolder.resolve(\"TempStudentRecord.json\");","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"        StudentRecord original \u003d getTypicalStudentRecord();","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"minjiunn"},"content":"        JsonStudentRecordStorage jsonStudentRecordStorage \u003d new JsonStudentRecordStorage(filePath);","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"minjiunn"},"content":"        jsonStudentRecordStorage.saveStudentRecord(original, filePath);","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"minjiunn"},"content":"        ReadOnlyStudentRecord readBack \u003d jsonStudentRecordStorage.readStudentRecord(filePath).get();","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"        assertEquals(original, new StudentRecord(readBack));","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"        original.addStudent(HOON);","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"minjiunn"},"content":"        jsonStudentRecordStorage.saveStudentRecord(original, filePath);","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"minjiunn"},"content":"        readBack \u003d jsonStudentRecordStorage.readStudentRecord(filePath).get();","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"        assertEquals(original, new StudentRecord(readBack));","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"        original.addStudent(IDA);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"minjiunn"},"content":"        jsonStudentRecordStorage.saveStudentRecord(original); // file path not specified","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"minjiunn"},"content":"        readBack \u003d jsonStudentRecordStorage.readStudentRecord().get(); // file path not specified","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"        assertEquals(original, new StudentRecord(readBack));","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"minjiunn"},"content":"    public void saveStudentRecord_nullStudentRecord_throwsNullPointerException() {","lastModifiedDate":"2022-10-18"},{"lineNumber":92,"author":{"gitId":"minjiunn"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStudentRecord(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"linuschancs"},"content":"     * Saves {@code studentRecord} at the specified {@code filePath}.","lastModifiedDate":"2022-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"jeromepui"},"content":"    private void saveStudentRecord(ReadOnlyStudentRecord studentRecord, String filePath) {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"jeromepui"},"content":"            new JsonStudentRecordStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"jeromepui"},"content":"                    .saveStudentRecord(studentRecord, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"jeromepui"},"content":"    public void saveStudentRecord_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-25"},{"lineNumber":109,"author":{"gitId":"minjiunn"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveStudentRecord(new StudentRecord(), null));","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"jeromepui":15,"-":66,"danielk0k":7,"minjiunn":22,"linuschancs":1}},{"path":"src/test/java/seedu/classify/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"minjiunn"},"content":"        userPrefs.setStudentRecordFilePath(Paths.get(\"data/classify.json\"));","lastModifiedDate":"2022-10-18"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"        // TODO: unsure why without the data folder test cases fail","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"jeromepui":5,"-":117,"minjiunn":1,"danielk0k":1}},{"path":"src/test/java/seedu/classify/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.storage;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.TypicalStudents.getTypicalStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.GuiSettings;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.ReadOnlyStudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.UserPrefs;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"jeromepui"},"content":"        JsonStudentRecordStorage studentRecordStorage \u003d new JsonStudentRecordStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"jeromepui"},"content":"        storageManager \u003d new StorageManager(studentRecordStorage, userPrefsStorage);","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"jeromepui"},"content":"    public void studentRecordReadSave() throws Exception {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"jeromepui"},"content":"         * {@link JsonStudentrecordStorage} class.","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"jeromepui"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonStudentRecordStorageTest} class.","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        StudentRecord original \u003d getTypicalStudentRecord();","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"jeromepui"},"content":"        storageManager.saveStudentRecord(original);","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"jeromepui"},"content":"        ReadOnlyStudentRecord retrieved \u003d storageManager.readStudentRecord().get();","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        assertEquals(original, new StudentRecord(retrieved));","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"jeromepui"},"content":"    public void getStudentRecordFilePath() {","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"jeromepui"},"content":"        assertNotNull(storageManager.getStudentRecordFilePath());","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":15,"-":51,"danielk0k":2}},{"path":"src/test/java/seedu/classify/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"jeromepui":1,"-":33}},{"path":"src/test/java/seedu/classify/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    private EditStudentDescriptor descriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        this.descriptor \u003d new EditStudentDescriptor(descriptor);","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"        descriptor \u003d new EditStudentDescriptor();","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        descriptor.setStudentName(student.getStudentName());","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"        descriptor.setClassName(student.getClassName());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        descriptor.setParentName(student.getParentName());","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        descriptor.setId(student.getId());","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"linuschancs"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        descriptor.setExams(student.getExams());","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"     * Sets the student {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder withStudentName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"        descriptor.setStudentName(new Name(name));","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"linuschancs"},"content":"     * Sets the student {@code Class} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"    public EditStudentDescriptorBuilder withClassName(String name) {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        descriptor.setClassName(new Class(name));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"linuschancs"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"linuschancs"},"content":"     * Sets the parent {@code ParentName} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder withParentName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"linuschancs"},"content":"        descriptor.setParentName(new Name(name));","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"     * Sets the {@code Id} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder withId(String id) {","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"        descriptor.setId(new Id(id));","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"linuschancs"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"linuschancs"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"linuschancs"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"     * Parses the {@code exams} into a {@code Set\u003cExam\u003e} and set it to the {@code EditStudentDescriptor}","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"     * that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptorBuilder withExams(String... exams) {","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"        Set\u003cExam\u003e examSet \u003d Stream.of(exams).map(Exam::new).collect(Collectors.toSet());","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"        descriptor.setExams(examSet);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"    public EditStudentDescriptor build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"        return descriptor;","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jeromepui":8,"danielk0k":83,"linuschancs":15}},{"path":"src/test/java/seedu/classify/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":1,"-":71}},{"path":"src/test/java/seedu/classify/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"danielk0k"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-09"},{"lineNumber":4,"author":{"gitId":"danielk0k"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Class;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Email;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Id;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Name;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Phone;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"public class StudentBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"    public static final String DEFAULT_STUDENT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"    public static final String DEFAULT_ID \u003d \"123Z\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"linuschancs"},"content":"    public static final String DEFAULT_CLASS \u003d \"1A\";","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    public static final String DEFAULT_PARENT_NAME \u003d \"John Bee\";","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"linuschancs"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amybee@gmail.com\";","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    public static final String DEFAULT_EXAM_1 \u003d \"CA2 90\";","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"    public static final String DEFAULT_EXAM_2 \u003d \"SA1 60\";","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    private Name studentName;","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    private Id id;","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"linuschancs"},"content":"    private Class className;","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"    private Name parentName;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    private Phone phone;","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"    private Email email;","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"    private Set\u003cExam\u003e exams;","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"danielk0k"},"content":"    public StudentBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        studentName \u003d new Name(DEFAULT_STUDENT_NAME);","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"        className \u003d new Class(DEFAULT_CLASS);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"linuschancs"},"content":"        parentName \u003d new Name(DEFAULT_PARENT_NAME);","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"linuschancs"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"        exams \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"        studentName \u003d studentToCopy.getStudentName();","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        id \u003d studentToCopy.getId();","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"linuschancs"},"content":"        className \u003d studentToCopy.getClassName();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"        parentName \u003d studentToCopy.getParentName();","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2022-10-09"},{"lineNumber":59,"author":{"gitId":"linuschancs"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"        exams \u003d new HashSet\u003c\u003e(studentToCopy.getExams());","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":64,"author":{"gitId":"linuschancs"},"content":"     * Sets the student name {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"    public StudentBuilder withStudentName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"        this.studentName \u003d new Name(name);","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"linuschancs"},"content":"     * Sets the parent name {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"    public StudentBuilder withParentName(String name) {","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"linuschancs"},"content":"        if (name \u003d\u003d \"\") {","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"linuschancs"},"content":"            this.parentName \u003d new Name();","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"linuschancs"},"content":"            this.parentName \u003d new Name(name);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"     * Parses the {@code exams} into a {@code Set\u003cExam\u003e} and set it to the {@code Student} that we are building.","lastModifiedDate":"2022-10-20"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"danielk0k"},"content":"    public StudentBuilder withExams(String ... exams) {","lastModifiedDate":"2022-10-20"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"        this.exams.addAll(SampleDataUtil.getExamSet(exams));","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"linuschancs"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":94,"author":{"gitId":"linuschancs"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"linuschancs"},"content":"        if (email \u003d\u003d \"\") {","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"linuschancs"},"content":"            this.email \u003d new Email();","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"linuschancs"},"content":"            this.email \u003d new Email(email);","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2022-10-09"},{"lineNumber":107,"author":{"gitId":"linuschancs"},"content":"        if (phone \u003d\u003d \"\") {","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"linuschancs"},"content":"            this.phone \u003d new Phone();","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"linuschancs"},"content":"        } else {","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"danielk0k"},"content":"            this.phone \u003d new Phone(phone);","lastModifiedDate":"2022-10-09"},{"lineNumber":111,"author":{"gitId":"linuschancs"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":115,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"     * Sets the {@code Id} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"    public StudentBuilder withId(String id) {","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"linuschancs"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"linuschancs"},"content":"     * Sets the class {@code Class} of the {@code Student} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"linuschancs"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"linuschancs"},"content":"    public StudentBuilder withClassName(String className) {","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"linuschancs"},"content":"        this.className \u003d new Class(className);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"linuschancs"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"linuschancs"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"danielk0k"},"content":"    public Student build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"        return new Student(studentName, id, className, parentName, phone, email, exams);","lastModifiedDate":"2022-10-20"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jeromepui":9,"danielk0k":90,"linuschancs":35}},{"path":"src/test/java/seedu/classify/testutil/StudentRecordBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":6,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":" * A utility class to help with building StudentRecord objects.","lastModifiedDate":"2022-10-09"},{"lineNumber":8,"author":{"gitId":"danielk0k"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-09"},{"lineNumber":9,"author":{"gitId":"danielk0k"},"content":" *     {@code StudentRecord sr \u003d new StudentRecord().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-09"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"public class StudentRecordBuilder {","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"danielk0k"},"content":"    private StudentRecord studentRecord;","lastModifiedDate":"2022-10-09"},{"lineNumber":14,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":15,"author":{"gitId":"danielk0k"},"content":"    public StudentRecordBuilder() {","lastModifiedDate":"2022-10-09"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"        studentRecord \u003d new StudentRecord();","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"    public StudentRecordBuilder(StudentRecord studentRecord) {","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"        this.studentRecord \u003d studentRecord;","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     * Adds a new {@code Student} to the {@code StudentRecord} that we are building.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    public StudentRecordBuilder withStudent(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        studentRecord.addStudent(student);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"        return this;","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"    public StudentRecord build() {","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"        return studentRecord;","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jeromepui":3,"danielk0k":31}},{"path":"src/test/java/seedu/classify/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_EXAM;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PARENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.parser.CliSyntax.PREFIX_STUDENT_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":11,"author":{"gitId":"danielk0k"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-09"},{"lineNumber":12,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.AddStudCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.logic.commands.EditCommand.EditStudentDescriptor;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"import seedu.classify.model.tag.Exam;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":" * A utility class for Student.","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"danielk0k"},"content":"public class StudentUtil {","lastModifiedDate":"2022-10-09"},{"lineNumber":22,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":"    public static String getAddCommand(Student person) {","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"        return AddStudCommand.COMMAND_WORD + \" \" + getStudentDetails(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"danielk0k"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"        sb.append(PREFIX_STUDENT_NAME + student.getStudentName().fullName + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"        sb.append(PREFIX_ID + student.getId().value + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"linuschancs"},"content":"        sb.append(PREFIX_CLASS + student.getClassName().className + \" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"        sb.append(PREFIX_PARENT_NAME + student.getParentName().fullName + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        sb.append(PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"        sb.append(PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"        student.getExams().stream().forEach(","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"            s -\u003e sb.append(PREFIX_EXAM + s.toString() + \" \")","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"        );","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"danielk0k"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2022-10-09"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"    public static String getEditStudentDescriptorDetails(EditStudentDescriptor descriptor) {","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"danielk0k"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-09"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"        descriptor.getStudentName().ifPresent(name -\u003e sb.append(PREFIX_STUDENT_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"linuschancs"},"content":"        descriptor.getClassName().ifPresent(name -\u003e sb.append(PREFIX_CLASS).append(name.className).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"        descriptor.getId().ifPresent(id -\u003e sb.append(PREFIX_ID).append(id.value).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"danielk0k"},"content":"        descriptor.getParentName().ifPresent(name -\u003e sb.append(PREFIX_PARENT_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"linuschancs"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2022-10-19"},{"lineNumber":58,"author":{"gitId":"danielk0k"},"content":"        if (descriptor.getExams().isPresent()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"            Set\u003cExam\u003e tags \u003d descriptor.getExams().get();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"                sb.append(PREFIX_EXAM);","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"            } else {","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"danielk0k"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_EXAM).append(s.toString()).append(\" \"));","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"            }","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"danielk0k"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-09"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jeromepui":10,"danielk0k":54,"linuschancs":4}},{"path":"src/test/java/seedu/classify/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"danielk0k"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2022-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jeromepui":4,"-":44,"danielk0k":7}},{"path":"src/test/java/seedu/classify/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.commons.core.index.Index;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"jeromepui":2,"-":10}},{"path":"src/test/java/seedu/classify/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.testutil;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_CLASS_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_CLASS_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"danielk0k"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_EXAM_2;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PARENT_NAME_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PARENT_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_AMY;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.logic.commands.CommandTestUtil.VALID_STUDENT_NAME_BOB;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":17,"author":{"gitId":"danielk0k"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-09"},{"lineNumber":18,"author":{"gitId":"danielk0k"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-09"},{"lineNumber":19,"author":{"gitId":"danielk0k"},"content":"import java.util.List;","lastModifiedDate":"2022-10-09"},{"lineNumber":20,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":21,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.StudentRecord;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.model.student.Student;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":24,"author":{"gitId":"danielk0k"},"content":"/**","lastModifiedDate":"2022-10-09"},{"lineNumber":25,"author":{"gitId":"danielk0k"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2022-10-09"},{"lineNumber":26,"author":{"gitId":"danielk0k"},"content":" */","lastModifiedDate":"2022-10-09"},{"lineNumber":27,"author":{"gitId":"danielk0k"},"content":"public class TypicalStudents {","lastModifiedDate":"2022-10-09"},{"lineNumber":28,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":29,"author":{"gitId":"danielk0k"},"content":"    public static final Student ALICE \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":30,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Alice Pauline\")","lastModifiedDate":"2022-10-09"},{"lineNumber":31,"author":{"gitId":"danielk0k"},"content":"            .withId(\"123A\")","lastModifiedDate":"2022-10-09"},{"lineNumber":32,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"4A1\")","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"May Pauline\")","lastModifiedDate":"2022-10-09"},{"lineNumber":34,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"alice.pauline@gmail.com\")","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2022-10-09"},{"lineNumber":36,"author":{"gitId":"danielk0k"},"content":"            .withExams(\"CA2 90\", \"SA1 60\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"danielk0k"},"content":"    public static final Student BENSON \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":38,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Benson Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":39,"author":{"gitId":"danielk0k"},"content":"            .withId(\"345B\")","lastModifiedDate":"2022-10-09"},{"lineNumber":40,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"4A2\")","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"Johnson Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":42,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2022-10-09"},{"lineNumber":43,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"bensonmeier@gmail.com\")","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"danielk0k"},"content":"            .withExams(\"CA1 90\", \"SA2 60\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"danielk0k"},"content":"    public static final Student CARL \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":46,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Carl Kurz\")","lastModifiedDate":"2022-10-09"},{"lineNumber":47,"author":{"gitId":"danielk0k"},"content":"            .withId(\"567F\")","lastModifiedDate":"2022-10-09"},{"lineNumber":48,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"4B1\")","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"Kenn Kurz\")","lastModifiedDate":"2022-10-09"},{"lineNumber":50,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2022-10-09"},{"lineNumber":51,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"carl@hotmail.com\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"danielk0k"},"content":"    public static final Student DANIEL \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":53,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Daniel Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":54,"author":{"gitId":"danielk0k"},"content":"            .withId(\"678D\")","lastModifiedDate":"2022-10-09"},{"lineNumber":55,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"3A1\")","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"Benn Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":57,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2022-10-09"},{"lineNumber":58,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"daniel.meier@gmail.com\")","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"danielk0k"},"content":"            .withExams(\"CA1 50\", \"CA2 70\", \"SA1 90\", \"SA2 60\").build();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"danielk0k"},"content":"    public static final Student ELLE \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":61,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Elle Meyer\")","lastModifiedDate":"2022-10-09"},{"lineNumber":62,"author":{"gitId":"danielk0k"},"content":"            .withId(\"890A\")","lastModifiedDate":"2022-10-09"},{"lineNumber":63,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"3A1\")","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"James Meyer\")","lastModifiedDate":"2022-10-09"},{"lineNumber":65,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2022-10-09"},{"lineNumber":66,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"elle@gmail.com\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":67,"author":{"gitId":"danielk0k"},"content":"    public static final Student FIONA \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":68,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Fiona Kunz\")","lastModifiedDate":"2022-10-09"},{"lineNumber":69,"author":{"gitId":"danielk0k"},"content":"            .withId(\"789C\")","lastModifiedDate":"2022-10-09"},{"lineNumber":70,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"Charity 1\")","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"Gordon Kunz\")","lastModifiedDate":"2022-10-09"},{"lineNumber":72,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2022-10-09"},{"lineNumber":73,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"kunz.fiona@gmail.com\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"danielk0k"},"content":"    public static final Student GEORGE \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":75,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"George Best\")","lastModifiedDate":"2022-10-09"},{"lineNumber":76,"author":{"gitId":"danielk0k"},"content":"            .withId(\"912B\")","lastModifiedDate":"2022-10-09"},{"lineNumber":77,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"17S68\")","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"Henry Best\")","lastModifiedDate":"2022-10-09"},{"lineNumber":79,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2022-10-09"},{"lineNumber":80,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"georgebest@example.com\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":82,"author":{"gitId":"danielk0k"},"content":"    // Manually added","lastModifiedDate":"2022-10-09"},{"lineNumber":83,"author":{"gitId":"danielk0k"},"content":"    public static final Student HOON \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":84,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Hoon Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":85,"author":{"gitId":"danielk0k"},"content":"            .withId(\"562B\")","lastModifiedDate":"2022-10-09"},{"lineNumber":86,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"4O1\")","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"Denise Meier\")","lastModifiedDate":"2022-10-09"},{"lineNumber":88,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2022-10-09"},{"lineNumber":89,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"hoon@yahoo.com\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"danielk0k"},"content":"    public static final Student IDA \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":91,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(\"Ida Mueller\")","lastModifiedDate":"2022-10-09"},{"lineNumber":92,"author":{"gitId":"danielk0k"},"content":"            .withId(\"784C\")","lastModifiedDate":"2022-10-09"},{"lineNumber":93,"author":{"gitId":"linuschancs"},"content":"            .withClassName(\"4O1\")","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"danielk0k"},"content":"            .withParentName(\"Nathan Mueller\")","lastModifiedDate":"2022-10-09"},{"lineNumber":95,"author":{"gitId":"danielk0k"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2022-10-09"},{"lineNumber":96,"author":{"gitId":"linuschancs"},"content":"            .withEmail(\"idamueller@gmail.com\").build();","lastModifiedDate":"2022-10-19"},{"lineNumber":97,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":98,"author":{"gitId":"danielk0k"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-09"},{"lineNumber":99,"author":{"gitId":"danielk0k"},"content":"    public static final Student AMY \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":100,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(VALID_STUDENT_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":101,"author":{"gitId":"danielk0k"},"content":"            .withId(VALID_ID_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":102,"author":{"gitId":"linuschancs"},"content":"            .withClassName(VALID_CLASS_AMY)","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"danielk0k"},"content":"            .withParentName(VALID_PARENT_NAME_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":104,"author":{"gitId":"danielk0k"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2022-10-09"},{"lineNumber":105,"author":{"gitId":"linuschancs"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2022-10-19"},{"lineNumber":106,"author":{"gitId":"danielk0k"},"content":"            .withExams().build();","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"danielk0k"},"content":"    public static final Student BOB \u003d new StudentBuilder()","lastModifiedDate":"2022-10-09"},{"lineNumber":108,"author":{"gitId":"danielk0k"},"content":"            .withStudentName(VALID_STUDENT_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":109,"author":{"gitId":"danielk0k"},"content":"            .withId(VALID_ID_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":110,"author":{"gitId":"linuschancs"},"content":"            .withClassName(VALID_CLASS_BOB)","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"danielk0k"},"content":"            .withParentName(VALID_PARENT_NAME_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":112,"author":{"gitId":"danielk0k"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2022-10-09"},{"lineNumber":113,"author":{"gitId":"linuschancs"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2022-10-19"},{"lineNumber":114,"author":{"gitId":"danielk0k"},"content":"            .withExams(VALID_EXAM_2).build();","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":116,"author":{"gitId":"danielk0k"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-09"},{"lineNumber":117,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":118,"author":{"gitId":"danielk0k"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2022-10-09"},{"lineNumber":119,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":120,"author":{"gitId":"danielk0k"},"content":"    /**","lastModifiedDate":"2022-10-09"},{"lineNumber":121,"author":{"gitId":"minjiunn"},"content":"     * Returns a {@code StudentRecord} with all the typical persons.","lastModifiedDate":"2022-10-18"},{"lineNumber":122,"author":{"gitId":"danielk0k"},"content":"     */","lastModifiedDate":"2022-10-09"},{"lineNumber":123,"author":{"gitId":"danielk0k"},"content":"    public static StudentRecord getTypicalStudentRecord() {","lastModifiedDate":"2022-10-09"},{"lineNumber":124,"author":{"gitId":"danielk0k"},"content":"        StudentRecord sr \u003d new StudentRecord();","lastModifiedDate":"2022-10-09"},{"lineNumber":125,"author":{"gitId":"danielk0k"},"content":"        for (Student person : getTypicalStudent()) {","lastModifiedDate":"2022-10-09"},{"lineNumber":126,"author":{"gitId":"danielk0k"},"content":"            sr.addStudent(person);","lastModifiedDate":"2022-10-09"},{"lineNumber":127,"author":{"gitId":"danielk0k"},"content":"        }","lastModifiedDate":"2022-10-09"},{"lineNumber":128,"author":{"gitId":"danielk0k"},"content":"        return sr;","lastModifiedDate":"2022-10-09"},{"lineNumber":129,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":130,"author":{"gitId":"danielk0k"},"content":"","lastModifiedDate":"2022-10-09"},{"lineNumber":131,"author":{"gitId":"danielk0k"},"content":"    public static List\u003cStudent\u003e getTypicalStudent() {","lastModifiedDate":"2022-10-09"},{"lineNumber":132,"author":{"gitId":"danielk0k"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2022-10-09"},{"lineNumber":133,"author":{"gitId":"danielk0k"},"content":"    }","lastModifiedDate":"2022-10-09"},{"lineNumber":134,"author":{"gitId":"danielk0k"},"content":"}","lastModifiedDate":"2022-10-09"}],"authorContributionMap":{"jeromepui":15,"danielk0k":96,"linuschancs":22,"minjiunn":1}},{"path":"src/test/java/seedu/classify/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"jeromepui":1,"-":34}},{"path":"src/test/java/seedu/classify/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jeromepui"},"content":"package seedu.classify.ui;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"jeromepui"},"content":"import static seedu.classify.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"jeromepui"},"content":"import seedu.classify.MainApp;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"jeromepui":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"\u003c?import seedu.classify.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"jeromepui":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"jeromepui"},"content":"\u003cfx:root type\u003d\"seedu.classify.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jeromepui":1,"-":5}}]
