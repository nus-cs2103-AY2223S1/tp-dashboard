[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-T15-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T15-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T15-1/tp/branch/master/graph/badge.svg?token\u003dELUB36KYBS)](https://codecov.io/gh/AY2223S1-CS2103T-T15-1/tp)","lastModifiedDate":"2022-10-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"![Ui](docs/images/ui-screenshots/Ui.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Kok-je"},"content":"Coydir is a desktop application used by Human Resource Executives to manage their employee base and streamline data collection.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"It is made simpler with a easy-to-use graphical user interface(GUI) and can also be accessed through your Command Line Interface(CLI).","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"- It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"- It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"- It is named Coydir as Coy is short for company and dir is short for directory","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"- For the detailed documentation of this project, see the **[Coydir Product Website](https://ay2223s1-cs2103t-t15-1.github.io/tp/)**.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"**Other Links:**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"Kok-je"},"content":"* [About Us](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/docs/AboutUs.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"* [Developer Guide](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/docs/DeveloperGuide.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":"* [User Guide](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"# Acknowledgements","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Kok-je":8,"kevinchangjk":9,"prit3010":3,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"mainClassName \u003d \u0027coydir.Main\u0027","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"    archiveFileName \u003d \u0027coydir.jar\u0027","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"chao890"},"content":"run {","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"chao890"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2022-10-18"},{"lineNumber":76,"author":{"gitId":"chao890"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"kevinchangjk":1,"chao890":4,"prit3010":1,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"### Chao Yung","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"\u003ckbd\u003e\u003cimg src\u003d\"images/chao890.png\" width\u003d\"200px\"\u003e\u003c/kbd\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"chao890"},"content":"[[github](https://github.com/chao890)]","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"[[portfolio](team/chao890.md)]","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"- Role: Developer, Git Expert","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":"- Responsibilities: Documentation","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"### Kevin Chang","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"\u003ckbd\u003e\u003cimg src\u003d\"images/kevinchangjk.png\" width\u003d\"200px\"\u003e\u003c/kbd\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"[[github](http://github.com/kevinchangjk)]","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"[[portfolio](team/kevinchangjk.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"- Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"- Responsibilities: Backend, Code Quality","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"### Prittam Ravi","lastModifiedDate":"2022-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"\u003ckbd\u003e\u003cimg src\u003d\"images/prit3010.png\" width\u003d\"200px\"\u003e\u003c/kbd\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"[[github](https://github.com/prit3010)]","lastModifiedDate":"2022-09-27"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"[[portfolio](team/prit3010.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"- Role: Team Lead","lastModifiedDate":"2022-09-27"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"- Responsibilities: Scheduling \u0026 Tracking, Deliverables \u0026 Deadlines","lastModifiedDate":"2022-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"### Shawn Kok","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"\u003ckbd\u003e\u003cimg src\u003d\"images/kok-je.png\" width\u003d\"200px\"\u003e\u003c/kbd\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"[[github](https://github.com/Kok-je)]","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"[[portfolio](team/kok-je.md)]","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Kok-je"},"content":"- Role: Developer, IntelliJ expert, Figma expert","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"Kok-je"},"content":"- Responsibilities: Testing, Integration, UI","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"### Ng Shi Jun","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"\u003ckbd\u003e\u003cimg src\u003d\"images/ngshijun.png\" width\u003d\"200px\"\u003e\u003c/kbd\u003e","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ngshijun"},"content":"[[github](http://github.com/ngshijun)]","lastModifiedDate":"2022-09-27"},{"lineNumber":55,"author":{"gitId":"ngshijun"},"content":"[[portfolio](team/ngshijun.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"- Role: Developer","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"ngshijun"},"content":"- Responsibilities: Frontend, UI","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ngshijun":4,"Kok-je":8,"chao890":2,"kevinchangjk":15,"prit3010":1,"-":28}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your testes. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2022-02-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your org (that contains the fork) to CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Wait for the next run of CI in your fork (or push a dummy commit to it to trigger CI) to confirm CI is able to upload generated coverage data to CodeCov. If CodeCov is not set up correctly, the CI run will fail with an error message that mentions CodeCov.","lastModifiedDate":"2022-02-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/MainApp.java).","lastModifiedDate":"2022-09-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"kevinchangjk":1,"-":79}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"- Table of Contents","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/MainApp.java). It is responsible for,","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2022-09-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2022-09-27"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2022-09-27"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2022-09-27"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2022-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2022-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2022-09-27"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2022-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/ui/Ui.java)","lastModifiedDate":"2022-09-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"![Structure of the UI Component](images/diagrams/UiClassDiagram.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2022-09-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2022-09-27"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2022-09-27"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2022-09-27"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2022-09-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/logic/Logic.java)","lastModifiedDate":"2022-09-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/diagrams/DeleteSequenceDiagram.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-09-27"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2022-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/model/Model.java)","lastModifiedDate":"2022-09-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-09-27"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2022-09-27"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2022-09-27"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2022-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/coydir/storage/Storage.java)","lastModifiedDate":"2022-09-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/StorageClassiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2022-09-27"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2022-09-27"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2022-09-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"kevinchangjk"},"content":"Classes used by multiple components are in the `coydirbook.commons` package.","lastModifiedDate":"2022-09-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"kevinchangjk"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2022-09-27"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2022-09-27"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2022-09-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"![UndoRedoState0](images/diagrams/UndoRedoState0.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"kevinchangjk"},"content":"![UndoRedoState1](images/diagrams/UndoRedoState1.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"kevinchangjk"},"content":"![UndoRedoState2](images/diagrams/UndoRedoState2.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"kevinchangjk"},"content":"![UndoRedoState3](images/diagrams/UndoRedoState3.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"kevinchangjk"},"content":"![UndoSequenceDiagram](images/diagrams/UndoSequenceDiagram.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"kevinchangjk"},"content":"![UndoRedoState4](images/diagrams/UndoRedoState4.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"kevinchangjk"},"content":"![UndoRedoState5](images/diagrams/UndoRedoState5.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"prit3010"},"content":"- **Alternative 1 (current choice):** Saves the entire Coydir","lastModifiedDate":"2022-09-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"kevinchangjk"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2022-09-27"},{"lineNumber":233,"author":{"gitId":"kevinchangjk"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2022-09-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":235,"author":{"gitId":"kevinchangjk"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2022-09-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"kevinchangjk"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2022-09-27"},{"lineNumber":238,"author":{"gitId":"kevinchangjk"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2022-09-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"Kok-je"},"content":"### Add feature","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"Kok-je"},"content":"#### Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":244,"author":{"gitId":"Kok-je"},"content":"This section explains the implementation of the `add` feature. The command takes in two compulsory parameters which is the employee name and position, executing the command leads to the addition of an employee person into the records of coydir.","lastModifiedDate":"2022-10-20"},{"lineNumber":245,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":246,"author":{"gitId":"Kok-je"},"content":"Below is a sequence diagram and explanation of how `add` is executed.","lastModifiedDate":"2022-10-20"},{"lineNumber":247,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":248,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/AddCommandUML.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":249,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":250,"author":{"gitId":"Kok-je"},"content":"Step 1. The user enters the command `add n/Jon j/janitor`.","lastModifiedDate":"2022-10-20"},{"lineNumber":251,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":252,"author":{"gitId":"kevinchangjk"},"content":"Step 2. User input is parsed by `AddCommandParser` which creates the`AddCommand` object, then the method `LogicManager#execute` is called to create the AddCommand object.","lastModifiedDate":"2022-10-20"},{"lineNumber":253,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":254,"author":{"gitId":"Kok-je"},"content":"Step 3. The `execute` method of AddCommand is then called on the object, which returns a `CommandResult` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":255,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":256,"author":{"gitId":"kevinchangjk"},"content":"Step 4. This adds the `person` from the list from the model. The `employeeID` is set and if there already exist a `person` object with the same field data, a `CommandException` will be thrown and a message indicating duplicate person will be shown. If the `person` object does not exist, then using `model#addPerson()`, the `person` object is added to the `database`.","lastModifiedDate":"2022-10-20"},{"lineNumber":257,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":258,"author":{"gitId":"kevinchangjk"},"content":"Step 5. `storage#saveDatabase` is then called on the current `database`, updates the database to contain the new `person`.","lastModifiedDate":"2022-10-20"},{"lineNumber":259,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":260,"author":{"gitId":"chao890"},"content":"### Delete feature","lastModifiedDate":"2022-10-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"kevinchangjk"},"content":"#### Implementation (_Proposed_)","lastModifiedDate":"2022-10-20"},{"lineNumber":263,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":264,"author":{"gitId":"chao890"},"content":"This section explains the implementation of the `delete` feature. The command takes in one parameter which is the employee ID, executing the command leads to the removal of the employee with that specific employee ID from coydir.","lastModifiedDate":"2022-10-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"chao890"},"content":"Below is a sequence diagram and explanation of how `delete` is executed.","lastModifiedDate":"2022-10-19"},{"lineNumber":267,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":268,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/DeleteCommandUML.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":269,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":270,"author":{"gitId":"kevinchangjk"},"content":"Step 1. The user enters the command `delete 1`.","lastModifiedDate":"2022-10-20"},{"lineNumber":271,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":272,"author":{"gitId":"kevinchangjk"},"content":"Step 2. User input is parsed by `DeleteCommandParser` which creates the `DeleteCommand` object, then the method `LogicManager#execute` is called to create the `DeleteCommand` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":273,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":274,"author":{"gitId":"kevinchangjk"},"content":"Step 3. The `execute` method of `DeleteCommand` is then called on the object, which returns a `CommandResult` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":275,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":276,"author":{"gitId":"kevinchangjk"},"content":"Step 4. This finds the `person` from the list from `model#getFilteredPersonList` by its employee ID which is `1` in this case. If there does not exist a `person` object with employee ID of `1`, a `CommandException` will be thrown and a message indicating invalid ID given will be shown. If the `person` object exists, then using `model#deletePerson()`, the `person` object is deleted from the `database`.","lastModifiedDate":"2022-10-20"},{"lineNumber":277,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"kevinchangjk"},"content":"Step 5. storage#saveDatabase is then called on the current `database`, updates the database to not contain the deleted `person`.","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"kevinchangjk"},"content":"### Find feature","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":282,"author":{"gitId":"kevinchangjk"},"content":"This section explains the implementation of the `find` feature. The command takes in a number of parameters, which serve as the \"filters\" for the finding/searching function. At present, we have implemented finding by name, department, position, and any combination of these three. Thus it is possible to use these altogether to search for a person with high specificity.","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"kevinchangjk"},"content":"Below is a sequence diagram and explanation of how `find` is executed. In this simple example, we will look at the command `find n/Alex`.","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/FindCommandUML.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":287,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"kevinchangjk"},"content":"Step 1. The user enters the command `find n/Alex`.","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":290,"author":{"gitId":"kevinchangjk"},"content":"Step 2. User input is parsed by `FindCommandParser` which creates the `FindCommand` object, then the method `LogicManager#execute` is called to create the `FindCommand` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":292,"author":{"gitId":"kevinchangjk"},"content":"Step 3. The `execute` method of `FindCommand` is then called on the object, which returns a `CommandResult` object.","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":294,"author":{"gitId":"kevinchangjk"},"content":"Step 4. This then iterates through the list of `Person` objects returned by the `model#getFilteredPersonList` for the search parameter specified (in this case, name being \"Alex\"). It then keeps track of any `Person` objects that matches this specified parameter.","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":296,"author":{"gitId":"kevinchangjk"},"content":"Step 5. The list of `Person` objects is then returned, and is passed to the `UiManager` to be displayed on the user interface.","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"ngshijun"},"content":"### View feature","lastModifiedDate":"2022-10-23"},{"lineNumber":299,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":300,"author":{"gitId":"ngshijun"},"content":"This section explains the implementation of the `view` feature. The command takes in one parameter which is the index. Executing the command leads to the more detailed information of the specific employee to be shown on the right panel.","lastModifiedDate":"2022-10-23"},{"lineNumber":301,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":302,"author":{"gitId":"ngshijun"},"content":"Below is a sequence diagram and explanation of how `view` is executed.","lastModifiedDate":"2022-10-23"},{"lineNumber":303,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":304,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"images/diagrams/ViewCommandUML.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":305,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":306,"author":{"gitId":"ngshijun"},"content":"Step 1. The use enters the command `view 1`.","lastModifiedDate":"2022-10-23"},{"lineNumber":307,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":308,"author":{"gitId":"ngshijun"},"content":"Step 2. User input is parsed by `ViewCommandParser` which created the `ViewCommand` object, then the method `LogicManager#execute` is called to create the `ViewCommand` object.","lastModifiedDate":"2022-10-23"},{"lineNumber":309,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":310,"author":{"gitId":"ngshijun"},"content":"Step 3. The `execute` method of `ViewCommand` is then called on the object, which returns a `CommandResult` object.","lastModifiedDate":"2022-10-23"},{"lineNumber":311,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":312,"author":{"gitId":"ngshijun"},"content":"Step 4. This finds the `person` from the list from the `model#getFilteredPersonList` by its index which is `1` in this case. If there does not exist a `person` object with index `1`, a `CommandException` will be thrown and a messafe indicating invalid index given will be shown. If the `person` object exists, then the `MainWindow#handleView` will be trigger, which results in the panel being updated with the correct `person` information.","lastModifiedDate":"2022-10-23"},{"lineNumber":313,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":314,"author":{"gitId":"prit3010"},"content":"### BatchAdd","lastModifiedDate":"2022-10-19"},{"lineNumber":315,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":316,"author":{"gitId":"prit3010"},"content":"This feature is created for users to add multiple entries at once.","lastModifiedDate":"2022-10-19"},{"lineNumber":317,"author":{"gitId":"prit3010"},"content":"In the case of this application, there are two main reasons why our User (HR Executive) would use this.","lastModifiedDate":"2022-10-19"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":319,"author":{"gitId":"prit3010"},"content":"1. User is new and needs to import all the current data into the database.","lastModifiedDate":"2022-10-19"},{"lineNumber":320,"author":{"gitId":"prit3010"},"content":"2. There is a new recruitment cycle and company has recruited a large number of employees.","lastModifiedDate":"2022-10-20"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":322,"author":{"gitId":"prit3010"},"content":"Moving on to the implementation, some things to note.","lastModifiedDate":"2022-10-19"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":324,"author":{"gitId":"prit3010"},"content":"- As of now, our feature only accommodates adding from a CSV file.","lastModifiedDate":"2022-10-19"},{"lineNumber":325,"author":{"gitId":"prit3010"},"content":"- Fields does not allow for commas inside.","lastModifiedDate":"2022-10-19"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":327,"author":{"gitId":"prit3010"},"content":"These are possible things to work on for future iterations.","lastModifiedDate":"2022-10-20"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":329,"author":{"gitId":"prit3010"},"content":"#### Implementation","lastModifiedDate":"2022-10-19"},{"lineNumber":330,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":331,"author":{"gitId":"prit3010"},"content":"Pre-requisites: User has a CSV file filled with whatever information they have","lastModifiedDate":"2022-10-19"},{"lineNumber":332,"author":{"gitId":"prit3010"},"content":"and has stored it in the `/data` folder of the repository.","lastModifiedDate":"2022-10-20"},{"lineNumber":333,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":334,"author":{"gitId":"prit3010"},"content":"Step 1: User executes `batchadd filename` command. In the `LogicManager` class, the `DatabaseParser` method is called.","lastModifiedDate":"2022-10-19"},{"lineNumber":335,"author":{"gitId":"prit3010"},"content":"This will return a new `BatchAddParser` object and `parse` function is then called.","lastModifiedDate":"2022-10-19"},{"lineNumber":336,"author":{"gitId":"prit3010"},"content":"A helper function in `ParserUtil` helps to trim the filename and check if it is valid. If no argument is provided, a","lastModifiedDate":"2022-10-19"},{"lineNumber":337,"author":{"gitId":"prit3010"},"content":"`ParseException` will be thrown.","lastModifiedDate":"2022-10-19"},{"lineNumber":338,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":339,"author":{"gitId":"prit3010"},"content":"Step 2: The `parse` function returns a `BatchAddCommand` which is then executed. In this `execute` function, the first","lastModifiedDate":"2022-10-19"},{"lineNumber":340,"author":{"gitId":"prit3010"},"content":"step would be to read the information in the CSV file (`getInfo` function). A `BufferedReader` object is used to read the CSV file and write it","lastModifiedDate":"2022-10-19"},{"lineNumber":341,"author":{"gitId":"prit3010"},"content":"into a `List\u003cAddCommand\u003e`. If file does not exist in the folder, a `FileNotFound` exception is thrown too.","lastModifiedDate":"2022-10-19"},{"lineNumber":342,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":343,"author":{"gitId":"prit3010"},"content":"Step 3. Once `getInfo` returns a `List\u003cAddCommand\u003e`, the list will then be iterated through to execute each `AddCommand`","lastModifiedDate":"2022-10-19"},{"lineNumber":344,"author":{"gitId":"prit3010"},"content":"If there is any duplicate Person found, the function call will be aborted and the database will be reverted to its original state.","lastModifiedDate":"2022-10-19"},{"lineNumber":345,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":346,"author":{"gitId":"kevinchangjk"},"content":"Step 4. `storage#saveDatabase` is then called on the current `database`, updates the database to contain the new persons added.","lastModifiedDate":"2022-10-20"},{"lineNumber":347,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":348,"author":{"gitId":"prit3010"},"content":"#### Design Considerations","lastModifiedDate":"2022-10-19"},{"lineNumber":349,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":350,"author":{"gitId":"prit3010"},"content":"- Alternative 1 (Current Choice): Make use of the execution of the `AddCommand`.","lastModifiedDate":"2022-10-20"},{"lineNumber":351,"author":{"gitId":"prit3010"},"content":"  - Pros: Makes use of the Error Handling that the `AddCommand` has.","lastModifiedDate":"2022-10-20"},{"lineNumber":352,"author":{"gitId":"prit3010"},"content":"  - Cons: `BatchAdd` will fail if Add fails.","lastModifiedDate":"2022-10-20"},{"lineNumber":353,"author":{"gitId":"prit3010"},"content":"- Alternative 2: Own implementation of `BatchAdd` without relying on `AddCommand`.","lastModifiedDate":"2022-10-20"},{"lineNumber":354,"author":{"gitId":"prit3010"},"content":"  - Pros: If Add Fails, BatchAdd can still work.","lastModifiedDate":"2022-10-20"},{"lineNumber":355,"author":{"gitId":"prit3010"},"content":"  - Cons: Implementation Heavy.","lastModifiedDate":"2022-10-20"},{"lineNumber":356,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":357,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"kevinchangjk"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":362,"author":{"gitId":"kevinchangjk"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":363,"author":{"gitId":"kevinchangjk"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":364,"author":{"gitId":"kevinchangjk"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":365,"author":{"gitId":"kevinchangjk"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"kevinchangjk"},"content":"Our target user is a Chief Human Resources Officer (CHRO) who:","lastModifiedDate":"2022-09-30"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"kevinchangjk"},"content":"- types fast","lastModifiedDate":"2022-09-30"},{"lineNumber":378,"author":{"gitId":"kevinchangjk"},"content":"- is comfortable with using CLI for inputting commands","lastModifiedDate":"2022-09-30"},{"lineNumber":379,"author":{"gitId":"kevinchangjk"},"content":"- needs a centralized platform for accessing and updating employees’ data","lastModifiedDate":"2022-09-30"},{"lineNumber":380,"author":{"gitId":"kevinchangjk"},"content":"- is a Top-level management executive in charge of an organization\u0027s employees","lastModifiedDate":"2022-09-30"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":382,"author":{"gitId":"kevinchangjk"},"content":"**Value proposition**:","lastModifiedDate":"2022-09-30"},{"lineNumber":383,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":384,"author":{"gitId":"kevinchangjk"},"content":"Coydir enables the Company’s HR executive to quickly access the list of all employees, and make necessary updates based on changes in the company’s structure. This grants excellent visualization of the company structure, which will be useful in company organization or restructuring.","lastModifiedDate":"2022-09-30"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"kevinchangjk"},"content":"_Currently for Coydir v1.2_","lastModifiedDate":"2022-09-30"},{"lineNumber":389,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                      | So that I can…​                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"kevinchangjk"},"content":"| -------- | ------- | --------------------------------- | ------------------------------------------------ |","lastModifiedDate":"2022-09-30"},{"lineNumber":394,"author":{"gitId":"kevinchangjk"},"content":"| `* * *`  | user    | add a new person                  | keep the database updated with the employee list |","lastModifiedDate":"2022-09-30"},{"lineNumber":395,"author":{"gitId":"-"},"content":"| `* * *`  | user    | delete a person                   | remove entries that I no longer need             |","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"kevinchangjk"},"content":"| `* * *`  | user    | list people in the database       | keep track of who is in the company              |","lastModifiedDate":"2022-09-30"},{"lineNumber":397,"author":{"gitId":"kevinchangjk"},"content":"| `* * *`  | user    | edit details of employees         | correct the details of the employees             |","lastModifiedDate":"2022-09-30"},{"lineNumber":398,"author":{"gitId":"kevinchangjk"},"content":"| `* * *`  | user    | view contact details of employees | contact them if necessary                        |","lastModifiedDate":"2022-09-30"},{"lineNumber":399,"author":{"gitId":"kevinchangjk"},"content":"| `* * *`  | user    | save my data                      | load the data I input previously                 |","lastModifiedDate":"2022-09-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"kevinchangjk"},"content":"_{More to be added}_","lastModifiedDate":"2022-09-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"prit3010"},"content":"(For all use cases below, the **System** is the `Coydir` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2022-09-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"prit3010"},"content":"2.  Coydir shows a list of persons","lastModifiedDate":"2022-09-27"},{"lineNumber":413,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"prit3010"},"content":"4.  Coydir deletes the person","lastModifiedDate":"2022-09-27"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"kevinchangjk"},"content":"- 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"kevinchangjk"},"content":"  - 2a1. Coydir shows an error message","lastModifiedDate":"2022-09-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"kevinchangjk"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"kevinchangjk"},"content":"  - 3a1. Coydir shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"prit3010"},"content":"**Use case: Edit details of a person**","lastModifiedDate":"2022-09-27"},{"lineNumber":433,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":434,"author":{"gitId":"prit3010"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":435,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":436,"author":{"gitId":"prit3010"},"content":"1. User requests to list persons","lastModifiedDate":"2022-09-27"},{"lineNumber":437,"author":{"gitId":"prit3010"},"content":"2. Coydir shows a list of persons","lastModifiedDate":"2022-09-27"},{"lineNumber":438,"author":{"gitId":"prit3010"},"content":"3. User requests to delete a specific person in the list","lastModifiedDate":"2022-09-27"},{"lineNumber":439,"author":{"gitId":"prit3010"},"content":"4. Coydir deletes the person","lastModifiedDate":"2022-09-27"},{"lineNumber":440,"author":{"gitId":"prit3010"},"content":"5. User adds specific person back with the updated changes.","lastModifiedDate":"2022-09-27"},{"lineNumber":441,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":442,"author":{"gitId":"prit3010"},"content":"   Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":443,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":444,"author":{"gitId":"prit3010"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":445,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":446,"author":{"gitId":"kevinchangjk"},"content":"- 2a. The list is empty.","lastModifiedDate":"2022-09-27"},{"lineNumber":447,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":448,"author":{"gitId":"kevinchangjk"},"content":"  - 2a1. Coydir shows an error message","lastModifiedDate":"2022-09-27"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":452,"author":{"gitId":"kevinchangjk"},"content":"- 3a. The given index is invalid.","lastModifiedDate":"2022-09-27"},{"lineNumber":453,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":454,"author":{"gitId":"kevinchangjk"},"content":"  - 3a1. Coydir shows an error message.","lastModifiedDate":"2022-09-27"},{"lineNumber":455,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":456,"author":{"gitId":"prit3010"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2022-09-27"},{"lineNumber":457,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":458,"author":{"gitId":"prit3010"},"content":"**Use case: Find details of a person**","lastModifiedDate":"2022-09-27"},{"lineNumber":459,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":460,"author":{"gitId":"prit3010"},"content":"**MSS**","lastModifiedDate":"2022-09-27"},{"lineNumber":461,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":462,"author":{"gitId":"prit3010"},"content":"1. User requests to find details of specific person","lastModifiedDate":"2022-09-27"},{"lineNumber":463,"author":{"gitId":"prit3010"},"content":"2. Coydir shows the details of person specific person","lastModifiedDate":"2022-09-27"},{"lineNumber":464,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":465,"author":{"gitId":"prit3010"},"content":"   Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":466,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":467,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2022-09-27"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":469,"author":{"gitId":"kevinchangjk"},"content":"- 2a. There is no such person in the list","lastModifiedDate":"2022-09-27"},{"lineNumber":470,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":471,"author":{"gitId":"kevinchangjk"},"content":"  - 2a1. Coydir shows an error message","lastModifiedDate":"2022-09-27"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":473,"author":{"gitId":"prit3010"},"content":"    Use case ends.","lastModifiedDate":"2022-09-27"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":475,"author":{"gitId":"ngshijun"},"content":"**Use case: View details of a person**","lastModifiedDate":"2022-10-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":477,"author":{"gitId":"ngshijun"},"content":"**MSS**","lastModifiedDate":"2022-10-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":479,"author":{"gitId":"ngshijun"},"content":"1. User request to view details of a specific person in the list","lastModifiedDate":"2022-10-23"},{"lineNumber":480,"author":{"gitId":"ngshijun"},"content":"2. Coydir shows the details of the specific person","lastModifiedDate":"2022-10-23"},{"lineNumber":481,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":482,"author":{"gitId":"ngshijun"},"content":"   Use case ends.","lastModifiedDate":"2022-10-23"},{"lineNumber":483,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":484,"author":{"gitId":"ngshijun"},"content":"**Extensions**","lastModifiedDate":"2022-10-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":486,"author":{"gitId":"ngshijun"},"content":"- 1a. The given index is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":487,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":488,"author":{"gitId":"ngshijun"},"content":"  - 1a1. Coydir shows an error message.","lastModifiedDate":"2022-10-23"},{"lineNumber":489,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":490,"author":{"gitId":"ngshijun"},"content":"    Use case ends.","lastModifiedDate":"2022-10-23"},{"lineNumber":491,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":492,"author":{"gitId":"kevinchangjk"},"content":"_{More to be added}_","lastModifiedDate":"2022-09-27"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"Kok-je"},"content":"4. Documentation: user guide should be sufficiently clear such that all users can understand how to use the app after reading the guide.","lastModifiedDate":"2022-09-30"},{"lineNumber":500,"author":{"gitId":"Kok-je"},"content":"5. The product should be easy to use by person with little experience of using a command line application.","lastModifiedDate":"2022-09-30"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"kevinchangjk"},"content":"_{More to be added}_","lastModifiedDate":"2022-09-27"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"kevinchangjk"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2022-09-27"},{"lineNumber":507,"author":{"gitId":"kevinchangjk"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2022-09-27"},{"lineNumber":508,"author":{"gitId":"ngshijun"},"content":"- **Entries**: Profile of a person which contains all the necessary details about the person","lastModifiedDate":"2022-09-29"},{"lineNumber":509,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":510,"author":{"gitId":"ngshijun"},"content":"_{More to be added}_","lastModifiedDate":"2022-09-29"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ngshijun":32,"Kok-je":18,"kevinchangjk":143,"chao890":9,"prit3010":66,"-":295}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"   1. Run the `coydir.Main` and try a few commands.","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"kevinchangjk":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"   e.g. `coydir.commons.StringUtilTest`","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"   e.g. `coydir.storage.StorageManagerTest`","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"   e.g. `coydir.logic.LogicManagerTest`","lastModifiedDate":"2022-09-29"}],"authorContributionMap":{"kevinchangjk":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"  \u003cimg src\u003d\"./images/Coydir_Logo.png\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"  \u003ch1 align\u003d\"center\"\u003e\u003cfont size\u003d\"7\"\u003eCoydir\u003c/font\u003e\u003cbr\u003e\u003cem\u003eThe Ultimate Company Directory\u003c/em\u003e\u003c/h1\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"## **Coydir /(‘kohy-də)/**","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"\u003e **Financial Resources may be the lifeblood of a company, but human resources are the brains.** - Rob Silzer","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"**Revolutionize** your company and become an **Industry Leader** today with Coydir!","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"### Table of Contents","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2022-10-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"- [Using this Guide](#using-this-guide)","lastModifiedDate":"2022-10-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"  - [Navigating the User Guide](#navigating-the-user-guide)","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"  - [The User Interface](#the-user-interface)","lastModifiedDate":"2022-10-29"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"chao890"},"content":"- [Features](#features)","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"  - [Coydir Commands Format](#coydir-commands-format)","lastModifiedDate":"2022-10-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"  - [Managing Employee Profiles](#managing-employee-profiles)","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    - [What\u0027s in an Employee Profile](#whats-in-an-employee-profile)","lastModifiedDate":"2022-10-30"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    - [Adding an employee](#adding-an-employee-add)","lastModifiedDate":"2022-10-30"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    - [Editing an employee](#editing-an-employee-edit)","lastModifiedDate":"2022-10-30"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"    - [Deleting an employee](#deleting-an-employee-delete)","lastModifiedDate":"2022-10-30"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    - [Adding multiple employees at once](#adding-multiple-employees-at-once-batch-add)","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    - [View details of an employee](#view-details-of-an-employee-view)","lastModifiedDate":"2022-10-30"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"    - [Listing all employees](#listing-all-employees-list)","lastModifiedDate":"2022-10-30"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    - [Finding an employee](#finding-an-employee-find)","lastModifiedDate":"2022-10-30"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"  - [Managing Employee Leaves](#managing-employee-leaves)","lastModifiedDate":"2022-10-29"},{"lineNumber":38,"author":{"gitId":"chao890"},"content":"    - [Controlling total leaves for an employee](#controlling-total-leave-for-an-employee)","lastModifiedDate":"2022-10-29"},{"lineNumber":39,"author":{"gitId":"chao890"},"content":"    - [Checking if an employee is on leave](#checking-if-an-employee-is-on-leave)","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"chao890"},"content":"    - [Adding a leave period for an employee](#adding-a-leave-period-for-an-employee-add-leave)","lastModifiedDate":"2022-10-29"},{"lineNumber":41,"author":{"gitId":"chao890"},"content":"    - [Deleting a leave period for an employee](#deleting-a-leave-period-for-an-employee-delete-leave)","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"  - [Managing Employee Performance](#managing-employee-performance)","lastModifiedDate":"2022-10-29"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    - [Rating the performance of an employee](#rating-the-performance-of-an-employee-rate)","lastModifiedDate":"2022-10-30"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    - [Employee Performance History](#employee-performance-history)","lastModifiedDate":"2022-10-29"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"  - [Managing Departments](#managing-departments)","lastModifiedDate":"2022-10-29"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"    - [View details of a department](#view-details-of-a-department-view-department)","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"  - [Additional Features](#additional-features)","lastModifiedDate":"2022-10-29"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    - [Getting help](#getting-help-help)","lastModifiedDate":"2022-10-30"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    - [Exiting the program](#exiting-the-program-exit)","lastModifiedDate":"2022-10-30"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    - [Clearing the data](#clearing-the-data-clear)","lastModifiedDate":"2022-10-30"},{"lineNumber":51,"author":{"gitId":"chao890"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"chao890"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"chao890"},"content":"- [FAQ](#faq)","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"chao890"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"## Introduction","lastModifiedDate":"2022-10-29"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":60,"author":{"gitId":"Kok-je"},"content":"Welcome HR executives and Department Heads! Coydir is a desktop app to efficiently track key employee details within your company, optimized for use via a Command Line Interface (CLI). Coydir would not only allow you to quickly access the list of all employees and their details but also make necessary updates such as leaves and performance rating information.","lastModifiedDate":"2022-10-31"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"## Using this Guide","lastModifiedDate":"2022-10-29"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"### Navigating the User Guide","lastModifiedDate":"2022-10-29"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"**[To be updated]**","lastModifiedDate":"2022-10-29"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"### The User Interface","lastModifiedDate":"2022-10-30"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"Below is an image of Coydir User Interface with the main components labelled.","lastModifiedDate":"2022-10-30"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"![Labelled GUI](images/ui-screenshots/Labelled-GUI.png)","lastModifiedDate":"2022-10-31"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"#### Toolbar","lastModifiedDate":"2022-10-30"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"![Toolbar](images/ui-screenshots/Toolbar.png)","lastModifiedDate":"2022-10-31"},{"lineNumber":77,"author":{"gitId":"prit3010"},"content":"This Toolbar can be used to :","lastModifiedDate":"2022-10-30"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"1. Exit the application through the **File** button","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"2. Access the Help guide through the **Help** button","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"3. Change from Dark mode to Light Mode or vice versa through the **Theme** button","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"#### Employee List Panel","lastModifiedDate":"2022-10-30"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"![Employee List Panel](images/ui-screenshots/Employee-List-Panel.png)","lastModifiedDate":"2022-10-31"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"This shows the whole employee list with basic information such as _Name_, _Employee ID_ and _Position_.","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":88,"author":{"gitId":"prit3010"},"content":"This will come in handy if:","lastModifiedDate":"2022-10-30"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"1. You want a general overview of the employees in the company as of this moment.","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"prit3010"},"content":"2. You want to quickly find out their Employee ID to view more details.","lastModifiedDate":"2022-10-30"},{"lineNumber":92,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"#### Employee Info Panel","lastModifiedDate":"2022-10-30"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"![Employee Info Panel](images/ui-screenshots/Employee-Info-Panel.png)","lastModifiedDate":"2022-10-31"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"This shows a specific employee\u0027s particulars.","lastModifiedDate":"2022-10-30"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"Things to note:","lastModifiedDate":"2022-10-30"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"1. On startup of the application, this panel shows Coydir logo.","lastModifiedDate":"2022-10-30"},{"lineNumber":101,"author":{"gitId":"prit3010"},"content":"2. To view an employee\u0027s particulars, refer to the [view command]([#view-details-of-an-employee--view).","lastModifiedDate":"2022-10-30"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"3. If you delete an employee that you are currently viewing, the employee info view will display the next employee\u0027s particulars.","lastModifiedDate":"2022-10-31"},{"lineNumber":103,"author":{"gitId":"prit3010"},"content":"4. If there is no next employee, this panel will revert to the Coydir logo.","lastModifiedDate":"2022-10-30"},{"lineNumber":104,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":105,"author":{"gitId":"prit3010"},"content":"#### Command Box","lastModifiedDate":"2022-10-30"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"![Command Box](images/ui-screenshots/Command.png)","lastModifiedDate":"2022-10-31"},{"lineNumber":108,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":109,"author":{"gitId":"prit3010"},"content":"You can enter your user commands in the bottom section labeled as `Enter command here...`.","lastModifiedDate":"2022-10-31"},{"lineNumber":110,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":111,"author":{"gitId":"prit3010"},"content":"The top section displays relevant messages/errors after the command is entered.","lastModifiedDate":"2022-10-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2022-10-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"   1. If you have installed Java before, check that you have the right version, which is Java `11`.","lastModifiedDate":"2022-10-31"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"      - If you are using Windows, open up command prompt and type `java -version` and enter.","lastModifiedDate":"2022-10-31"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"      - If you are using Mac, open up terminal and type `java -version` and enter.","lastModifiedDate":"2022-10-31"},{"lineNumber":119,"author":{"gitId":"chao890"},"content":"   2. If you do not have Java `11`:","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"chao890"},"content":"      - If you are using Windows, you can install it from [here](https://www.oracle.com/java/technologies/downloads/).","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"chao890"},"content":"      - If you are using Mac, you can install the Azul build of OpenJDK 11 version from [here](https://www.azul.com/downloads/?version\u003djava-11-lts\u0026os\u003dmacos\u0026architecture\u003darm-64-bit\u0026package\u003djdk-fx).","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"2. Download the latest Coydir v1.3.0 jar file from [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/releases).","lastModifiedDate":"2022-10-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your Coydir.","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":126,"author":{"gitId":"chao890"},"content":"4. Double-click the file to start the app. A GUI similar to below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"  \u003cimg src\u003d\"./images/ui-screenshots/Ui.png\"/\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"   - **`list`** : Lists all employees in the company.","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"   - **`add`** `n/John Doe p/98765432 e/johnd@example.com j/Recruiter d/Human Resources a/311, Clementi Ave 2, #02-25 l/20 t/friends t/owesMoney` : Adds an employee named `John Doe`, with fields phone number, email, job title, department, address, total leaves, and tags to Coydir.","lastModifiedDate":"2022-10-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":137,"author":{"gitId":"chao890"},"content":"   - **`delete 3`** : Deletes employee with ID 3.","lastModifiedDate":"2022-10-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"   - **`exit`** : Exits the app.","lastModifiedDate":"2022-10-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-10-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"With our powerful features, it has never been more convenient to perform HR tasks in companies of all sizes.","lastModifiedDate":"2022-10-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"Coydir empowers you to take more control with less hassle, through data management and analytics features targeting 4 main fields:","lastModifiedDate":"2022-10-29"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"1. [Employee particulars and details](#managing-employee-profiles)","lastModifiedDate":"2022-10-29"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"2. [Employee leaves](#managing-employee-leaves)","lastModifiedDate":"2022-10-29"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"3. [Employee performance](#managing-employee-performance)","lastModifiedDate":"2022-10-29"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"4. [Department macro-view](#managing-departments)","lastModifiedDate":"2022-10-29"},{"lineNumber":153,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":154,"author":{"gitId":"kevinchangjk"},"content":"Coydir also has other miscellaneous features for a smooth and comfortable use of the application, that we will cover in:","lastModifiedDate":"2022-10-29"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"- [Additional Features](#additional-features)","lastModifiedDate":"2022-10-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"kevinchangjk"},"content":"We will explore each of these fields in great detail as we continue along, but before we get into that, let us take a look at how you can use the commands in Coydir\u0027s CLI-based interface.","lastModifiedDate":"2022-10-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":160,"author":{"gitId":"kevinchangjk"},"content":"### Coydir Commands Format","lastModifiedDate":"2022-10-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"kevinchangjk"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"kevinchangjk"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2022-09-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"kevinchangjk"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"kevinchangjk"},"content":"- If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":180,"author":{"gitId":"kevinchangjk"},"content":":warning: **Integer input values cannot be too large**: any values greater than $2^{31}-1$ is not supported.","lastModifiedDate":"2022-10-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"### Managing Employee Profiles","lastModifiedDate":"2022-10-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":184,"author":{"gitId":"kevinchangjk"},"content":"What\u0027s Human Resources without the Human aspect? (_P.S. It\u0027s not \"Resources\"_)","lastModifiedDate":"2022-10-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":186,"author":{"gitId":"kevinchangjk"},"content":"The **core** of any management tool is the **collection and tracking of data**.","lastModifiedDate":"2022-10-29"},{"lineNumber":187,"author":{"gitId":"kevinchangjk"},"content":"Recognising this, Coydir offers several features for the manipulation of data on your company\u0027s employees.","lastModifiedDate":"2022-10-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":189,"author":{"gitId":"kevinchangjk"},"content":"As a _HR professional_, Coydir makes it easy for you to **add and remove data**, **change past entries**, and **look for exactly the information you need**.","lastModifiedDate":"2022-10-30"},{"lineNumber":190,"author":{"gitId":"kevinchangjk"},"content":"All this, while keeping your data packed neatly as individual employee profiles for a clean, organised viewing.","lastModifiedDate":"2022-10-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":192,"author":{"gitId":"kevinchangjk"},"content":"Next, let us look at each feature in detail.","lastModifiedDate":"2022-10-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"kevinchangjk"},"content":"#### What\u0027s in an Employee Profile","lastModifiedDate":"2022-10-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":196,"author":{"gitId":"kevinchangjk"},"content":"There\u0027s _a lot of data_ that a company might want to keep track of for their employees, and different companies might maintain different standards and policies.","lastModifiedDate":"2022-10-30"},{"lineNumber":197,"author":{"gitId":"kevinchangjk"},"content":"In light of this, Coydir focuses on making it easy to manage key data for employees, for the purpose of making everyday operations smooth.","lastModifiedDate":"2022-10-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":199,"author":{"gitId":"kevinchangjk"},"content":"The complete employee profile allows you to specify _a fair amount_ of details for an employee, though some of these particulars are **optional**, and can be left blank if you are unsure of the information, or if you do not feel the need to keep track of it.","lastModifiedDate":"2022-10-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":201,"author":{"gitId":"kevinchangjk"},"content":"| Particular       | Description                            | Requirement    | Default Value |","lastModifiedDate":"2022-10-30"},{"lineNumber":202,"author":{"gitId":"kevinchangjk"},"content":"| ---------------- | -------------------------------------- | -------------- | ------------- |","lastModifiedDate":"2022-10-30"},{"lineNumber":203,"author":{"gitId":"kevinchangjk"},"content":"| **Employee ID**  | Unique numerical ID of employee        | **Cannot Set** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":204,"author":{"gitId":"kevinchangjk"},"content":"| **Name**         | Name of employee                       | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":205,"author":{"gitId":"kevinchangjk"},"content":"| **Position**     | Position/job title of employee         | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":206,"author":{"gitId":"kevinchangjk"},"content":"| **Department**   | Department of employee                 | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":207,"author":{"gitId":"kevinchangjk"},"content":"| **Phone Number** | Phone number of employee               | **Optional**   | N/A           |","lastModifiedDate":"2022-10-31"},{"lineNumber":208,"author":{"gitId":"kevinchangjk"},"content":"| **Email**        | Email of employee                      | **Optional**   | N/A           |","lastModifiedDate":"2022-10-31"},{"lineNumber":209,"author":{"gitId":"kevinchangjk"},"content":"| **Address**      | Address of employee                    | **Optional**   | N/A           |","lastModifiedDate":"2022-10-31"},{"lineNumber":210,"author":{"gitId":"kevinchangjk"},"content":"| **Tag**          | Any tag(s) for simple remarks          | **Optional**   | _None_        |","lastModifiedDate":"2022-10-30"},{"lineNumber":211,"author":{"gitId":"kevinchangjk"},"content":"| **Total Leave**  | Total no. of leave for employee        | **Optional**   | 14            |","lastModifiedDate":"2022-10-30"},{"lineNumber":212,"author":{"gitId":"kevinchangjk"},"content":"| **Leaves Left**  | No. of leaves left for employee        | **Cannot Set** | 14            |","lastModifiedDate":"2022-10-30"},{"lineNumber":213,"author":{"gitId":"kevinchangjk"},"content":"| **Rating**       | Latest performance rating for employee | **Cannot Set** | _None_        |","lastModifiedDate":"2022-10-30"},{"lineNumber":214,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":215,"author":{"gitId":"kevinchangjk"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:bulb:","lastModifiedDate":"2022-10-31"},{"lineNumber":216,"author":{"gitId":"kevinchangjk"},"content":"##### Bonus Information on the Profile","lastModifiedDate":"2022-10-31"},{"lineNumber":217,"author":{"gitId":"kevinchangjk"},"content":"- **Employee ID** is a unique number assigned to each employee, and is used for several powerful commands. To ensure the uniqueness of the IDs, Coydir **does not support** any editing/manipulation of the employee IDs.","lastModifiedDate":"2022-10-31"},{"lineNumber":218,"author":{"gitId":"kevinchangjk"},"content":"  - If you really wish to, you can [edit the data file](#editing-the-data-file) directly to \"control\" the employee IDs. However, this is _strongly discouraged_.","lastModifiedDate":"2022-10-31"},{"lineNumber":219,"author":{"gitId":"kevinchangjk"},"content":"- For simplicity, Coydir (_in v1.4_) currently supports a fixed list of departments.","lastModifiedDate":"2022-10-31"},{"lineNumber":220,"author":{"gitId":"kevinchangjk"},"content":"  - You can find out more about this in the [Department Management section here](#managing-departments).","lastModifiedDate":"2022-10-31"},{"lineNumber":221,"author":{"gitId":"kevinchangjk"},"content":"- For each employee, Coydir supports managing individual employee leaves, as well as performance ratings, helping you to track the particulars that are not meant to be set (no. of leaves left, employee rating)","lastModifiedDate":"2022-10-31"},{"lineNumber":222,"author":{"gitId":"kevinchangjk"},"content":"  - You can find out more about [employee leave management here](#managing-employee-leaves), and about [performance ratings here](#managing-employee-performance).","lastModifiedDate":"2022-10-31"},{"lineNumber":223,"author":{"gitId":"kevinchangjk"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":224,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":225,"author":{"gitId":"kevinchangjk"},"content":"#### Adding an employee: `add`","lastModifiedDate":"2022-10-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"chao890"},"content":"Adds an employee to Coydir.","lastModifiedDate":"2022-10-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"Kok-je"},"content":"Format: `add n/NAME [p/PHONE] [e/EMAIL] j/POSITION d/DEPARTMENT [a/ADDRESS] [l/LEAVE] [t/TAG]…​`","lastModifiedDate":"2022-10-31"},{"lineNumber":230,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":231,"author":{"gitId":"kevinchangjk"},"content":"| Field        | TAG | Description                     | Requirement    | Default Value |","lastModifiedDate":"2022-10-31"},{"lineNumber":232,"author":{"gitId":"kevinchangjk"},"content":"| ------------ | --- | ------------------------------- | -------------- | ------------- |","lastModifiedDate":"2022-10-31"},{"lineNumber":233,"author":{"gitId":"kevinchangjk"},"content":"| `NAME`       | n/  | Name                            | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":234,"author":{"gitId":"kevinchangjk"},"content":"| `PHONE`      | p/  | Phone number                    | **Optional**   | N/A           |","lastModifiedDate":"2022-10-31"},{"lineNumber":235,"author":{"gitId":"kevinchangjk"},"content":"| `EMAIL`      | e/  | Email                           | **Optional**   | N/A           |","lastModifiedDate":"2022-10-31"},{"lineNumber":236,"author":{"gitId":"kevinchangjk"},"content":"| `POSITION`   | j/  | Job position                    | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":237,"author":{"gitId":"kevinchangjk"},"content":"| `DEPARTMENT` | d/  | Company Department              | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":238,"author":{"gitId":"kevinchangjk"},"content":"| `ADDRESS`    | a/  | Address                         | **Optional**   | N/A           |","lastModifiedDate":"2022-10-31"},{"lineNumber":239,"author":{"gitId":"kevinchangjk"},"content":"| `LEAVE`      | l/  | Total number of entitled leaves | **Optional**   | 14            |","lastModifiedDate":"2022-10-31"},{"lineNumber":240,"author":{"gitId":"kevinchangjk"},"content":"| `TAG`        | t/  | Information tags                | **Optional**   | _None_        |","lastModifiedDate":"2022-10-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"chao890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-13"},{"lineNumber":243,"author":{"gitId":"prit3010"},"content":"An employee can have any number of tags (including 0).","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"prit3010"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"prit3010"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"prit3010"},"content":"The only compulsory fields are name, position and department.","lastModifiedDate":"2022-10-28"},{"lineNumber":248,"author":{"gitId":"prit3010"},"content":"Leaves will be default 14 while the other fields will be initialised as N/A.","lastModifiedDate":"2022-10-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":253,"author":{"gitId":"prit3010"},"content":"- `add n/John Doe p/98765432 e/johnd@example.com j/Recruiter d/Human Resources a/311, Clementi Ave 2, #02-25 l/20 t/friends t/owesMoney`","lastModifiedDate":"2022-10-28"},{"lineNumber":254,"author":{"gitId":"prit3010"},"content":"- `add n/Peter Mars j/Chief Operating Officer d/General Management`","lastModifiedDate":"2022-10-28"},{"lineNumber":255,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":256,"author":{"gitId":"kevinchangjk"},"content":"#### Editing an employee: `edit`","lastModifiedDate":"2022-10-29"},{"lineNumber":257,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"kevinchangjk"},"content":"There might be times when you have to change an employee\u0027s particulars and details after adding them into the database.","lastModifiedDate":"2022-10-30"},{"lineNumber":259,"author":{"gitId":"kevinchangjk"},"content":"It could be a typo in the address, a mobile number change, maybe even a promotion...","lastModifiedDate":"2022-10-30"},{"lineNumber":260,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":261,"author":{"gitId":"kevinchangjk"},"content":"In any case, editing an employee\u0027s details can be done through a simple command.","lastModifiedDate":"2022-10-30"},{"lineNumber":262,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":263,"author":{"gitId":"kevinchangjk"},"content":"- Provide the **index number** of the employee (not the Employee ID) based on the **employee list currently displayed**, along with the updated details you wish to change to.","lastModifiedDate":"2022-10-30"},{"lineNumber":264,"author":{"gitId":"kevinchangjk"},"content":"- Any existing value, if it exists, will be overwritten by the updated value that is keyed in. Otherwise, details that are not specified will remain as they are, unchanged.","lastModifiedDate":"2022-10-30"},{"lineNumber":265,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":266,"author":{"gitId":"prit3010"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [j/POSITION] [d/DEPARTMENT] [a/ADDRESS] [l/LEAVE] [t/TAG]…​`","lastModifiedDate":"2022-10-28"},{"lineNumber":267,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":268,"author":{"gitId":"kevinchangjk"},"content":"| Field        | TAG | Description                         | Requirement    | Default Value |","lastModifiedDate":"2022-10-30"},{"lineNumber":269,"author":{"gitId":"kevinchangjk"},"content":"| ------------ | --- | ----------------------------------- | -------------- | ------------- |","lastModifiedDate":"2022-10-31"},{"lineNumber":270,"author":{"gitId":"kevinchangjk"},"content":"| `INDEX`      | -   | Index of employee in displayed list | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":271,"author":{"gitId":"kevinchangjk"},"content":"| `NAME`       | n/  | Updated name of employee            | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":272,"author":{"gitId":"kevinchangjk"},"content":"| `PHONE`      | p/  | Updated phone number of employee    | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":273,"author":{"gitId":"kevinchangjk"},"content":"| `EMAIL`      | e/  | Updated email of employee           | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":274,"author":{"gitId":"kevinchangjk"},"content":"| `POSITION`   | j/  | Updated position of employee        | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":275,"author":{"gitId":"kevinchangjk"},"content":"| `DEPARTMENT` | d/  | Updated department of employee      | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":276,"author":{"gitId":"kevinchangjk"},"content":"| `ADDRESS`    | a/  | Updated address of employee         | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":277,"author":{"gitId":"kevinchangjk"},"content":"| `LEAVE`      | l/  | Updated total leave of employee     | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":278,"author":{"gitId":"kevinchangjk"},"content":"| `TAG`        | t/  | Updated tag(s) of employee          | **Optional**   | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":279,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":280,"author":{"gitId":"kevinchangjk"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-30"},{"lineNumber":281,"author":{"gitId":"kevinchangjk"},"content":"  There must be _at least one_ update parameter provided (such as name, phone, email, etc.). Otherwise, Coydir will not run the command, as you would not be editing anything at all!","lastModifiedDate":"2022-10-31"},{"lineNumber":282,"author":{"gitId":"kevinchangjk"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":283,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":284,"author":{"gitId":"kevinchangjk"},"content":"Example:","lastModifiedDate":"2022-10-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":286,"author":{"gitId":"kevinchangjk"},"content":"![Edit command - example 1](./images/ui-screenshots/edit-example1.png)","lastModifiedDate":"2022-10-30"},{"lineNumber":287,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":288,"author":{"gitId":"kevinchangjk"},"content":"- `edit 2 p/91234567 l/20 t/colleagues` edits the 2nd displayed employee (_Irfan Ibrahim_) to have a phone number `91234567`, a total leave of `20`, and a single tag `colleagues`.","lastModifiedDate":"2022-10-30"},{"lineNumber":289,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"kevinchangjk"},"content":"#### Deleting an employee: `delete`","lastModifiedDate":"2022-10-29"},{"lineNumber":291,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":292,"author":{"gitId":"kevinchangjk"},"content":"Deletes the specified employee from Coydir, given the employee ID.","lastModifiedDate":"2022-10-29"},{"lineNumber":293,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":294,"author":{"gitId":"kevinchangjk"},"content":"This command results in one of two cases below:","lastModifiedDate":"2022-10-29"},{"lineNumber":295,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":296,"author":{"gitId":"chao890"},"content":"**Case 1: Employee with ID exists**","lastModifiedDate":"2022-10-29"},{"lineNumber":297,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":298,"author":{"gitId":"chao890"},"content":"If Coydir has an employee with the respective ID, Coydir will delete it.","lastModifiedDate":"2022-10-29"},{"lineNumber":299,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":300,"author":{"gitId":"chao890"},"content":"**Case 2: Employee with ID does not exist**","lastModifiedDate":"2022-10-29"},{"lineNumber":301,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":302,"author":{"gitId":"chao890"},"content":"Otherwise, if Coydir has no employee with ID that matches the specified name, Coydir will prompt users that the employee ID entered is invalid.","lastModifiedDate":"2022-10-29"},{"lineNumber":303,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":304,"author":{"gitId":"kevinchangjk"},"content":"Format: `delete ID`","lastModifiedDate":"2022-10-29"},{"lineNumber":305,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":306,"author":{"gitId":"kevinchangjk"},"content":"Example:","lastModifiedDate":"2022-10-29"},{"lineNumber":307,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":308,"author":{"gitId":"kevinchangjk"},"content":"- `delete 1` deletes the employee with employee ID of 1.","lastModifiedDate":"2022-10-29"},{"lineNumber":309,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":310,"author":{"gitId":"kevinchangjk"},"content":"#### Adding multiple employees at once: `batch-add`","lastModifiedDate":"2022-11-01"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"prit3010"},"content":"Adds multiple employees to Coydir by importing their data from `.csv` file","lastModifiedDate":"2022-11-01"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"prit3010"},"content":"This feature will come in handy when:","lastModifiedDate":"2022-11-01"},{"lineNumber":315,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":316,"author":{"gitId":"prit3010"},"content":"1. You are a new user and have your employee data stored in a `.csv` file.","lastModifiedDate":"2022-11-01"},{"lineNumber":317,"author":{"gitId":"prit3010"},"content":"2. There has been a recruitment cycle and the company has recruited multiple employees.","lastModifiedDate":"2022-11-01"},{"lineNumber":318,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":319,"author":{"gitId":"prit3010"},"content":"With this feature, you would not need to spend time to manually add each employee in!","lastModifiedDate":"2022-11-01"},{"lineNumber":320,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":321,"author":{"gitId":"prit3010"},"content":"Format: `batch-add FILENAME`","lastModifiedDate":"2022-11-01"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"prit3010"},"content":"Example:`batch-add coydir.csv`","lastModifiedDate":"2022-11-01"},{"lineNumber":324,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":325,"author":{"gitId":"prit3010"},"content":"How can you use this feature?","lastModifiedDate":"2022-11-01"},{"lineNumber":326,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":327,"author":{"gitId":"prit3010"},"content":"#### Step 1 (Creating CSV file) :","lastModifiedDate":"2022-11-01"},{"lineNumber":328,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":329,"author":{"gitId":"prit3010"},"content":"Things to note:","lastModifiedDate":"2022-11-01"},{"lineNumber":330,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":331,"author":{"gitId":"prit3010"},"content":"- A header row is required to indicate the purpose of the field and must be the first row in the `.csv` file.","lastModifiedDate":"2022-11-01"},{"lineNumber":332,"author":{"gitId":"prit3010"},"content":"- No commas to be used in the file.","lastModifiedDate":"2022-11-01"},{"lineNumber":333,"author":{"gitId":"prit3010"},"content":"- For multiple tags for an employee, the tags should be separated by \" \\ \".","lastModifiedDate":"2022-11-01"},{"lineNumber":334,"author":{"gitId":"prit3010"},"content":"- For the fields, make sure that they follow the same specifications as written in the `add` command.","lastModifiedDate":"2022-11-01"},{"lineNumber":335,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":336,"author":{"gitId":"prit3010"},"content":"Order of headers is as such (**Order must be followed**):","lastModifiedDate":"2022-11-01"},{"lineNumber":337,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":338,"author":{"gitId":"prit3010"},"content":"| Index | Field          | Requirement    | Default Value |","lastModifiedDate":"2022-11-01"},{"lineNumber":339,"author":{"gitId":"kevinchangjk"},"content":"| ----- | -------------- | -------------- | ------------- |","lastModifiedDate":"2022-11-01"},{"lineNumber":340,"author":{"gitId":"prit3010"},"content":"| 1.    | `NAME`         | **Compulsory** | -             |","lastModifiedDate":"2022-11-01"},{"lineNumber":341,"author":{"gitId":"prit3010"},"content":"| 2.    | `PHONE`        | Optional       | N/A           |","lastModifiedDate":"2022-11-01"},{"lineNumber":342,"author":{"gitId":"prit3010"},"content":"| 3.    | `EMAIL`        | Optional       | N/A           |","lastModifiedDate":"2022-11-01"},{"lineNumber":343,"author":{"gitId":"prit3010"},"content":"| 4.    | `POSITION`     | **Compulsory** | -             |","lastModifiedDate":"2022-11-01"},{"lineNumber":344,"author":{"gitId":"prit3010"},"content":"| 5.    | `DEPARTMENT`   | **Compulsory** | -             |","lastModifiedDate":"2022-11-01"},{"lineNumber":345,"author":{"gitId":"prit3010"},"content":"| 6.    | `ADDRESS`      | Optional       | N/A           |","lastModifiedDate":"2022-11-01"},{"lineNumber":346,"author":{"gitId":"prit3010"},"content":"| 7.    | `NO_OF_LEAVES` | Optional       | 14            |","lastModifiedDate":"2022-11-01"},{"lineNumber":347,"author":{"gitId":"prit3010"},"content":"| 8.    | `TAGS`         | Optional       | _None_        |","lastModifiedDate":"2022-11-01"},{"lineNumber":348,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":349,"author":{"gitId":"prit3010"},"content":"Sample `.csv` file:","lastModifiedDate":"2022-11-01"},{"lineNumber":350,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":351,"author":{"gitId":"prit3010"},"content":"![](images/batch-add-images/sampleCSV.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":352,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":353,"author":{"gitId":"prit3010"},"content":"Sample `.xlsx` file:","lastModifiedDate":"2022-11-01"},{"lineNumber":354,"author":{"gitId":"prit3010"},"content":"![](images/batch-add-images/SampleExcel.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":355,"author":{"gitId":"prit3010"},"content":"Note: You can export this to `.csv`.","lastModifiedDate":"2022-11-01"},{"lineNumber":356,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":357,"author":{"gitId":"prit3010"},"content":"#### Step 2 (Uploading CSV file) :","lastModifiedDate":"2022-11-01"},{"lineNumber":358,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":359,"author":{"gitId":"prit3010"},"content":"1. Go to the folder where you stored the `jar` file.","lastModifiedDate":"2022-11-01"},{"lineNumber":360,"author":{"gitId":"prit3010"},"content":"2. Move CSV file to the `data` folder.","lastModifiedDate":"2022-11-01"},{"lineNumber":361,"author":{"gitId":"prit3010"},"content":"   ![](images/batch-add-images/movingFile.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":362,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":363,"author":{"gitId":"prit3010"},"content":"_If you are a new user (have not run any command yet), you will not see the `data` folder.","lastModifiedDate":"2022-11-01"},{"lineNumber":364,"author":{"gitId":"prit3010"},"content":"You can run the [`clear` command](#clearing-the-data--clear) to remove the sample employees first.","lastModifiedDate":"2022-11-01"},{"lineNumber":365,"author":{"gitId":"prit3010"},"content":"After this, you should be able to see the `data` folder._","lastModifiedDate":"2022-11-01"},{"lineNumber":366,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":367,"author":{"gitId":"prit3010"},"content":"#### Step 3 (Running CSV file) :","lastModifiedDate":"2022-11-01"},{"lineNumber":368,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":369,"author":{"gitId":"prit3010"},"content":"1. Once done, run `batch-add FILENAME` in the command box.","lastModifiedDate":"2022-11-01"},{"lineNumber":370,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":371,"author":{"gitId":"prit3010"},"content":"Successful Batch Add:","lastModifiedDate":"2022-11-01"},{"lineNumber":372,"author":{"gitId":"prit3010"},"content":"![](images/batch-add-images/BatchAddSuccess.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":373,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":374,"author":{"gitId":"prit3010"},"content":"Unsuccessful Batch Add:","lastModifiedDate":"2022-11-01"},{"lineNumber":375,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":376,"author":{"gitId":"prit3010"},"content":"In the case of an unsuccessful Batch Add, **NONE** of the employees in the `.csv` will be added.","lastModifiedDate":"2022-11-01"},{"lineNumber":377,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":378,"author":{"gitId":"prit3010"},"content":"**Case 1 (Duplicate Employee):**","lastModifiedDate":"2022-11-01"},{"lineNumber":379,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":380,"author":{"gitId":"prit3010"},"content":"If there is another employee with the same name in the database or in the csv, command will fail","lastModifiedDate":"2022-11-01"},{"lineNumber":381,"author":{"gitId":"prit3010"},"content":"and error will be raised.","lastModifiedDate":"2022-11-01"},{"lineNumber":382,"author":{"gitId":"prit3010"},"content":"![](images/batch-add-images/DuplicateEmployee.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":383,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":384,"author":{"gitId":"prit3010"},"content":"**Case 2 (Any of the fields in wrong format):**","lastModifiedDate":"2022-11-01"},{"lineNumber":385,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":386,"author":{"gitId":"prit3010"},"content":"If any of the fields are in a wrong format (as specified in `add` command), command will fail","lastModifiedDate":"2022-11-01"},{"lineNumber":387,"author":{"gitId":"prit3010"},"content":"and error with regard to field in the wrong format will be raised","lastModifiedDate":"2022-11-01"},{"lineNumber":388,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":389,"author":{"gitId":"prit3010"},"content":"![](images/batch-add-images/Incorrect Format.png)","lastModifiedDate":"2022-11-01"},{"lineNumber":390,"author":{"gitId":"prit3010"},"content":"_In this case, a `Phone` field was in the wrong format._","lastModifiedDate":"2022-11-01"},{"lineNumber":391,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":392,"author":{"gitId":"prit3010"},"content":"As of version `1.4.0` , this feature only supports `.csv` files and adding employees with the fields mentioned above.","lastModifiedDate":"2022-11-01"},{"lineNumber":393,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":394,"author":{"gitId":"prit3010"},"content":"In the upcoming versions, we will expand `batch-add` feature to:","lastModifiedDate":"2022-11-01"},{"lineNumber":395,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":396,"author":{"gitId":"prit3010"},"content":"1. Support different types of files","lastModifiedDate":"2022-11-01"},{"lineNumber":397,"author":{"gitId":"prit3010"},"content":"2. Include more fields like rating etc.","lastModifiedDate":"2022-11-01"},{"lineNumber":398,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":399,"author":{"gitId":"kevinchangjk"},"content":"#### View details of an employee: `view`","lastModifiedDate":"2022-10-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"chao890"},"content":"Views the details of an existing employee in the current list.","lastModifiedDate":"2022-10-13"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"chao890"},"content":"Format: `view INDEX`","lastModifiedDate":"2022-10-13"},{"lineNumber":404,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":405,"author":{"gitId":"chao890"},"content":"Example:","lastModifiedDate":"2022-10-13"},{"lineNumber":406,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":407,"author":{"gitId":"chao890"},"content":"- `view 2` returns the details of the second employee in the current list.","lastModifiedDate":"2022-10-13"},{"lineNumber":408,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":409,"author":{"gitId":"ngshijun"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-31"},{"lineNumber":410,"author":{"gitId":"ngshijun"},"content":"Note that an INDEX is different from an ID. More information about the difference in INDEX and ID can be found on the FAQ page.","lastModifiedDate":"2022-10-31"},{"lineNumber":411,"author":{"gitId":"ngshijun"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":412,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":413,"author":{"gitId":"kevinchangjk"},"content":"#### Listing all employees: `list`","lastModifiedDate":"2022-10-29"},{"lineNumber":414,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":415,"author":{"gitId":"kevinchangjk"},"content":"Shows a list of all employees in the company.","lastModifiedDate":"2022-10-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2022-10-29"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"kevinchangjk"},"content":"#### Finding an employee: `find`","lastModifiedDate":"2022-10-29"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":421,"author":{"gitId":"kevinchangjk"},"content":"Once you get familiar with Coydir and batch-adding numerous employees into the database, using `list` simply isn\u0027t sufficient to look for the right employee.","lastModifiedDate":"2022-10-30"},{"lineNumber":422,"author":{"gitId":"kevinchangjk"},"content":"The `find` command is a specific, precise function meant for searching through your employee directory.","lastModifiedDate":"2022-10-30"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":424,"author":{"gitId":"kevinchangjk"},"content":"You can find employees by searching for:","lastModifiedDate":"2022-10-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":426,"author":{"gitId":"kevinchangjk"},"content":"- Name","lastModifiedDate":"2022-10-30"},{"lineNumber":427,"author":{"gitId":"kevinchangjk"},"content":"- Position","lastModifiedDate":"2022-10-30"},{"lineNumber":428,"author":{"gitId":"kevinchangjk"},"content":"- Department","lastModifiedDate":"2022-10-30"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":430,"author":{"gitId":"kevinchangjk"},"content":"Or any combination of the above. Coydir will then display all employees that fulfill your search criteria.","lastModifiedDate":"2022-10-30"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":432,"author":{"gitId":"kevinchangjk"},"content":"Format: `find [n/NAME_KEYWORD] [j/POSITION_KEYWORD] [d/DEPARTMENT_KEYWORD]`","lastModifiedDate":"2022-10-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"kevinchangjk"},"content":"| Field        | TAG | Description                               | Requirement  | Default Value |","lastModifiedDate":"2022-10-30"},{"lineNumber":435,"author":{"gitId":"kevinchangjk"},"content":"| ------------ | --- | ----------------------------------------- | ------------ | ------------- |","lastModifiedDate":"2022-10-30"},{"lineNumber":436,"author":{"gitId":"kevinchangjk"},"content":"| `NAME`       | n/  | Search keyword for name of employee       | **Optional** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":437,"author":{"gitId":"kevinchangjk"},"content":"| `POSITION`   | j/  | Search keyword for position of employee   | **Optional** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":438,"author":{"gitId":"kevinchangjk"},"content":"| `DEPARTMENT` | d/  | Search keyword for department of employee | **Optional** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":440,"author":{"gitId":"kevinchangjk"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-31"},{"lineNumber":441,"author":{"gitId":"kevinchangjk"},"content":"##### Important Tips!","lastModifiedDate":"2022-10-31"},{"lineNumber":442,"author":{"gitId":"kevinchangjk"},"content":"  - There must be _at least one_ parameter (and keyword) in the search, else Coydir will not know what to search for!","lastModifiedDate":"2022-10-31"},{"lineNumber":443,"author":{"gitId":"kevinchangjk"},"content":"  - The keywords you input for searching are **case-insensitive**. Additionally, they need not be full words, just a segment will do. This means that searching for the department \"tech\" will show results for both \"Technology and \"Information Technology\".","lastModifiedDate":"2022-10-31"},{"lineNumber":444,"author":{"gitId":"kevinchangjk"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-30"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":446,"author":{"gitId":"chao890"},"content":"Example:","lastModifiedDate":"2022-10-13"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":448,"author":{"gitId":"kevinchangjk"},"content":"![Find Command - Example](./images/ui-screenshots/find-example.png)","lastModifiedDate":"2022-10-31"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":450,"author":{"gitId":"kevinchangjk"},"content":"- `find j/officer d/Management` displays 2 employees, who are \"Officers\" in the \"General Management\" department.","lastModifiedDate":"2022-10-30"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"kevinchangjk"},"content":"![Find Command - Example](./images/ui-screenshots/find-example2.png)","lastModifiedDate":"2022-10-31"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":454,"author":{"gitId":"kevinchangjk"},"content":"- `find n/Roy j/Design d/Tech` displays 1 employee, \"Roy Balakrishnan\" who is a \"UI/UX Designer\" in the \"Information Technology\" department.","lastModifiedDate":"2022-10-31"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"kevinchangjk"},"content":"### Managing Employee Leaves","lastModifiedDate":"2022-10-29"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":458,"author":{"gitId":"kevinchangjk"},"content":"Employee leave management can sometimes be a surprisingly _tedious_ matter to tackle.","lastModifiedDate":"2022-10-30"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":460,"author":{"gitId":"kevinchangjk"},"content":"However, with Coydir, we can help you to ensure your **company operations run smoothly**, while your **employees get adequate opportunities** to rest and attend to personal matters.","lastModifiedDate":"2022-10-29"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":462,"author":{"gitId":"kevinchangjk"},"content":"Here is how we support you in leave management.","lastModifiedDate":"2022-10-29"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":464,"author":{"gitId":"chao890"},"content":"#### Controlling total leave for an employee","lastModifiedDate":"2022-10-29"},{"lineNumber":465,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":466,"author":{"gitId":"chao890"},"content":"You can set the total leave available for an **incoming new** employee when adding them to the database. This can be done by including the optional leave field, `l/`, when using the `add` command.","lastModifiedDate":"2022-10-29"},{"lineNumber":467,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":468,"author":{"gitId":"chao890"},"content":"Example: `add n/Yi Long Ma j/Chief Operating Officer d/General Management l/20` adds an employee, and specifies his **total leave** to be **20**.","lastModifiedDate":"2022-10-29"},{"lineNumber":469,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":470,"author":{"gitId":"chao890"},"content":"You can also edit the total leave available for an **existing** employee by using the `edit` command, and editing the `l/` tag for an employee.","lastModifiedDate":"2022-10-30"},{"lineNumber":471,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":472,"author":{"gitId":"chao890"},"content":"Example: `edit 1 l/10` edits the total leave of the **first** employee in the current list to be **10**.","lastModifiedDate":"2022-10-29"},{"lineNumber":473,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":474,"author":{"gitId":"chao890"},"content":"#### Checking if an employee is on leave","lastModifiedDate":"2022-10-29"},{"lineNumber":475,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":476,"author":{"gitId":"chao890"},"content":"There are two ways to check for the live availability of employees.","lastModifiedDate":"2022-10-29"},{"lineNumber":477,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":478,"author":{"gitId":"chao890"},"content":"1. First is using the `view-department` command: `view-department general management` opens up a table to show all the employees of the general management department. The number of employees in the department that are available or on leave will be shown.","lastModifiedDate":"2022-10-29"},{"lineNumber":479,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":480,"author":{"gitId":"chao890"},"content":"2. The other way is using the `view` command, or simply just clicking on the profile card of a specific employee: `view 1`, or clicking on the first person card in the current list of employees, opens up the full information of the employee on the right hand side of the screen. You will be able to check if they are on leave by looking for the \"On Leave\" field.","lastModifiedDate":"2022-10-29"},{"lineNumber":481,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":482,"author":{"gitId":"chao890"},"content":"#### Adding a leave period for an employee: `add-leave`","lastModifiedDate":"2022-10-29"},{"lineNumber":483,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":484,"author":{"gitId":"chao890"},"content":"This adds a leave period to an employee given the employee ID and a start and end date. The leave period will also be displayed in a table which can be seen when viewing the employee\u0027s particulars.","lastModifiedDate":"2022-10-29"},{"lineNumber":485,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":486,"author":{"gitId":"chao890"},"content":"This command results in one of two cases below:","lastModifiedDate":"2022-10-26"},{"lineNumber":487,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":488,"author":{"gitId":"chao890"},"content":"**Case 1: Valid ID, date and sufficient leaves**","lastModifiedDate":"2022-10-26"},{"lineNumber":489,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":490,"author":{"gitId":"chao890"},"content":"If the employee exists, the leave date given is valid,","lastModifiedDate":"2022-10-26"},{"lineNumber":491,"author":{"gitId":"chao890"},"content":"and the employee has sufficient leaves, the leave period will be added and shown in the table of leaves The total leaves remaining will be deducted accordingly. The employee\u0027s \"On Leave\" status will become \"True\" when the timeframe is within the leave period.","lastModifiedDate":"2022-10-29"},{"lineNumber":492,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":493,"author":{"gitId":"chao890"},"content":"**Case 2: Invalid ID, date or insufficient leaves**","lastModifiedDate":"2022-10-26"},{"lineNumber":494,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":495,"author":{"gitId":"chao890"},"content":"If any of employee ID, date is invalid, or the employee does not possess enough leaves, Coydir will prompt the users accordingly, and the command will not execute.","lastModifiedDate":"2022-10-26"},{"lineNumber":496,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":497,"author":{"gitId":"prit3010"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-28"},{"lineNumber":498,"author":{"gitId":"chao890"},"content":"Leaves are ordered by reverse chronological order in the table view.","lastModifiedDate":"2022-10-29"},{"lineNumber":499,"author":{"gitId":"prit3010"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":500,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":501,"author":{"gitId":"chao890"},"content":"Format: `add-leave id/ID sd/START_DATE ed/END_DATE`","lastModifiedDate":"2022-10-29"},{"lineNumber":502,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":503,"author":{"gitId":"kevinchangjk"},"content":"| Field        | TAG | Description                               | Requirement    | Default Value |","lastModifiedDate":"2022-10-31"},{"lineNumber":504,"author":{"gitId":"kevinchangjk"},"content":"| ------------ | --- | ----------------------------------------- | -------------- | ------------- |","lastModifiedDate":"2022-10-31"},{"lineNumber":505,"author":{"gitId":"kevinchangjk"},"content":"| `ID`         | id/ | Employee ID                               | **Compulsory** | N.A.          |","lastModifiedDate":"2022-10-31"},{"lineNumber":506,"author":{"gitId":"kevinchangjk"},"content":"| `START_DATE` | sd/ | Start date of leave, in dd-MM-YYYY format | **Compulsory** | N.A.          |","lastModifiedDate":"2022-10-31"},{"lineNumber":507,"author":{"gitId":"kevinchangjk"},"content":"| `END_DATE`   | ed/ | End date of leave, in dd-MM-YYYY format   | **Compulsory** | N.A.          |","lastModifiedDate":"2022-10-31"},{"lineNumber":508,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":509,"author":{"gitId":"chao890"},"content":"Example:","lastModifiedDate":"2022-10-26"},{"lineNumber":510,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":511,"author":{"gitId":"chao890"},"content":"- `add-leave id/1 sd/01-01-2022 ed/01-01-2022` adds a leave period to an employee of ID 1 with a leave period from 01-01-2022 to 01-01-2022 of 1 day.","lastModifiedDate":"2022-10-29"},{"lineNumber":512,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":513,"author":{"gitId":"chao890"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":514,"author":{"gitId":"chao890"},"content":"  \u003cimg src\u003d\"./images/ui-screenshots/addLeaveCommandOutcome.png\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":515,"author":{"gitId":"chao890"},"content":"  \u003cbr\u003e\u003cem\u003eResult of adding leave successfully from example given\u003c/em\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":516,"author":{"gitId":"chao890"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":517,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":518,"author":{"gitId":"chao890"},"content":"#### Deleting a leave period for an employee: `delete-leave`","lastModifiedDate":"2022-10-29"},{"lineNumber":519,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":520,"author":{"gitId":"chao890"},"content":"Added a wrong leave period or the employee wants to change their leave application? Fret not, `delete-leave` helps you to removes a leave period for an employee given the employee ID and index of leave in the table. The leave period deleted will then be removed from the leave table.","lastModifiedDate":"2022-10-29"},{"lineNumber":521,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":522,"author":{"gitId":"chao890"},"content":"This command results in one of two cases below:","lastModifiedDate":"2022-10-26"},{"lineNumber":523,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":524,"author":{"gitId":"chao890"},"content":"**Case 1: Valid ID and index of leave**","lastModifiedDate":"2022-10-26"},{"lineNumber":525,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":526,"author":{"gitId":"chao890"},"content":"If the employee exists, the index given is valid, the leave period at that index of the list of leaves will be removed for the particular employee.","lastModifiedDate":"2022-10-26"},{"lineNumber":527,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":528,"author":{"gitId":"chao890"},"content":"**Case 2: Invalid ID, or index**","lastModifiedDate":"2022-10-26"},{"lineNumber":529,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":530,"author":{"gitId":"chao890"},"content":"If the employee ID, or the index is invalid, Coydir will prompt the users accordingly, and the command will not execute.","lastModifiedDate":"2022-10-26"},{"lineNumber":531,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":532,"author":{"gitId":"chao890"},"content":"Format: `delete-leave id/ID i/INDEX`","lastModifiedDate":"2022-10-29"},{"lineNumber":533,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":534,"author":{"gitId":"kevinchangjk"},"content":"| Field   | TAG | Description                       | Requirement    | Default Value |","lastModifiedDate":"2022-10-31"},{"lineNumber":535,"author":{"gitId":"kevinchangjk"},"content":"| ------- | --- | --------------------------------- | -------------- | ------------- |","lastModifiedDate":"2022-10-31"},{"lineNumber":536,"author":{"gitId":"prit3010"},"content":"| `ID`    | id/ | Employee ID                       | **Compulsory** | N.A.          |","lastModifiedDate":"2022-11-01"},{"lineNumber":537,"author":{"gitId":"kevinchangjk"},"content":"| `INDEX` | i/  | Index of leave in the leave table | **Compulsory** | N.A.          |","lastModifiedDate":"2022-10-31"},{"lineNumber":538,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":539,"author":{"gitId":"chao890"},"content":"Example:","lastModifiedDate":"2022-10-26"},{"lineNumber":540,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":541,"author":{"gitId":"chao890"},"content":"- `delete-leave id/1 i/1` deletes the first leave period for an employee of ID 1 in the table of leaves.","lastModifiedDate":"2022-10-29"},{"lineNumber":542,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":543,"author":{"gitId":"chao890"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":544,"author":{"gitId":"chao890"},"content":"  \u003cimg src\u003d\"./images/ui-screenshots/deleteLeaveCommandOutcome.png\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":545,"author":{"gitId":"chao890"},"content":"  \u003cbr\u003e\u003cem\u003eResult of deleting leave successfully from example given\u003c/em\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":546,"author":{"gitId":"chao890"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":547,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":548,"author":{"gitId":"kevinchangjk"},"content":"### Managing Employee Performance","lastModifiedDate":"2022-10-29"},{"lineNumber":549,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":550,"author":{"gitId":"kevinchangjk"},"content":"Understanding the performance of your employees is crucial for _talent development_ in the company.","lastModifiedDate":"2022-10-30"},{"lineNumber":551,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":552,"author":{"gitId":"kevinchangjk"},"content":"Key performance indicators, productivity, and progression policies may differ from company to company.","lastModifiedDate":"2022-10-29"},{"lineNumber":553,"author":{"gitId":"kevinchangjk"},"content":"Here, Coydir offers a **simple yet powerful** way of keeping track of and making sense of your employees\u0027 performance in the company.","lastModifiedDate":"2022-10-29"},{"lineNumber":554,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":555,"author":{"gitId":"Kok-je"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":556,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":557,"author":{"gitId":"Kok-je"},"content":"**:information_source: Note:** 5-point rating scale.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":558,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":559,"author":{"gitId":"Kok-je"},"content":"The 5 point performance appraisal ratings system is the most commonly used performance rating scale across the world.","lastModifiedDate":"2022-10-31"},{"lineNumber":560,"author":{"gitId":"Kok-je"},"content":"A 1 to 5 rating scale has a total of 5 categories with 2 negative and 2 positive options. A middle option is a neutral option for those who have met the expectations in terms of work performance. This rating scale is well-defined with a separate category for the employees who neither fall in the below expectations (requiring performance review) nor in the exceeds expectations categories.","lastModifiedDate":"2022-10-31"},{"lineNumber":561,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":562,"author":{"gitId":"Kok-je"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":563,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":564,"author":{"gitId":"kevinchangjk"},"content":"#### Rating the performance of an employee: `rate`","lastModifiedDate":"2022-10-29"},{"lineNumber":565,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":566,"author":{"gitId":"Kok-je"},"content":"Rate the performance of an employee given the employee ID and a numeric rating.","lastModifiedDate":"2022-10-28"},{"lineNumber":567,"author":{"gitId":"Kok-je"},"content":"Ratings can take any values from 1 - 5, and it should not be blank.","lastModifiedDate":"2022-10-28"},{"lineNumber":568,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":569,"author":{"gitId":"Kok-je"},"content":"The numeric representation of the ratings follows as such:","lastModifiedDate":"2022-10-28"},{"lineNumber":570,"author":{"gitId":"Kok-je"},"content":"5: Outstanding | 4: Exceeds Expectations | 3: Satisfactory | 2: Needs Improvement | 1: Unsatisfactory","lastModifiedDate":"2022-10-28"},{"lineNumber":571,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":572,"author":{"gitId":"Kok-je"},"content":"This command results in one of two cases below:","lastModifiedDate":"2022-10-28"},{"lineNumber":573,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":574,"author":{"gitId":"Kok-je"},"content":"**Case 1: Valid ID and rating**","lastModifiedDate":"2022-10-28"},{"lineNumber":575,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":576,"author":{"gitId":"Kok-je"},"content":"If the employee exists, and the rating given is valid (is a number from 1-5 inclusive), the performance rating will be added and the performance field of the employee will be updated accordingly.","lastModifiedDate":"2022-10-31"},{"lineNumber":577,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":578,"author":{"gitId":"Kok-je"},"content":"**Case 2: Invalid ID or rating**","lastModifiedDate":"2022-10-28"},{"lineNumber":579,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":580,"author":{"gitId":"Kok-je"},"content":"If the rating given for any employee is invalid (is not an integer from 1-5 inclusive), Coydir will prompt the users accordingly, and the command will not execute.","lastModifiedDate":"2022-10-31"},{"lineNumber":581,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":582,"author":{"gitId":"Kok-je"},"content":"Format: `rate id/ID r/RATING`","lastModifiedDate":"2022-10-28"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":584,"author":{"gitId":"kevinchangjk"},"content":"| Field    | TAG | Description                    | Requirement    | Default Value |","lastModifiedDate":"2022-10-31"},{"lineNumber":585,"author":{"gitId":"kevinchangjk"},"content":"| -------- | --- | ------------------------------ | -------------- | ------------- |","lastModifiedDate":"2022-10-31"},{"lineNumber":586,"author":{"gitId":"kevinchangjk"},"content":"| `ID`     | id/ | Employee ID                    | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":587,"author":{"gitId":"kevinchangjk"},"content":"| `RATING` | r/  | Performance rating of employee | **Compulsory** | -             |","lastModifiedDate":"2022-10-31"},{"lineNumber":588,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":589,"author":{"gitId":"Kok-je"},"content":"Example:","lastModifiedDate":"2022-10-28"},{"lineNumber":590,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":591,"author":{"gitId":"Kok-je"},"content":"- `rate id/1 r/3` adds a performance rating to an employee of ID 1 with a rating of 3: Satisfactory.","lastModifiedDate":"2022-10-28"},{"lineNumber":592,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":593,"author":{"gitId":"kevinchangjk"},"content":"#### Employee Performance History","lastModifiedDate":"2022-10-29"},{"lineNumber":594,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":595,"author":{"gitId":"Kok-je"},"content":"In each employee profile below their current performance rating field, there is a performance history line graph showing all their past `ratings` over time, marked by a `value` and `timestamp`. The line graph allows the user to appreciate the employee\u0027s performance trend, and make key decisions regarding talent development.","lastModifiedDate":"2022-10-31"},{"lineNumber":596,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":597,"author":{"gitId":"Kok-je"},"content":"The individual rating values will be displayed beside each node in the performance rating graph. This makes it clearer for users to visualize an employee\u0027s overall performance at a glance.","lastModifiedDate":"2022-10-31"},{"lineNumber":598,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":599,"author":{"gitId":"Kok-je"},"content":"![Performance History Graph](./images/ui-screenshots/performance-history-graph.jpg)","lastModifiedDate":"2022-11-02"},{"lineNumber":600,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":601,"author":{"gitId":"Kok-je"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":602,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":603,"author":{"gitId":"kevinchangjk"},"content":"**:information_source: Note:** You can only rate the performance of an employee once per day.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":604,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":605,"author":{"gitId":"kevinchangjk"},"content":"- Rating an employee who already has a `Rating` with `timestamp` of that same day with the `rate` command will throw a `employee already rated` error.","lastModifiedDate":"2022-10-31"},{"lineNumber":606,"author":{"gitId":"kevinchangjk"},"content":"- This is to prevent multiple ratings per day, and avoid a distorted performance history graph.","lastModifiedDate":"2022-10-31"},{"lineNumber":607,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":608,"author":{"gitId":"Kok-je"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":609,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":610,"author":{"gitId":"kevinchangjk"},"content":"### Managing Departments","lastModifiedDate":"2022-10-29"},{"lineNumber":611,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":612,"author":{"gitId":"kevinchangjk"},"content":"Apart from supporting the core HR functions, Coydir also supports _department-level management_, for other manpower staff and executives (_department heads, operations planning, etc._).","lastModifiedDate":"2022-10-30"},{"lineNumber":613,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":614,"author":{"gitId":"kevinchangjk"},"content":"With these features, we offer a view that is broader than an individual employee profile and more specific than the full directory.","lastModifiedDate":"2022-10-29"},{"lineNumber":615,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":616,"author":{"gitId":"chao890"},"content":"Complete with **real-time statistics and analytics**, Coydir makes department management much simpler. With these information, HR can easily observe the structure of a particular department, track the number of currently available employees for better tasks delegation, or even perform a department restructure to improve the overall efficiency of the company.","lastModifiedDate":"2022-10-31"},{"lineNumber":617,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":618,"author":{"gitId":"ngshijun"},"content":"Currently, our application only provides a list of default departments for the user to choose from. Future update will include customizable department name. Our current list of valid departments are:","lastModifiedDate":"2022-10-31"},{"lineNumber":619,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":620,"author":{"gitId":"ngshijun"},"content":"- Administration","lastModifiedDate":"2022-10-31"},{"lineNumber":621,"author":{"gitId":"ngshijun"},"content":"- Board of Directors","lastModifiedDate":"2022-10-31"},{"lineNumber":622,"author":{"gitId":"ngshijun"},"content":"- Customer Service","lastModifiedDate":"2022-10-31"},{"lineNumber":623,"author":{"gitId":"ngshijun"},"content":"- Finance","lastModifiedDate":"2022-10-31"},{"lineNumber":624,"author":{"gitId":"ngshijun"},"content":"- General Management","lastModifiedDate":"2022-10-31"},{"lineNumber":625,"author":{"gitId":"ngshijun"},"content":"- Human Resources","lastModifiedDate":"2022-10-31"},{"lineNumber":626,"author":{"gitId":"ngshijun"},"content":"- Information Technology","lastModifiedDate":"2022-10-31"},{"lineNumber":627,"author":{"gitId":"ngshijun"},"content":"- Legal","lastModifiedDate":"2022-10-31"},{"lineNumber":628,"author":{"gitId":"ngshijun"},"content":"- Marketing","lastModifiedDate":"2022-10-31"},{"lineNumber":629,"author":{"gitId":"ngshijun"},"content":"- Operations","lastModifiedDate":"2022-10-31"},{"lineNumber":630,"author":{"gitId":"ngshijun"},"content":"- Product Management","lastModifiedDate":"2022-10-31"},{"lineNumber":631,"author":{"gitId":"ngshijun"},"content":"- Production","lastModifiedDate":"2022-10-31"},{"lineNumber":632,"author":{"gitId":"ngshijun"},"content":"- Quality Assurance","lastModifiedDate":"2022-10-31"},{"lineNumber":633,"author":{"gitId":"ngshijun"},"content":"- Research and Development","lastModifiedDate":"2022-10-31"},{"lineNumber":634,"author":{"gitId":"ngshijun"},"content":"- Sales","lastModifiedDate":"2022-10-31"},{"lineNumber":635,"author":{"gitId":"ngshijun"},"content":"- Technology","lastModifiedDate":"2022-10-31"},{"lineNumber":636,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":637,"author":{"gitId":"chao890"},"content":"#### View details of a department: `view-department`","lastModifiedDate":"2022-10-31"},{"lineNumber":638,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":639,"author":{"gitId":"kevinchangjk"},"content":"View the summarized details of a department given the name of the department.","lastModifiedDate":"2022-10-29"},{"lineNumber":640,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":641,"author":{"gitId":"ngshijun"},"content":"Details include the number of employee in that particular department, employees who are currently available, employees who are currently on leave, and a table of employees in that department with their corresponding performance ratings and availability.","lastModifiedDate":"2022-10-31"},{"lineNumber":642,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":643,"author":{"gitId":"chao890"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":644,"author":{"gitId":"chao890"},"content":"  \u003cimg src\u003d\"images/ui-screenshots/view_department.png\"\u003e\u003c/img\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":645,"author":{"gitId":"chao890"},"content":"  \u003cbr\u003e\u003cem\u003eResult of view-department on General Management\u003c/em\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":646,"author":{"gitId":"chao890"},"content":"\u003c/p\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":647,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":648,"author":{"gitId":"chao890"},"content":"Format: `view-department DEPARTMENT`","lastModifiedDate":"2022-10-31"},{"lineNumber":649,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":650,"author":{"gitId":"kevinchangjk"},"content":"Example:","lastModifiedDate":"2022-10-29"},{"lineNumber":651,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":652,"author":{"gitId":"chao890"},"content":"- `view-department Finance` displays a brief summary of the Finance department\u0027s details on the right panel.","lastModifiedDate":"2022-10-31"},{"lineNumber":653,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":654,"author":{"gitId":"ngshijun"},"content":"This command results in one of the two cases below:","lastModifiedDate":"2022-10-31"},{"lineNumber":655,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":656,"author":{"gitId":"ngshijun"},"content":"**Case 1: Valid department name**","lastModifiedDate":"2022-10-31"},{"lineNumber":657,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":658,"author":{"gitId":"ngshijun"},"content":"If the department exists, the right panel will correctly displays the summary of the department.","lastModifiedDate":"2022-10-31"},{"lineNumber":659,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":660,"author":{"gitId":"ngshijun"},"content":"**Case 2: Invalid department name**","lastModifiedDate":"2022-10-31"},{"lineNumber":661,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":662,"author":{"gitId":"ngshijun"},"content":"If the department name is invalid, the program will notify you through the result box, with a list of valid department name for easier reference.","lastModifiedDate":"2022-10-31"},{"lineNumber":663,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":664,"author":{"gitId":"ngshijun"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2022-10-31"},{"lineNumber":665,"author":{"gitId":"ngshijun"},"content":"DEPARTMENT is case-insensitive.","lastModifiedDate":"2022-10-31"},{"lineNumber":666,"author":{"gitId":"ngshijun"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":667,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":668,"author":{"gitId":"kevinchangjk"},"content":"### Additional Features","lastModifiedDate":"2022-10-29"},{"lineNumber":669,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":670,"author":{"gitId":"kevinchangjk"},"content":"To wrap up, let us take a look at a couple of additional features that give _a little boost_ to your HR management on Coydir.","lastModifiedDate":"2022-10-30"},{"lineNumber":671,"author":{"gitId":"kevinchangjk"},"content":"These features and techniques serve to make your usage of the application **smoother, easier, and more flexible**.","lastModifiedDate":"2022-10-29"},{"lineNumber":672,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":673,"author":{"gitId":"kevinchangjk"},"content":"#### Getting help: `help`","lastModifiedDate":"2022-10-30"},{"lineNumber":674,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":675,"author":{"gitId":"kevinchangjk"},"content":"If you have read the full User Guide up to this point, well done!","lastModifiedDate":"2022-10-30"},{"lineNumber":676,"author":{"gitId":"kevinchangjk"},"content":"There can be a lot of information to take in, so if you ever _feel lost_ while using Coydir, getting help with the commands is just a simple step away.","lastModifiedDate":"2022-10-30"},{"lineNumber":677,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":678,"author":{"gitId":"kevinchangjk"},"content":"Entering the `help` command will open up window with the command summary for the various functions of the application, and if you have more doubts, the _Help Window_ also contains a button to open up this User Guide in your browser.","lastModifiedDate":"2022-10-30"},{"lineNumber":679,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":680,"author":{"gitId":"kevinchangjk"},"content":"Format: `help`","lastModifiedDate":"2022-10-30"},{"lineNumber":681,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":682,"author":{"gitId":"kevinchangjk"},"content":"With this command, you should see a window like this appear.","lastModifiedDate":"2022-10-30"},{"lineNumber":683,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":684,"author":{"gitId":"kevinchangjk"},"content":"**[Insert screenshot of updated Help Window]**","lastModifiedDate":"2022-10-30"},{"lineNumber":685,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-30"},{"lineNumber":686,"author":{"gitId":"kevinchangjk"},"content":"#### Exiting the program: `exit`","lastModifiedDate":"2022-10-29"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"kevinchangjk"},"content":"#### Clearing the data: `clear`","lastModifiedDate":"2022-10-29"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":694,"author":{"gitId":"kevinchangjk"},"content":"Clears all the data currently stored in the database.","lastModifiedDate":"2022-10-28"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":696,"author":{"gitId":"prit3010"},"content":"If you are a new user, you can use this command after you have experimented with Coydir","lastModifiedDate":"2022-11-01"},{"lineNumber":697,"author":{"gitId":"prit3010"},"content":"to start keying in your actual employee information.","lastModifiedDate":"2022-11-01"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":699,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2022-11-01"},{"lineNumber":700,"author":{"gitId":"prit3010"},"content":"Once you run this command, you lose all data immediately.","lastModifiedDate":"2022-11-01"},{"lineNumber":701,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":703,"author":{"gitId":"kevinchangjk"},"content":"Format: `clear`","lastModifiedDate":"2022-10-28"},{"lineNumber":704,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":705,"author":{"gitId":"kevinchangjk"},"content":"#### Saving the data","lastModifiedDate":"2022-10-29"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"prit3010"},"content":"Coydir data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-30"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"kevinchangjk"},"content":"#### Editing the data file","lastModifiedDate":"2022-10-29"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":711,"author":{"gitId":"kevinchangjk"},"content":"Coydir data are saved as a JSON file `[JAR file location]/data/database.json`.","lastModifiedDate":"2022-11-04"},{"lineNumber":712,"author":{"gitId":"kevinchangjk"},"content":"It is possible to manipulate data by editing the data file directly, but even for advanced users, we **strongly discourage** making any changes to the data file.","lastModifiedDate":"2022-11-04"},{"lineNumber":713,"author":{"gitId":"kevinchangjk"},"content":"If you still choose to do so, we cannot guarantee that Coydir continues to support your HR operations smoothly.","lastModifiedDate":"2022-11-04"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":715,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":716,"author":{"gitId":"prit3010"},"content":"If your changes to the data file makes its format invalid, Coydir will discard all data and start with an empty data file at the next run. ","lastModifiedDate":"2022-09-30"},{"lineNumber":717,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":719,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"prit3010"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Coydir home folder.","lastModifiedDate":"2022-09-30"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"ngshijun"},"content":"**Q**: What is the difference between an INDEX and an ID?\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":727,"author":{"gitId":"ngshijun"},"content":"**A**: INDEX is the numbering of current showing list of employees, while ID represents the **unique** employee id of the employee.","lastModifiedDate":"2022-10-31"},{"lineNumber":728,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":729,"author":{"gitId":"ngshijun"},"content":"**Q**: How do I change the rating of an employee?\u003cbr\u003e","lastModifiedDate":"2022-10-31"},{"lineNumber":730,"author":{"gitId":"ngshijun"},"content":"**A**: You can easily change the rating of an employee by using the `rate` command and adjust the RATING accordingly. Do note that it\u0027s impossible for you to change the past rating of an employee.","lastModifiedDate":"2022-10-31"},{"lineNumber":731,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-31"},{"lineNumber":732,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"kevinchangjk"},"content":"| Action              | Format, Examples                                                                                                                                                                     |","lastModifiedDate":"2022-09-27"},{"lineNumber":737,"author":{"gitId":"kevinchangjk"},"content":"| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |","lastModifiedDate":"2022-11-01"},{"lineNumber":738,"author":{"gitId":"kevinchangjk"},"content":"| **Add**             | `add n/NAME j/POSITION d/DEPARTMENT p/PHONE e/EMAIL a/ADDRESS l/LEAVE [t/TAG]…​` \u003cbr\u003e e.g. `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate p/1234567 l/14 t/criminal` |","lastModifiedDate":"2022-11-01"},{"lineNumber":739,"author":{"gitId":"kevinchangjk"},"content":"| **Edit**            | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [j/POSITION] [d/DEPARTMENT] [a/ADDRESS] [l/LEAVE] [t/TAG]…​` \u003cbr\u003e e.g. `edit 1 p/91234567 t/friend e/newemail@example.com`                  |","lastModifiedDate":"2022-11-01"},{"lineNumber":740,"author":{"gitId":"kevinchangjk"},"content":"| **Delete**          | `delete INDEX`\u003cbr\u003e e.g. `delete 3`                                                                                                                                                   |","lastModifiedDate":"2022-10-31"},{"lineNumber":741,"author":{"gitId":"kevinchangjk"},"content":"| **Batch Add**       | `batch-add FILENAME` \u003cbr\u003e e.g. `batch-add newemployees.csv`                                                                                                                          |","lastModifiedDate":"2022-11-01"},{"lineNumber":742,"author":{"gitId":"ngshijun"},"content":"| **View Details**    | `view INDEX` \u003cbr\u003e e.g. `view 1`                                                                                                                                                      |","lastModifiedDate":"2022-10-31"},{"lineNumber":743,"author":{"gitId":"kevinchangjk"},"content":"| **List**            | `list`                                                                                                                                                                               |","lastModifiedDate":"2022-10-31"},{"lineNumber":744,"author":{"gitId":"kevinchangjk"},"content":"| **Find**            | `find [n/NAME] [j/POSITION] [d/DEPARTMENT]`\u003cbr\u003e e.g. `find n/John j/engineer d/Tech`                                                                                                 |","lastModifiedDate":"2022-10-26"},{"lineNumber":745,"author":{"gitId":"chao890"},"content":"| **Add leave**       | `add-leave id/ID sd/START_DATE ed/END_DATE`\u003cbr\u003e e.g. `add-leave id/1 sd/01-01-2022 ed/02-01-2022`                                                                                    |","lastModifiedDate":"2022-10-30"},{"lineNumber":746,"author":{"gitId":"chao890"},"content":"| **Delete leave**    | `delete-leave id/ID i/INDEX`\u003cbr\u003e e.g. `delete-leave id/1 i/3`                                                                                                                        |","lastModifiedDate":"2022-10-30"},{"lineNumber":747,"author":{"gitId":"kevinchangjk"},"content":"| **Rate**            | `rate id/ID r/RATING`\u003cbr\u003e e.g. `rate id/1 r/3`                                                                                                                                       |","lastModifiedDate":"2022-11-01"},{"lineNumber":748,"author":{"gitId":"kevinchangjk"},"content":"| **View Department** | `view-department DEPARTMENT`\u003cbr\u003e e.g. `view-department Finance`                                                                                                                      |","lastModifiedDate":"2022-11-01"},{"lineNumber":749,"author":{"gitId":"kevinchangjk"},"content":"| **Help**            | `help`                                                                                                                                                                               |","lastModifiedDate":"2022-10-31"},{"lineNumber":750,"author":{"gitId":"kevinchangjk"},"content":"| **Exit**            | `exit`                                                                                                                                                                               |","lastModifiedDate":"2022-10-31"},{"lineNumber":751,"author":{"gitId":"kevinchangjk"},"content":"| **Clear**           | `clear`                                                                                                                                                                              |","lastModifiedDate":"2022-10-31"}],"authorContributionMap":{"ngshijun":52,"Kok-je":49,"kevinchangjk":299,"chao890":115,"prit3010":125,"-":111}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"body,","lastModifiedDate":"2022-09-26"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"h1,","lastModifiedDate":"2022-09-26"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"h2,","lastModifiedDate":"2022-09-26"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"h3,","lastModifiedDate":"2022-09-26"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"h4,","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"h5,","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"h6,","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"p,","lastModifiedDate":"2022-09-26"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"blockquote,","lastModifiedDate":"2022-09-26"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"pre,","lastModifiedDate":"2022-09-26"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"hr,","lastModifiedDate":"2022-09-26"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"dl,","lastModifiedDate":"2022-09-26"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"dd,","lastModifiedDate":"2022-09-26"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"ol,","lastModifiedDate":"2022-09-26"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"ul,","lastModifiedDate":"2022-09-26"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"figure {","lastModifiedDate":"2022-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height}","lastModifiedDate":"2022-09-26"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    $base-font-family;","lastModifiedDate":"2022-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"h1,","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"h2,","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"h3,","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"h4,","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"h5,","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"h6,","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"p,","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"blockquote,","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"pre,","lastModifiedDate":"2022-09-26"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"ul,","lastModifiedDate":"2022-09-26"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"ol,","lastModifiedDate":"2022-09-26"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"dl,","lastModifiedDate":"2022-09-26"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"figure,","lastModifiedDate":"2022-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"ul,","lastModifiedDate":"2022-09-26"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"ol {","lastModifiedDate":"2022-09-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"h1,","lastModifiedDate":"2022-09-26"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"h2,","lastModifiedDate":"2022-09-26"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"h3,","lastModifiedDate":"2022-09-26"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"h4,","lastModifiedDate":"2022-09-26"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"h5,","lastModifiedDate":"2022-09-26"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"h6 {","lastModifiedDate":"2022-09-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"kevinchangjk"},"content":"  i,","lastModifiedDate":"2022-09-26"},{"lineNumber":166,"author":{"gitId":"kevinchangjk"},"content":"  em {","lastModifiedDate":"2022-09-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"kevinchangjk"},"content":"  th,","lastModifiedDate":"2022-09-26"},{"lineNumber":263,"author":{"gitId":"kevinchangjk"},"content":"  td {","lastModifiedDate":"2022-09-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":299,"author":{"gitId":"kevinchangjk"},"content":"    content: \"Coydir\";","lastModifiedDate":"2022-09-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"kevinchangjk":44,"-":258}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"Kok-je"},"content":"  color: #6d3ae4;","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  order-radius : $alert-border-radius;","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kok-je":1,"-":33}},{"path":"docs/_sass/minima/custom-variables.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow overriding predefined variables smoothly.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"//Bootstrap\u0027s default","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"$white:    #fff !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$gray-100: #f8f9fa !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$gray-200: #e9ecef !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$gray-300: #dee2e6 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$gray-400: #ced4da !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$gray-500: #adb5bd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$gray-600: #6c757d !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$gray-700: #495057 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$gray-800: #343a40 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"$gray-900: #212529 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$black:    #000 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"$blue:    #750dfd !default;","lastModifiedDate":"2022-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"$indigo:  #6610f2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$purple:  #6f42c1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$pink:    #d63384 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$red:     #dc3545 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$orange:  #fd7e14 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"$yellow:  #ffb907 !default;","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"$green:   #28a74e !default;","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$teal:    #20c997 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Kok-je"},"content":"$cyan:    #21bbd3 !default;","lastModifiedDate":"2022-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"$primary:       $blue !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"$secondary:     $gray-600 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"$success:       $green !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"$info:          $cyan !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"$warning:       $yellow !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"$danger:        $red !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"$light:         $gray-100 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"$dark:          $gray-800 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"$theme-colors: (","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \"primary\":    $primary,","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \"secondary\":  $secondary,","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \"success\":    $success,","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \"info\":       $info,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \"warning\":    $warning,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \"danger\":     $danger,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \"light\":      $light,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \"dark\":       $dark","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":") !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"$theme-color-interval: 8% !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"$body-bg:                   $white !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"$body-color:                $gray-900 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"$body-text-align:           null !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"$enable-gradients: true;","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"// Define alert colors, border radius, and padding.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"$border-radius:               .25rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"$border-width:                1px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"$font-weight-bold:            700 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"$alert-padding-y:                   .75rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"$alert-padding-x:                   1.25rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"$alert-margin-bottom:               1rem !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"$alert-border-radius:               $border-radius !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"$alert-link-font-weight:            $font-weight-bold !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"$alert-border-width:                $border-width !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"$alert-bg-level:                    -10 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"$alert-border-level:                -9 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"$alert-color-level:                 6 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"// Request a color level","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"// scss-docs-start color-level","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@function color-level($color: $primary, $level: 0) {","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  $color-base: if($level \u003e 0, $black, $white);","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  $level: abs($level);","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  @return mix($color-base, $color, $level * $theme-color-interval);","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kok-je":4,"-":72}},{"path":"docs/_sass/minima/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Define defaults for each variable.","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$base-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$code-font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$base-font-size:   16px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"$base-font-weight: 500 !default;","lastModifiedDate":"2022-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$small-font-size:  $base-font-size * 0.875 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$spacing-unit:     30px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$table-text-align: left !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Width of the content area","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$content-width:    800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$on-palm:          600px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$on-laptop:        800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$on-medium:        $on-palm !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$on-large:         $on-laptop !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Use media queries like this:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//   .wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//   }","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"// }","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"@mixin media-query($device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @content;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \"minima/custom-mixins\",    // Hook to add custom mixins.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \"minima/base\",             // Defines element resets.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \"minima/layout\",           // Defines structure and style based on CSS selectors.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \"minima/custom-styles\"     // Hook to override existing styles.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":";","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kok-je":1,"-":50}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(database)","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"prit3010":1,"-":37}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"title: Coydir","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"[![Java CI](https://github.com/AY2223S1-CS2103T-T15-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S1-CS2103T-T15-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"[![codecov](https://codecov.io/gh/AY2223S1-CS2103T-T15-1/tp/branch/master/graph/badge.svg?token\u003dELUB36KYBS)](https://codecov.io/gh/AY2223S1-CS2103T-T15-1/tp)","lastModifiedDate":"2022-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"![Ui](images/ui-screenshots/Ui.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"Coydir is a desktop application used by Human Resource Executives to manage their employee database and streamline data collection.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"It is made simpler with a easy-to-use graphical user interface(GUI) and can also be accessed through your Command Line Interface(CLI).","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"**Other Links:**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"* If you are interested in using Coydir, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"* If you are interested about developing Coydir, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Kok-je":4,"kevinchangjk":2,"prit3010":4,"-":13}},{"path":"docs/team/chao890.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chao890"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"chao890"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"title: Chao Yung\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"chao890"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"### Project: Coydir","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"chao890"},"content":"**Coydir is a desktop application used by Human Resource Executives to streamline processes in managing their staffing.** The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"chao890"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"chao890"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":14,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"chao890"},"content":"#### Enhancements Implemented","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"chao890"},"content":"* **New Features**","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"chao890"},"content":"  * Implemented `add-leave` feature","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"chao890"},"content":"    * Created a `AddLeaveCommand` class to handle the logic (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/commands/AddLeaveCommand.java)) ","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"chao890"},"content":"    and `AddLeaveCommandParser` class to handle the parsing of the user input (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/parser/AddLeaveCommandParser.java)).","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"chao890"},"content":"    * Use Case: User can add leave periods for employees.","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"chao890"},"content":"    * Justification: With this command, users of Coydir will be able to keep track of employee leave periods and their availability at all times.","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"    * Highlights: This command was slightly tricky to implement, as there were many cases to consider, such as overlapping leaves, or insufficient leaves.","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"chao890"},"content":"  * Implemented `delete-leave` feature","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"chao890"},"content":"    * Created a `DeleteLeaveCommand` class to handle the logic (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/commands/DeleteLeaveCommand.java))","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"    and `DeleteLeaveCommandParser` class to handle the parsing of the user input (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/parser/DeleteLeaveCommandParser.java)).","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"chao890"},"content":"    * Use Case: User can delete leave periods for employees.","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"chao890"},"content":"    * Justification: With this command, users of Coydir will be able to make changes easily when employees change their leave periods.","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"chao890"},"content":"    * Highlights: Smoother to implement, though just like `add-leave`, there were many dependencies and many files to be edited.","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"chao890"},"content":"* **Existing Features**","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"chao890"},"content":"  * Made improvements to the `Leave` class by storing `Leave` objects in a priority queue, and add methods to check for overlapping or equal leaves.","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"chao890"},"content":"  * Refactored `Delete` command.","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"chao890"},"content":"  * Fixed multiple bugs (Refer to #109, #130, #140, #235).","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"chao890"},"content":"#### Contributions to the UG","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"chao890"},"content":"* Added documentation for following parts:","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"chao890"},"content":"  * `add-leave` command","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"chao890"},"content":"  * `delete-leave` command","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"chao890"},"content":"  * `delete` command","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"chao890"},"content":"  * Quickstart","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"chao890"},"content":"  * Controlling total leave for an employee section","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"chao890"},"content":"  * Checking if an employee is on leave section","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"chao890"},"content":"  * Links to table of content","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"chao890"},"content":"#### Contributions to the DG","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"chao890"},"content":"* Edited implementation details for:","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"chao890"},"content":"  * `delete`","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"chao890"},"content":"* Added implementation details for:","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"chao890"},"content":"  * [To Be Updated]","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"chao890"},"content":"#### Contributions to the team-based tasks","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"chao890"},"content":"* Helped to create and distribute issues.","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"chao890"},"content":"* Contributed to manual testing of application to find bugs.","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"chao890"},"content":"* Oversaw documentation work.","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"chao890"},"content":"#### Reviewing Contributions","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"chao890"},"content":"* Pull Requests reviewed:","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"chao890"},"content":"  * [#63](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/63)","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"chao890"},"content":"  * [#111](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/111)","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"chao890"},"content":"  * [#119](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/119)","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"chao890"},"content":"  * [#143](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/143)","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"chao890"},"content":"  * [#225](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/225)","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"chao890"},"content":"  * [#226](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/226)","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"chao890":62,"kevinchangjk":1}},{"path":"docs/team/kevinchangjk.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"title: Kevin Chang\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"# Project: Coydir","lastModifiedDate":"2022-11-02"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"**Coydir is a desktop application used by Human Resource Executives to streamline processes in managing their staffing.** The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"### Enhancements Implemented","lastModifiedDate":"2022-11-02"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"- **New Features**","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"  - Implemented Employee ID system","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    - Created an `EmployeeId` class to represent the unique ID of an employee in the company. The implementation can be seen [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/model/person/EmployeeId.java).","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    - Use Case: User can distinguish employees through a distinct number.","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    - Justification: This attribute of the employee completely removes any ambiguity of `Person` objects, as well as any possibility of duplicate employees recognised during commands.","lastModifiedDate":"2022-11-02"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    - Highlights: As a field with restrictions placed due to its uniquenes, it lacks modular depth as compared to other basic `Person` fields such as `Name` or `Phone`. It is also much harder to ensure smooth usage and testing due to its widespread implications.","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"  - Built home page","lastModifiedDate":"2022-11-02"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    - Created a simple home page with our logo.","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"    - Use Case: User will see the home page on startup, and for commands that do not need to display extra information.","lastModifiedDate":"2022-11-02"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    - Justification: Provides a nicer viewing for the user, and a smoother usage as opposed to blank screens.","lastModifiedDate":"2022-11-02"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    - Highlights: It was surprisingly difficult to adjust the positioning of the elements.","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"- **Existing Features**","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"  - Upgraded `find` function","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"    - Created a `Department` class for another dimension of categorization. Then modified `find` to build a search filter that can comprise of name, department, and/or job position.","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    - Use Case: User can search for employees with varying levels of specificity.","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    - Justification: With this command, users of Coydir will be able to look up information on specific employees or group of employees quickly.","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    - Highlights: Relatively easier to implement than the Employee ID system.","lastModifiedDate":"2022-11-02"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"  - Upgraded help window","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"    - Changed the default help window to provide a command summary. Additionally, instead of a button that copies the URL into register, the button opens the User Guide in the default browser of the user.","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    - Use Case: User can now use the help window as a quick reference, and if need be, open up the User Guide for further information.","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    - Justification: The help window now provides more utility, and accessing the User Guide is made faster and simpler.","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    - Highlights: Implementing the function to open the User Guide in browser was slightly complex, and needed some workarounds. Building the interface for the help window was also particularly challenging.","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"  - Refactor `edit` function","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"  - Fixed multiple bugs (Refer to #150, #151, #232, #233).","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"### Contributions to the UG","lastModifiedDate":"2022-11-02"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"- Restructured the document into current segments","lastModifiedDate":"2022-11-02"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"- Added documentation for following parts:","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"  - Introduction and Logo","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"  - Employee Profile","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"  - `find` command","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"  - `edit` command","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"  - `help` command","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"### Contributions to the DG","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"- Edited implementation details for:","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"  - `find`","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"- Added implementation details for:","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"  - [To Be Updated]","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"- Helped to create and distribute issues.","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"- Contributed to manual testing of application to find bugs.","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"- Oversaw backend development and upheld code quality.","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"### Reviewing Contributions","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"- Pull Requests reviewed:","lastModifiedDate":"2022-11-02"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"  - [#40](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/40)","lastModifiedDate":"2022-11-02"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"  - [#41](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/41)","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"  - [#42](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/42)","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"  - [#43](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/43)","lastModifiedDate":"2022-11-02"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"  - [#49](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/49)","lastModifiedDate":"2022-11-02"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"  - [#50](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/50)","lastModifiedDate":"2022-11-02"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"  - [#51](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/51)","lastModifiedDate":"2022-11-02"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"  - [#54](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/54)","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"  - [#57](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/57)","lastModifiedDate":"2022-11-02"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"  - [#63](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/63)","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"  - [#64](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/64)","lastModifiedDate":"2022-11-02"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"  - [#66](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/66)","lastModifiedDate":"2022-11-02"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"  - [#67](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/67)","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"  - [#69](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/69)","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"  - [#71](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/71)","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"  - [#74](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/74)","lastModifiedDate":"2022-11-02"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"  - [#82](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/82)","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"  - [#83](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/83)","lastModifiedDate":"2022-11-02"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"  - [#87](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/87)","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"  - [#91](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/91)","lastModifiedDate":"2022-11-02"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"  - [#92](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/92)","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"  - [#109](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/109)","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"  - [#110](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/110)","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"  - [#111](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/111)","lastModifiedDate":"2022-11-02"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"  - [#112](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/112)","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"  - [#113](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/113)","lastModifiedDate":"2022-11-02"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"  - [#114](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/114)","lastModifiedDate":"2022-11-02"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"  - [#115](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/115)","lastModifiedDate":"2022-11-02"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"  - [#118](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/118)","lastModifiedDate":"2022-11-02"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"  - [#119](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/119)","lastModifiedDate":"2022-11-02"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"  - [#120](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/120)","lastModifiedDate":"2022-11-02"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"  - [#121](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/121)","lastModifiedDate":"2022-11-02"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"  - [#122](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/122)","lastModifiedDate":"2022-11-02"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"  - [#123](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/123)","lastModifiedDate":"2022-11-02"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"  - [#126](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/126)","lastModifiedDate":"2022-11-02"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"  - [#130](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/130)","lastModifiedDate":"2022-11-02"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"  - [#133](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/133)","lastModifiedDate":"2022-11-02"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"  - [#152](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/152)","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"  - [#221](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/221)","lastModifiedDate":"2022-11-02"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"  - [#223](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/223)","lastModifiedDate":"2022-11-02"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"  - [#227](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/227)","lastModifiedDate":"2022-11-02"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"  - [#230](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/230)","lastModifiedDate":"2022-11-02"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"  - [#231](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/231)","lastModifiedDate":"2022-11-02"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"  - [#235](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/235)","lastModifiedDate":"2022-11-02"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"  - [#236](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/236)","lastModifiedDate":"2022-11-02"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"  - [#237](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/237)","lastModifiedDate":"2022-11-02"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"  - [#239](https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/239)","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"kevinchangjk":123}},{"path":"docs/team/kok-je.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Kok-je"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"Kok-je"},"content":"layout: page","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"Kok-je"},"content":"title: Shawn Kok\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"Kok-je"},"content":"---","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"Kok-je"},"content":"### Project: Coydir","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"**Coydir is a desktop application used by Human Resource Executives to streamline processes in managing their staffing.**","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"Kok-je"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"## Contributions","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":"---","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"\u003e[RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dKok-je\u0026tabRepo\u003dAY2223S1-CS2103T-T15-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-04"},{"lineNumber":16,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"#### Enhancements Implemented","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":"* **New Features**","lastModifiedDate":"2022-11-04"},{"lineNumber":19,"author":{"gitId":"Kok-je"},"content":"  * Implemented `Rating` class","lastModifiedDate":"2022-11-04"},{"lineNumber":20,"author":{"gitId":"Kok-je"},"content":"    * Created the `Rating` class, one of the key components we are tracking in our application.","lastModifiedDate":"2022-11-04"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"    * Use Case: Building blocks to track Employee Performance over time in the form of rating values.","lastModifiedDate":"2022-11-04"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"    * Justification: Tracking performance for talent development is one of the more important components of HRM.","lastModifiedDate":"2022-11-04"},{"lineNumber":23,"author":{"gitId":"Kok-je"},"content":"    * Highlights: Was not too challenging other than the part about ensuring the format for values and timestamps, and writing into `JSON Adapted Person`.","lastModifiedDate":"2022-11-04"},{"lineNumber":24,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":25,"author":{"gitId":"Kok-je"},"content":"  * Implemented `rate` feature","lastModifiedDate":"2022-11-04"},{"lineNumber":26,"author":{"gitId":"Kok-je"},"content":"    * Created a `RateCommand` class to handle the logic (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/commands/RateCommand.java)) ","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"Kok-je"},"content":"    and `RateCommandParser` class to handle the parsing of the user input (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/parser/RateCommandParser.java)).","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"Kok-je"},"content":"    * Use Case: User can add ratings for employees.","lastModifiedDate":"2022-11-04"},{"lineNumber":29,"author":{"gitId":"Kok-je"},"content":"    * Justification: With this command, users of Coydir will be able to rate the performance of an employee based on a 1-5 integer rating scale:","lastModifiedDate":"2022-11-04"},{"lineNumber":30,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":31,"author":{"gitId":"Kok-je"},"content":"        [5: Outstanding | 4: Exceeds Expectations | 3: Satisfactory | 2: Needs Improvement | 1: Unsatisfactory]","lastModifiedDate":"2022-11-04"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"    * Highlights: This command was slightly tricky to implement, as there were many cases to consider, such as ensuring that ratings are always sorted by the local date format (if the user modifies the JSON database).","lastModifiedDate":"2022-11-04"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":34,"author":{"gitId":"Kok-je"},"content":"  * Implemented `Performance history graph` feature","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"    * Created a `performanceHistory` Arraylist within the `Person` class to store all the past ratings of a particular employee (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/model/person/Person.java))","lastModifiedDate":"2022-11-04"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"    * Created a `Performance history graph` line chart within the `Personinfo` class to chart the performance rating values of employees against time (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/ui/PersonInfo.java))","lastModifiedDate":"2022-11-04"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"    * Use Case: User can view the performance history of employees.","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"    * Justification: With this command, users of Coydir will be able to observe the overall trend of a particular employee\u0027s performance, and make talent development decisions based on that insight.","lastModifiedDate":"2022-11-04"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"    * Highlights: Was slightly challenging to present the JavaFX line chart data in a presentable format, displaying individual rating values beside each node, implementing logic to prevent multiple ratings in a day (prevent weird straight vertical line graph), and ensuring that the rating values are sorted by ascending order in the graph.","lastModifiedDate":"2022-11-04"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"* **Existing Features**","lastModifiedDate":"2022-11-04"},{"lineNumber":42,"author":{"gitId":"Kok-je"},"content":"  * Made improvements to the `Add` class by implementing variable arguments (`varags`) for particular non-compulsory fields.","lastModifiedDate":"2022-11-04"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"  * Refactored `Add` command.","lastModifiedDate":"2022-11-04"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"  * Fixed multiple bugs (Refer to #84, #200, #227, #242).","lastModifiedDate":"2022-11-04"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"Kok-je"},"content":"#### Contributions to the UG","lastModifiedDate":"2022-11-04"},{"lineNumber":47,"author":{"gitId":"Kok-je"},"content":"* Added documentation for following parts:","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"Kok-je"},"content":"  * Introduction catchy hook","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"  * Product Overview and Description","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"Kok-je"},"content":"  * `add` command","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"Kok-je"},"content":"  * `rate` command","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"Kok-je"},"content":"  * Employee Performance History section","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"Kok-je"},"content":"  * Checking if an employee is on leave section","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"Kok-je"},"content":"  * Overall aesthetics of UG page","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":56,"author":{"gitId":"Kok-je"},"content":"#### Contributions to the DG","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"Kok-je"},"content":"* Edited implementation details for:","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"Kok-je"},"content":"  * `add`","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"Kok-je"},"content":"* Added implementation details for:","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"Kok-je"},"content":"  * `rate`","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"Kok-je"},"content":"  * [To Be Updated]","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"Kok-je"},"content":"#### Contributions to the team-based tasks","lastModifiedDate":"2022-11-04"},{"lineNumber":64,"author":{"gitId":"Kok-je"},"content":"* Helped to create and distribute issues.","lastModifiedDate":"2022-11-04"},{"lineNumber":65,"author":{"gitId":"Kok-je"},"content":"* Contributed to manual testing of application to find bugs.","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"Kok-je"},"content":"* Influenced the overall aesthetic of the project through mockups and design direction","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"Kok-je"},"content":"* Was in-charge of testing and Integration","lastModifiedDate":"2022-11-04"},{"lineNumber":68,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":69,"author":{"gitId":"Kok-je"},"content":"#### Reviewing Contributions","lastModifiedDate":"2022-11-04"},{"lineNumber":70,"author":{"gitId":"Kok-je"},"content":"* Pull Requests reviewed:","lastModifiedDate":"2022-11-04"},{"lineNumber":71,"author":{"gitId":"Kok-je"},"content":"  * [#92] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/92)","lastModifiedDate":"2022-11-04"},{"lineNumber":72,"author":{"gitId":"Kok-je"},"content":"  * [#113] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/113)","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"Kok-je"},"content":"  * [#116] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/116)","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"Kok-je"},"content":"  * [#144] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/144)","lastModifiedDate":"2022-11-04"},{"lineNumber":75,"author":{"gitId":"Kok-je"},"content":"  * [#150] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/150)","lastModifiedDate":"2022-11-04"},{"lineNumber":76,"author":{"gitId":"Kok-je"},"content":"  * [#224] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/224)","lastModifiedDate":"2022-11-04"},{"lineNumber":77,"author":{"gitId":"Kok-je"},"content":"  * [#225] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/225)","lastModifiedDate":"2022-11-04"},{"lineNumber":78,"author":{"gitId":"Kok-je"},"content":"  * [#241] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/241)","lastModifiedDate":"2022-11-04"},{"lineNumber":79,"author":{"gitId":"Kok-je"},"content":"  * [#243] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/243)","lastModifiedDate":"2022-11-04"}],"authorContributionMap":{"Kok-je":79}},{"path":"docs/team/ngshijun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"layout: page","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"title: Ng Shi Jun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"---","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"### Project: Coydir","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"**Coydir is a desktop application used by Human Resource Executives to streamline processes in managing their staffing.** The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":10,"author":{"gitId":"ngshijun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"To be updated.","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"ngshijun":14}},{"path":"docs/team/prit3010.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"layout: page","lastModifiedDate":"2022-09-26"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"title: Prittam Ravi\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-26"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"---","lastModifiedDate":"2022-09-26"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"### Project: Coydir","lastModifiedDate":"2022-09-26"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"**Coydir is a desktop application used by Human Resource Executives to streamline processes in managing their staffing.**","lastModifiedDate":"2022-11-02"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"Coydir is a project adapted from AddressBook - Level 3.","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2022-09-26"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"### Summary of Contributions","lastModifiedDate":"2022-11-02"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"---","lastModifiedDate":"2022-11-02"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"#### Code Contributed","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"[RepoSense Link](https://nus-cs2103-ay2223s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2022-09-16\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dprit3010\u0026tabRepo\u003dAY2223S1-CS2103T-T15-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"#### Enhancements Implemented","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"* **New Features**","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"  * Implemented `batch-add` feature.","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"    * Created a `BatchAddCommand` class to handle the logic (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/commands/BatchAddCommand.java))","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    and `BatchAddCommandParser` class to handle the parsing of the user input (Refer to code [here](https://github.com/AY2223S1-CS2103T-T15-1/tp/blob/master/src/main/java/coydir/logic/parser/BatchAddCommandParser.java)).","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"    * Use Case: User can add multiple employees at once if they have the data in the form of a `.csv` file.","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    * Why: Without this command, users will have to manually input each employee using an add command.","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"    This is especially troublesome when the user has to transfer their database over or if there has been a","lastModifiedDate":"2022-11-02"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"    recruitment cycle and they have multiple employees joining.","lastModifiedDate":"2022-11-02"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"    * Constraints: This implementation was rather difficult as it was rather different from all the commands","lastModifiedDate":"2022-11-02"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"    implemented before. Moreover, having to read from an external file made it a bit more difficult to test.","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    One functionality of this feature is that if there is any error, the command will be aborted","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    and the database will be reverted to previous state. This was a bit more tricky as the functions","lastModifiedDate":"2022-11-02"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"    only returned `ReadOnlyDatabase`. Therefore, I had to find a workaround for that.","lastModifiedDate":"2022-11-02"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"  * Implemented `Leave` class","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"    * Created the `Leave` class one of the key components we are tracking in our application.","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"    * Use Case: Building blocks to track stuff like leaves taken so far, whether employee is on leave etc.","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"    * Why: Tracking Leaves is one of the more important components of HRM.","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"    * Constraints: Was not too difficult other than the part about writing into `JSON Adapted Person`.","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"     which was slightly more complicated as I had to make sure that the Priority Queue of the `Leave` will","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"    be stored in the `database.json`.","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"* **Existing Features**","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"  * Removed all instances of `AddressBook` and changed it to `Database`.","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"  * Fixed multiple bugs (Refer to #120, #138, #142).","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"#### Contributions to the UG","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"* Added documentation for following parts:","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"  * `batch-add` command.","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"  * `clear` command.","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"  * `exit` command.","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"  * Navigating User Guide.","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"  * Interface Layout.","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"prit3010"},"content":"#### Contributions to the DG","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"* Added implementation details for:","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"  * Batch-Add function.","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"  * [To Be Updated]","lastModifiedDate":"2022-11-02"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"#### Contributions to the team-based tasks","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"* Helped to create and distribute issues.","lastModifiedDate":"2022-11-03"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"* Did manual testing of the application to find bugs.","lastModifiedDate":"2022-11-03"},{"lineNumber":65,"author":{"gitId":"prit3010"},"content":"* Was in-charge of keeping track of deadlines and division of labour.","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"prit3010"},"content":"#### Reviewing Contributions","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"* Pull Requests reviewed:","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"  * [#92] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/92)","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"  * [#116] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/116)","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"  * [#122] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/122)","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"  * [#143] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/143)","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"  * [#150] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/150)","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"  * [#226] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/226)","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"  * [#233] (https://github.com/AY2223S1-CS2103T-T15-1/tp/pull/233)","lastModifiedDate":"2022-11-02"}],"authorContributionMap":{"prit3010":75}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/coydir/logic/command` directory.","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"Create a `RemarkCommandParser` class in the `coydir.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2022-09-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"kevinchangjk"},"content":"Create a new `Remark` in `coydir.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2022-09-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"kevinchangjk"},"content":"Simply add the following to [`coydir.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-09-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"kevinchangjk":7,"-":394}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"The `address` field in `Person` is actually an instance of the `coydir.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kevinchangjk":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e — Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"- Table of Contents","lastModifiedDate":"2022-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"![ArchitectureDiagram](../images/diagrams/ArchitectureDiagram.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"../images/diagrams/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path _inside_ each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2022-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"1. Read the [_Architecture_ section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2022-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"   - If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2022-10-29"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"   - If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2022-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various _event-driven mechanisms_ used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2022-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"../images/diagrams/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `coydir.logic.Logic`.","lastModifiedDate":"2022-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"A quick look at the `coydir.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"\u003cimg src\u003d\"../images/diagrams/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"![`Find Usages` tool window. `Edit` \u003e `Find` \u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2022-10-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"   ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"   ...","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"       return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   ...","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":"   \u003cimg src\u003d\"../images/diagrams/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":193,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":211,"author":{"gitId":"kevinchangjk"},"content":"   - it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2022-10-29"},{"lineNumber":212,"author":{"gitId":"kevinchangjk"},"content":"   - it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"kevinchangjk"},"content":"     \u003cimg src\u003d\"../images/diagrams/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":216,"author":{"gitId":"kevinchangjk"},"content":"   - :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2022-10-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"kevinchangjk"},"content":"   \u003cimg src\u003d\"../images/diagrams/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":223,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":224,"author":{"gitId":"kevinchangjk"},"content":"   - :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2022-10-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"   **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"kevinchangjk"},"content":"   \u003cimg src\u003d\"../images/diagrams/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2022-10-29"},{"lineNumber":256,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":257,"author":{"gitId":"kevinchangjk"},"content":"   - :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2022-10-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"   **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"   public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"       requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"       resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kevinchangjk":33,"-":278}},{"path":"src/main/java/coydir/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.FileUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kevinchangjk":3,"-":61}},{"path":"src/main/java/coydir/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"kevinchangjk":1,"-":24}},{"path":"src/main/java/coydir/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Config;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Version;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.ConfigUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.StringUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.Logic;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.LogicManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.util.SampleDataUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"import coydir.storage.DatabaseStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"import coydir.storage.JsonDatabaseStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"import coydir.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import coydir.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"import coydir.storage.StorageManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import coydir.storage.UserPrefsStorage;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"import coydir.ui.Ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"import coydir.ui.UiManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, false);","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Coydir ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"        DatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(userPrefs.getDatabaseFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"        storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s database and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"     * The data from the sample database will be used instead if {@code storage}\u0027s database is not found,","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"     * or an empty database will be used instead if errors occur when reading {@code storage}\u0027s database.","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"prit3010"},"content":"        Optional\u003cReadOnlyDatabase\u003e databaseOptional;","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"        ReadOnlyDatabase initialData;","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"            databaseOptional \u003d storage.readDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"            if (!databaseOptional.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"                logger.info(\"Data file not found. Will be starting with a sample \");","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"prit3010"},"content":"            initialData \u003d databaseOptional.orElseGet(SampleDataUtil::getSampleDatabase);","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty database\");","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"            initialData \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty database\");","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"prit3010"},"content":"            initialData \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"prit3010"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Database\");","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"kevinchangjk"},"content":"        logger.info(\"Starting Coydir \" + MainApp.VERSION);","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Coydir ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":24,"prit3010":20,"-":139}},{"path":"src/main/java/coydir/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":1,"-":62}},{"path":"src/main/java/coydir/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    private static final double DEFAULT_HEIGHT \u003d 850;","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    private static final double DEFAULT_WIDTH \u003d 1100;","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":3,"-":76}},{"path":"src/main/java/coydir/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    private static final String LOG_FILE \u003d \"coydir.log\";","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":2,"-":110}},{"path":"src/main/java/coydir/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \" is an unknown command\";","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The employee ID provided is invalid\";","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":1,"chao890":1,"prit3010":1,"-":7}},{"path":"src/main/java/coydir/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":1,"-":115}},{"path":"src/main/java/coydir/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core.index;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kevinchangjk":1,"-":53}},{"path":"src/main/java/coydir/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.exceptions;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":1,"-":9}},{"path":"src/main/java/coydir/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.exceptions;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":1,"-":20}},{"path":"src/main/java/coydir/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.MainApp;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kevinchangjk":2,"-":40}},{"path":"src/main/java/coydir/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":1,"-":34}},{"path":"src/main/java/coydir/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Config;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kevinchangjk":3,"-":19}},{"path":"src/main/java/coydir/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":1,"-":82}},{"path":"src/main/java/coydir/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":3,"-":140}},{"path":"src/main/java/coydir/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":2,"-":66}},{"path":"src/main/java/coydir/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.CommandResult;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"     * Returns the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"     * @see coydir.model.Model#getDatabase()","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"    ReadOnlyDatabase getDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"    /** Returns an unmodifiable view of the whole list of persons */","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"    ObservableList\u003cPerson\u003e getUnfilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"     * Returns the user prefs\u0027 database file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ngshijun":3,"kevinchangjk":6,"prit3010":6,"-":38}},{"path":"src/main/java/coydir/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.Command;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.CommandResult;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"import coydir.logic.parser.DatabaseParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.storage.Storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    private final DatabaseParser databaseParser;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"        databaseParser \u003d new DatabaseParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"        Command command \u003d databaseParser.parseCommand(commandText);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"            storage.saveDatabase(model.getDatabase());","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"    public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"        return model.getDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ngshijun"},"content":"    public ObservableList\u003cPerson\u003e getUnfilteredPersonList() {","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"ngshijun"},"content":"        return model.getDatabase().getPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"        return model.getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ngshijun":4,"kevinchangjk":10,"prit3010":10,"-":62}},{"path":"src/main/java/coydir/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_LEAVE;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":" * Adds a person to the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the database. \\n\"","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"            + \"** Employee NAME, POSITION, and DEPARTMENT are required **\\n\"","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"            + PREFIX_POSITION + \"POSITION \"","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            + PREFIX_DEPARTMENT + \"DEPARTMENT \"","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"            + PREFIX_LEAVE + \"LEAVE \"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"            + PREFIX_POSITION + \"Recruiter \"","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"            + PREFIX_DEPARTMENT + \"Human Resources \"","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"            + PREFIX_LEAVE + \"20 \"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"%1$s already exists in the database\";","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"chao890"},"content":"        int currId \u003d EmployeeId.getCount();","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"chao890"},"content":"            EmployeeId.setCount(--currId);","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"prit3010"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_PERSON, toAdd.getName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":16,"chao890":3,"prit3010":7,"-":54}},{"path":"src/main/java/coydir/logic/commands/AddLeaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao890"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"chao890"},"content":"import java.util.List;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"chao890"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"chao890"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"chao890"},"content":"import coydir.model.person.Leave;","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"chao890"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"chao890"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"chao890"},"content":" * Add leave for employee","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"chao890"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"chao890"},"content":"public class AddLeaveCommand extends Command {","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    public static final String COMMAND_WORD \u003d \"add-leave\";","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"            + \": Adds a leave period to an employee.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"chao890"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"chao890"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"chao890"},"content":"            + PREFIX_STARTDATE + \"START DATE \"","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"chao890"},"content":"            + PREFIX_ENDDATE + \"END DATE \"","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"chao890"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"chao890"},"content":"            + PREFIX_ID + \"1 \"","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"            + PREFIX_STARTDATE + \"01-01-2022 \"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"            + PREFIX_ENDDATE + \"06-01-2022 \";","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_LEAVE_ADDED_SUCCESS \u003d \"Leave added successfully for %1$s\";","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_INSUFFICIENT_LEAVES \u003d \"The employee does not have enough leaves!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_DUPLICATE_LEAVE \u003d \"This leave period already exists\";","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_OVERLAPPING_LEAVE \u003d \"Overlapping leaves are not allowed\";","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"chao890"},"content":"    private EmployeeId targetId;","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"chao890"},"content":"    private Leave leave;","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"chao890"},"content":"     * Constructor for AddLeaveCommand object.","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"chao890"},"content":"     * @param targetid of the employee.","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"chao890"},"content":"     * @param leave Leave object to add.","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"chao890"},"content":"    public AddLeaveCommand(EmployeeId targetid, Leave leave) {","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"chao890"},"content":"        this.targetId \u003d targetid;","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"chao890"},"content":"        this.leave \u003d leave;","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"chao890"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":53,"author":{"gitId":"chao890"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-24"},{"lineNumber":54,"author":{"gitId":"chao890"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDatabase().getPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        Person targetPerson \u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"chao890"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"chao890"},"content":"            if (person.getEmployeeId().equals(targetId)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"                targetPerson \u003d person;","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"                break;","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"chao890"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        if (targetPerson \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        int leavesLeft \u003d targetPerson.getLeavesLeft();","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"        int totalDays \u003d leave.getTotalDays();","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"        if (leavesLeft \u003c totalDays) {","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"            throw new CommandException(MESSAGE_INSUFFICIENT_LEAVES);","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"        for (Leave otherLeave : targetPerson.getLeaves()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"            if (leave.equals(otherLeave)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_LEAVE);","lastModifiedDate":"2022-10-28"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"            } else if (leave.isOverlapping(otherLeave)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"                throw new CommandException(MESSAGE_OVERLAPPING_LEAVE);","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"chao890"},"content":"            }","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        targetPerson.addLeave(leave);","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        targetPerson.setLeavesLeft(leavesLeft - totalDays);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        return new CommandResult(String.format(MESSAGE_LEAVE_ADDED_SUCCESS, targetPerson.getName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"chao890"},"content":"    @Override","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"chao890"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"chao890"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"chao890"},"content":"                || (other instanceof AddLeaveCommand // instanceof handles nulls","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"chao890"},"content":"                \u0026\u0026 targetId.equals(((AddLeaveCommand) other).targetId)","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"chao890"},"content":"                \u0026\u0026 leave.equals(((AddLeaveCommand) other).leave)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"chao890"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"Kok-je":2,"chao890":67,"kevinchangjk":22,"prit3010":1}},{"path":"src/main/java/coydir/logic/commands/BatchAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"import static coydir.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_LIST;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"import java.io.FileReader;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"import coydir.logic.parser.AddCommandParser;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-16"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":" * Adds multiple person to the database","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"public class BatchAddCommand extends Command {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    public static final String COMMAND_WORD \u003d \"batch-add\";","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-16"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"            + \": Adds multiple people into the database from a csv file \\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"            + \"Parameters: filename (must be in the data folder of the repository and CSV format)\\n\"","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"            + \"Example: \" + COMMAND_WORD + \" coydir.csv\";","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Batch Add Success. %d employees were added\";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"File Not Found\";","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_MISSING_COMP_FIELDS \u003d \"Name, Position or Department is missing for one person!\";","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_NO_DATA \u003d \"%s does not have any data\";","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_DUPLICATE_FOUND \u003d \"One person in the list is found to be a duplicate. \"","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"            + \"Call aborted\";","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"    private final String filename;","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"    private Path filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"     * Creates an BatchAddCommand to add the multiple {@code Person}","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"    public BatchAddCommand(String filename) {","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"        requireAllNonNull(filename);","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"        this.filename \u003d filename;","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"        this.filePath \u003d Paths.get(\"data\", this.filename);","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"    public void setFilePath(Path filePath) {","lastModifiedDate":"2022-10-16"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":57,"author":{"gitId":"prit3010"},"content":"    public List\u003cAddCommand\u003e getInfo() throws CommandException {","lastModifiedDate":"2022-10-16"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"        Path file \u003d this.filePath;","lastModifiedDate":"2022-10-16"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"        String line \u003d \"\";","lastModifiedDate":"2022-10-16"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"        String splitBy \u003d \",\";","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"        List\u003cAddCommand\u003e addCommandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"            // parsing a CSV file into BufferedReader class constructor","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file.toString()));","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"prit3010"},"content":"            br.readLine();","lastModifiedDate":"2022-10-16"},{"lineNumber":66,"author":{"gitId":"prit3010"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"prit3010"},"content":"                String[] data \u003d line.split(splitBy); // use comma as separator","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"                String arg \u003d \" \";","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"                for (int i \u003d 0; i \u003c data.length; i++) {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"                    if (i \u003d\u003d (data.length - 1)) {","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"                        if (data[i].equals(\"\")) {","lastModifiedDate":"2022-10-30"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"                            continue;","lastModifiedDate":"2022-10-30"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"                        } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"                            String[] tags \u003d data[i].split(\"/\");","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"                            for (String tag : tags) {","lastModifiedDate":"2022-10-16"},{"lineNumber":76,"author":{"gitId":"prit3010"},"content":"                                arg +\u003d PREFIX_LIST[i] + tag + \" \";","lastModifiedDate":"2022-10-16"},{"lineNumber":77,"author":{"gitId":"prit3010"},"content":"                            }","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"                        }","lastModifiedDate":"2022-10-30"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"                    } else {","lastModifiedDate":"2022-10-30"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"                        if (data[i].equals(\"\")) {","lastModifiedDate":"2022-10-30"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"                            continue;","lastModifiedDate":"2022-10-30"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"                        } else {","lastModifiedDate":"2022-10-16"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"                            arg +\u003d PREFIX_LIST[i] + data[i] + \" \";","lastModifiedDate":"2022-10-16"},{"lineNumber":84,"author":{"gitId":"prit3010"},"content":"                        }","lastModifiedDate":"2022-10-16"},{"lineNumber":85,"author":{"gitId":"prit3010"},"content":"                    }","lastModifiedDate":"2022-10-16"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"                }","lastModifiedDate":"2022-10-30"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"                addCommandList.add(new AddCommandParser().parse(arg));","lastModifiedDate":"2022-10-16"},{"lineNumber":88,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":90,"author":{"gitId":"prit3010"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"prit3010"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":92,"author":{"gitId":"prit3010"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-18"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"prit3010"},"content":"            if (e.getMessage().equals(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE))) {","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"prit3010"},"content":"                throw new CommandException(MESSAGE_MISSING_COMP_FIELDS);","lastModifiedDate":"2022-11-03"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"            } else {","lastModifiedDate":"2022-11-03"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"                throw new CommandException(e.getMessage());","lastModifiedDate":"2022-10-16"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-11-03"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"        return addCommandList;","lastModifiedDate":"2022-10-16"},{"lineNumber":101,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":102,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"prit3010"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"prit3010"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"prit3010"},"content":"        int currEmployeeID \u003d EmployeeId.getCount();","lastModifiedDate":"2022-10-18"},{"lineNumber":106,"author":{"gitId":"prit3010"},"content":"        List\u003cAddCommand\u003e addCommandList \u003d this.getInfo();","lastModifiedDate":"2022-10-16"},{"lineNumber":107,"author":{"gitId":"prit3010"},"content":"        if (addCommandList.isEmpty()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":108,"author":{"gitId":"prit3010"},"content":"            throw new CommandException(String.format(MESSAGE_NO_DATA, this.filename));","lastModifiedDate":"2022-11-03"},{"lineNumber":109,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":110,"author":{"gitId":"prit3010"},"content":"        List\u003cPerson\u003e copyOfPersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"prit3010"},"content":"        for (Person p : model.getDatabase().getPersonList()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"prit3010"},"content":"            copyOfPersonList.add(p);","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"prit3010"},"content":"        try {","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"prit3010"},"content":"            for (AddCommand item : addCommandList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":117,"author":{"gitId":"prit3010"},"content":"                item.execute(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":118,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":119,"author":{"gitId":"prit3010"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":120,"author":{"gitId":"prit3010"},"content":"            Database ab \u003d new Database();","lastModifiedDate":"2022-10-16"},{"lineNumber":121,"author":{"gitId":"prit3010"},"content":"            ab.setPersons(copyOfPersonList);","lastModifiedDate":"2022-10-16"},{"lineNumber":122,"author":{"gitId":"prit3010"},"content":"            model.setDatabase(ab);","lastModifiedDate":"2022-10-16"},{"lineNumber":123,"author":{"gitId":"prit3010"},"content":"            EmployeeId.setCount(currEmployeeID);","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"prit3010"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FOUND);","lastModifiedDate":"2022-11-03"},{"lineNumber":125,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-16"},{"lineNumber":126,"author":{"gitId":"prit3010"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, addCommandList.size()));","lastModifiedDate":"2022-10-16"},{"lineNumber":127,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"prit3010"},"content":"    @Override","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"prit3010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-13"},{"lineNumber":131,"author":{"gitId":"prit3010"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-13"},{"lineNumber":132,"author":{"gitId":"prit3010"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-13"},{"lineNumber":133,"author":{"gitId":"prit3010"},"content":"            return true;","lastModifiedDate":"2022-10-13"},{"lineNumber":134,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":135,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":136,"author":{"gitId":"prit3010"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"prit3010"},"content":"        if (!(other instanceof BatchAddCommand)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":138,"author":{"gitId":"prit3010"},"content":"            return false;","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"prit3010"},"content":"        // state check","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"prit3010"},"content":"        BatchAddCommand e \u003d (BatchAddCommand) other;","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"prit3010"},"content":"        return filename.equals(e.filename);","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":143}},{"path":"src/main/java/coydir/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":" * Clears the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Database has been cleared!\";","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"        model.setDatabase(new Database());","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"        EmployeeId.setCount(1);","lastModifiedDate":"2022-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":6,"-":16}},{"path":"src/main/java/coydir/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":3,"-":17}},{"path":"src/main/java/coydir/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    /** The application should display a person\u0027s profile. */","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    private final boolean viewPerson;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    /** The application should display information on a department. */","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    private final boolean viewDepartment;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"    private int viewIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"    private String department;","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        this.viewPerson \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"        this.viewDepartment \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     * Used only for the {@code View} command.","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    public CommandResult(String feedbackToUser, int index) {","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ngshijun"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ngshijun"},"content":"        this.exit \u003d false;","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        this.viewPerson \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"        this.viewDepartment \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        this.viewIndex \u003d index;","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ngshijun"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"     * Used only for the {@code View Department} command.","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ngshijun"},"content":"    public CommandResult(String feedbackToUser, String department) {","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ngshijun"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ngshijun"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ngshijun"},"content":"        this.exit \u003d false;","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"        this.viewPerson \u003d false;","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"ngshijun"},"content":"        this.viewDepartment \u003d true;","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        this.viewIndex \u003d 0;","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"    public boolean isViewPerson() {","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"        return viewPerson;","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"ngshijun"},"content":"    public boolean isViewDepartment() {","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"ngshijun"},"content":"        return viewDepartment;","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":96,"author":{"gitId":"ngshijun"},"content":"    public int getViewIndex() {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"ngshijun"},"content":"        return viewIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"ngshijun"},"content":"    public String getDepartment() {","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"ngshijun"},"content":"        return department;","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 viewPerson \u003d\u003d otherCommandResult.viewPerson","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 viewIndex \u003d\u003d otherCommandResult.viewIndex","lastModifiedDate":"2022-10-28"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 viewDepartment \u003d\u003d otherCommandResult.viewDepartment","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 department \u003d\u003d otherCommandResult.department;","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, viewPerson, viewIndex, viewDepartment, department);","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ngshijun":37,"kevinchangjk":25,"-":68}},{"path":"src/main/java/coydir/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":" * Deletes a person identified using it\u0027s displayed index from the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"chao890"},"content":"            + \": Deletes the person identified by the employee ID used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"            + \"Parameters: ID (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"chao890"},"content":"    private final EmployeeId targetId;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"chao890"},"content":"    public DeleteCommand(EmployeeId targetid) {","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"chao890"},"content":"        this.targetId \u003d targetid;","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"chao890"},"content":"        Person personToDelete;","lastModifiedDate":"2022-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"chao890"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"chao890"},"content":"            if (person.getEmployeeId().equals(targetId)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"chao890"},"content":"                model.deletePerson(person);","lastModifiedDate":"2022-10-05"},{"lineNumber":42,"author":{"gitId":"chao890"},"content":"                personToDelete \u003d person;","lastModifiedDate":"2022-10-05"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":46,"author":{"gitId":"chao890"},"content":"        throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"chao890"},"content":"                \u0026\u0026 targetId.equals(((DeleteCommand) other).targetId)); // state check","lastModifiedDate":"2022-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":6,"chao890":15,"prit3010":1,"-":33}},{"path":"src/main/java/coydir/logic/commands/DeleteLeaveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao890"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"chao890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"chao890"},"content":"import java.util.List;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"chao890"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"chao890"},"content":"import java.util.Queue;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"chao890"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"chao890"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"chao890"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"chao890"},"content":"import coydir.model.person.Leave;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"chao890"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"chao890"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"chao890"},"content":" * Deletes a leave from the person.","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"chao890"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"chao890"},"content":"public class DeleteLeaveCommand extends Command {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    public static final String COMMAND_WORD \u003d \"delete-leave\";","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"chao890"},"content":"            + \": Deletes a leave period for an employee.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"chao890"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"chao890"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"chao890"},"content":"            + PREFIX_INDEX + \"INDEX \"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"chao890"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"chao890"},"content":"            + PREFIX_ID + \"1 \"","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"            + PREFIX_INDEX + \"1 \";","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_LEAVE_REMOVE_SUCCESS \u003d \"Leave removed successfully for %1$s\";","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_NO_SUCH_LEAVE \u003d \"There is no such leave\";","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"chao890"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Invalid index given\";","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"chao890"},"content":"    private EmployeeId targetId;","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"chao890"},"content":"    private int index;","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"chao890"},"content":"     * Creates a DeleteCommand object.","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"chao890"},"content":"     * @param targetid of the employee to operate on.","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"chao890"},"content":"     * @param index index of leave in queue to remove.","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"chao890"},"content":"    public DeleteLeaveCommand(EmployeeId targetid, int index) {","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"chao890"},"content":"        this.targetId \u003d targetid;","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"chao890"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"chao890"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"chao890"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"chao890"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getDatabase().getPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"chao890"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"chao890"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        Person targetPerson \u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"chao890"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"chao890"},"content":"            if (person.getEmployeeId().equals(targetId)) {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"                targetPerson \u003d person;","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"                break;","lastModifiedDate":"2022-10-28"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-10-28"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        if (targetPerson \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-28"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-28"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        Queue\u003cLeave\u003e oldLeaves \u003d targetPerson.getLeaves();","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"        if (index \u003e oldLeaves.size()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"chao890"},"content":"            throw new CommandException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":71,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"chao890"},"content":"        Queue\u003cLeave\u003e newLeaves \u003d new PriorityQueue\u003c\u003e(oldLeaves);","lastModifiedDate":"2022-10-25"},{"lineNumber":73,"author":{"gitId":"chao890"},"content":"        int counter \u003d 1;","lastModifiedDate":"2022-10-25"},{"lineNumber":74,"author":{"gitId":"chao890"},"content":"        while (counter++ \u003c index) {","lastModifiedDate":"2022-10-25"},{"lineNumber":75,"author":{"gitId":"chao890"},"content":"            newLeaves.remove();","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"        Leave removedLeave \u003d newLeaves.remove();","lastModifiedDate":"2022-10-28"},{"lineNumber":78,"author":{"gitId":"chao890"},"content":"        oldLeaves.remove(removedLeave);","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        targetPerson.setLeavesLeft(targetPerson.getLeavesLeft() + removedLeave.getTotalDays());","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        return new CommandResult(String.format(MESSAGE_LEAVE_REMOVE_SUCCESS, targetPerson.getName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"chao890"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"chao890"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":85,"author":{"gitId":"chao890"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":86,"author":{"gitId":"chao890"},"content":"                || (other instanceof DeleteLeaveCommand // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":87,"author":{"gitId":"chao890"},"content":"                \u0026\u0026 targetId.equals(((DeleteLeaveCommand) other).targetId)","lastModifiedDate":"2022-10-25"},{"lineNumber":88,"author":{"gitId":"chao890"},"content":"                \u0026\u0026 index \u003d\u003d ((DeleteLeaveCommand) other).index); // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":89,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"chao890"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"ngshijun":1,"chao890":73,"kevinchangjk":15,"prit3010":1}},{"path":"src/main/java/coydir/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_LEAVE;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.CollectionUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":" * Edits the details of an existing person in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"            + \"[\" + PREFIX_DEPARTMENT + \"DEPARTMENT] \"","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"            + \"[\" + PREFIX_LEAVE + \"LEAVE] \"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"            + \"[\" + PREFIX_TAG + \"TAG] \\n \"","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the database.\";","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"prit3010"},"content":"        int currentLeaves \u003d personToEdit.getTotalNumberOfLeaves();","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"        Position updatedPosition \u003d editPersonDescriptor.getPosition().orElse(personToEdit.getPosition());","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"        Department updatedDepartment \u003d editPersonDescriptor.getDepartment().orElse(personToEdit.getDepartment());","lastModifiedDate":"2022-10-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"prit3010"},"content":"        int updatedLeaves \u003d editPersonDescriptor.getLeaves().orElse(currentLeaves);","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"        EmployeeId employeeId \u003d personToEdit.getEmployeeId();","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"Kok-je"},"content":"        Rating rating \u003d personToEdit.getRating();","lastModifiedDate":"2022-10-26"},{"lineNumber":115,"author":{"gitId":"chao890"},"content":"        int currentLeavesLeft \u003d personToEdit.getLeavesLeft();","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"prit3010"},"content":"        Person p \u003d new Person(","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"                updatedName, employeeId, updatedPhone, updatedEmail, updatedPosition,","lastModifiedDate":"2022-10-23"},{"lineNumber":118,"author":{"gitId":"Kok-je"},"content":"                updatedDepartment, updatedAddress, updatedTags, updatedLeaves, rating);","lastModifiedDate":"2022-10-26"},{"lineNumber":119,"author":{"gitId":"chao890"},"content":"        p.setLeavesLeft(updatedLeaves - currentLeaves + currentLeavesLeft);","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"chao890"},"content":"        p.setLeaves(personToEdit.getLeaves());","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"chao890"},"content":"        p.setRatingHistory(personToEdit.getRatingHistory());","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"prit3010"},"content":"        return p;","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"        private Position position;","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"        private Department department;","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"prit3010"},"content":"        private int totalNumberofLeaves;","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"kevinchangjk"},"content":"            setPosition(toCopy.position);","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"            setDepartment(toCopy.department);","lastModifiedDate":"2022-10-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"prit3010"},"content":"            setLeaves(toCopy.totalNumberofLeaves);","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"prit3010"},"content":"            Integer temp \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":179,"author":{"gitId":"prit3010"},"content":"            if (totalNumberofLeaves \u003e 0) {","lastModifiedDate":"2022-10-20"},{"lineNumber":180,"author":{"gitId":"prit3010"},"content":"                temp \u003d totalNumberofLeaves;","lastModifiedDate":"2022-10-20"},{"lineNumber":181,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, position, department, address, tags, temp);","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"kevinchangjk"},"content":"        public void setPosition(Position position) {","lastModifiedDate":"2022-10-04"},{"lineNumber":210,"author":{"gitId":"kevinchangjk"},"content":"            this.position \u003d position;","lastModifiedDate":"2022-10-04"},{"lineNumber":211,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":212,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":213,"author":{"gitId":"kevinchangjk"},"content":"        public Optional\u003cPosition\u003e getPosition() {","lastModifiedDate":"2022-10-04"},{"lineNumber":214,"author":{"gitId":"kevinchangjk"},"content":"            return Optional.ofNullable(position);","lastModifiedDate":"2022-10-04"},{"lineNumber":215,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":216,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":217,"author":{"gitId":"kevinchangjk"},"content":"        public void setDepartment(Department department) {","lastModifiedDate":"2022-10-23"},{"lineNumber":218,"author":{"gitId":"kevinchangjk"},"content":"            this.department \u003d department;","lastModifiedDate":"2022-10-23"},{"lineNumber":219,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":220,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":221,"author":{"gitId":"kevinchangjk"},"content":"        public Optional\u003cDepartment\u003e getDepartment() {","lastModifiedDate":"2022-10-23"},{"lineNumber":222,"author":{"gitId":"kevinchangjk"},"content":"            return Optional.ofNullable(department);","lastModifiedDate":"2022-10-23"},{"lineNumber":223,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":224,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"prit3010"},"content":"        public void setLeaves(int leaves) {","lastModifiedDate":"2022-10-19"},{"lineNumber":234,"author":{"gitId":"prit3010"},"content":"            this.totalNumberofLeaves \u003d leaves;","lastModifiedDate":"2022-10-19"},{"lineNumber":235,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":236,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":237,"author":{"gitId":"prit3010"},"content":"        public Optional\u003cInteger\u003e getLeaves() {","lastModifiedDate":"2022-10-19"},{"lineNumber":238,"author":{"gitId":"prit3010"},"content":"            Integer temp \u003d null;","lastModifiedDate":"2022-10-20"},{"lineNumber":239,"author":{"gitId":"prit3010"},"content":"            if (totalNumberofLeaves \u003e 0) {","lastModifiedDate":"2022-10-20"},{"lineNumber":240,"author":{"gitId":"prit3010"},"content":"                temp \u003d totalNumberofLeaves;","lastModifiedDate":"2022-10-20"},{"lineNumber":241,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"prit3010"},"content":"            return Optional.ofNullable(temp);","lastModifiedDate":"2022-10-20"},{"lineNumber":243,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":244,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":255,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":280,"author":{"gitId":"kevinchangjk"},"content":"                    \u0026\u0026 getPosition().equals(e.getPosition())","lastModifiedDate":"2022-10-04"},{"lineNumber":281,"author":{"gitId":"kevinchangjk"},"content":"                    \u0026\u0026 getDepartment().equals(e.getDepartment())","lastModifiedDate":"2022-10-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Kok-je":3,"kevinchangjk":51,"chao890":4,"prit3010":27,"-":201}},{"path":"src/main/java/coydir/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Coydir as requested ...\";","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":1,"-":16}},{"path":"src/main/java/coydir/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":" * Finds and lists all persons in database whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons by searching for any combination\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"            + \"of name, position, and department given the specified keywords (case-insensitive)\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"            + \"[\" + PREFIX_POSITION + \"POSITION] \"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"            + \"[\" + PREFIX_DEPARTMENT + \"DEPARTMENT] \"","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"            + PREFIX_NAME + \"John \"","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"            + PREFIX_POSITION + \"Recruiter \"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"            + PREFIX_DEPARTMENT + \"Human Resources\";","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    private final PersonMatchesKeywordsPredicate predicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"    public FindCommand(PersonMatchesKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"                String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()), 0);","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kevinchangjk":24,"prit3010":1,"-":28}},{"path":"src/main/java/coydir/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":4,"-":18}},{"path":"src/main/java/coydir/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":" * Lists all persons in the database to the user.","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all employees\";","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":4,"prit3010":1,"-":19}},{"path":"src/main/java/coydir/logic/commands/RateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kok-je"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Kok-je"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Kok-je"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Kok-je"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Kok-je"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Kok-je"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Kok-je"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Kok-je"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":" * Rate an employee\u0027s current performance.","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Kok-je"},"content":"public class RateCommand extends Command {","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"    public static final String COMMAND_WORD \u003d \"rate\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Kok-je"},"content":"            + \": Rate the current performance of an employee.\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Kok-je"},"content":"            + \"5: Outstanding | 4: Exceeds Expectations | 3: Satisfactory | 2: Needs Improvement | 1: Unsatisfactory\\n\"","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Kok-je"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Kok-je"},"content":"            + PREFIX_ID + \"ID \"","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Kok-je"},"content":"            + PREFIX_RATE + \"RATING \"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Kok-je"},"content":"            + \" | Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Kok-je"},"content":"            + PREFIX_ID + \"1 \"","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Kok-je"},"content":"            + PREFIX_RATE + \"3 \";","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"    public static final String MESSAGE_RATE_SUCCESS \u003d \"Performance successfully rated for %1$s\";","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"    public static final String MESSAGE_EMPLOYEE_RATING_COMPLETED \u003d","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"Kok-je"},"content":"        \"This employee\u0027s performance for the day has been rated.\";","lastModifiedDate":"2022-11-02"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"    private EmployeeId targetId;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"    private Rating rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"     * Creates a RateCommand object.","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"     * @param targetid of the employee to rate.","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Kok-je"},"content":"     * @param rating of the employee to add.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"    public RateCommand(EmployeeId targetid, Rating rating) {","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"        this.targetId \u003d targetid;","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Kok-je"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Kok-je"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Kok-je"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Kok-je"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        Person targetPerson \u003d null;","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"Kok-je"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"Kok-je"},"content":"            if (person.getEmployeeId().equals(targetId)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"                targetPerson \u003d person;","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"                break;","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"Kok-je"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        if (targetPerson \u003d\u003d null) {","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"Kok-je"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"Kok-je"},"content":"        for (Rating ratinglist : targetPerson.getRatingHistory()) {","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"Kok-je"},"content":"            if (ratinglist.getTime().equals(rating.getTime())) {","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"Kok-je"},"content":"                throw new CommandException(MESSAGE_EMPLOYEE_RATING_COMPLETED);","lastModifiedDate":"2022-11-02"},{"lineNumber":67,"author":{"gitId":"Kok-je"},"content":"            }","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"        targetPerson.setRating(rating);","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"        targetPerson.addRating(rating);","lastModifiedDate":"2022-10-28"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        return new CommandResult(String.format(MESSAGE_RATE_SUCCESS, targetPerson.getName()));","lastModifiedDate":"2022-10-28"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"Kok-je"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Kok-je"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Kok-je"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Kok-je"},"content":"                || (other instanceof RateCommand // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Kok-je"},"content":"                \u0026\u0026 targetId.equals(((RateCommand) other).targetId)","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"Kok-je"},"content":"                \u0026\u0026 rating.equals(((RateCommand) other).rating)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"Kok-je"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Kok-je":72,"kevinchangjk":11}},{"path":"src/main/java/coydir/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ngshijun"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ngshijun"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" * View a person\u0027s particulars identified using their displayed index from the database.","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"            + \": View the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewing Person\u0027s particulars: %1$s\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"    private final Index index;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ngshijun"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"ngshijun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"        Person personToView;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"            personToView \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"            return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, personToView.getName()),","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"                    index.getZeroBased());","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ngshijun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 index.equals(((ViewCommand) other).index));","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ngshijun":43,"kevinchangjk":11}},{"path":"src/main/java/coydir/logic/commands/ViewDepartmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ngshijun"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":" * View a declared Department along with relevant information.","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"public class ViewDepartmentCommand extends Command {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    public static final String COMMAND_WORD \u003d \"view-department\";","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"            + \": View the department information in the displayed person list.\\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"            + \"Parameters: DEPARTMENT \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"            + \"Example: \" + COMMAND_WORD + \" Finance\";","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"    public static final String MESSAGE_VIEW_DEPARTMENT_SUCCESS \u003d \"Viewing Department\u0027s info: %1$s\";","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_UNKNOWN_DEPARTMENT \u003d \" is not a valid department!\";","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    private final String department;","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    public ViewDepartmentCommand(String department) {","lastModifiedDate":"2022-10-28"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-28"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"    @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        if (Department.isValidDepartment(department)) {","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"            return new CommandResult(String.format(MESSAGE_VIEW_DEPARTMENT_SUCCESS, department), department);","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"            throw new CommandException(MESSAGE_UNKNOWN_DEPARTMENT);","lastModifiedDate":"2022-10-28"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-28"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"                || (other instanceof ViewDepartmentCommand // instanceof handles nulls","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 department.equals(((ViewDepartmentCommand) other).department));","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ngshijun":29,"kevinchangjk":18}},{"path":"src/main/java/coydir/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands.exceptions;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kevinchangjk":1,"-":16}},{"path":"src/main/java/coydir/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_LEAVE;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.AddCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    private static final int DEFAULT_LEAVES \u003d 14;","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"                        PREFIX_POSITION, PREFIX_DEPARTMENT, PREFIX_ADDRESS, PREFIX_LEAVE, PREFIX_TAG);","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_POSITION, PREFIX_DEPARTMENT)","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        // Set mandatory fields","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        Position position \u003d ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        Department department \u003d ParserUtil.parseDepartment(argMultimap.getValue(PREFIX_DEPARTMENT).get());","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"        // Set optional fields as default/null values","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        Phone phone \u003d Phone.getNullPhone();","lastModifiedDate":"2022-10-28"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        Email email \u003d Email.getNullEmail();","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        Address address \u003d Address.getNullAddress();","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        Rating rating \u003d Rating.getNullRating();","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"Kok-je"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"        int numberOfLeaves \u003d DEFAULT_LEAVES;","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"        // Set optional fields individually","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"Kok-je"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"Kok-je"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":66,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":67,"author":{"gitId":"Kok-je"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":68,"author":{"gitId":"Kok-je"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":70,"author":{"gitId":"Kok-je"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":71,"author":{"gitId":"Kok-je"},"content":"            address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2022-10-07"},{"lineNumber":72,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"Kok-je"},"content":"        if (!argMultimap.getAllValues(PREFIX_TAG).isEmpty()) {","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"Kok-je"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-07"},{"lineNumber":75,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":76,"author":{"gitId":"prit3010"},"content":"        if (!argMultimap.getAllValues(PREFIX_LEAVE).isEmpty()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"            numberOfLeaves \u003d Integer.valueOf(ParserUtil.parseNumber(argMultimap.getValue(PREFIX_LEAVE).get()));","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        EmployeeId employeeId \u003d new EmployeeId();","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        Person person \u003d new Person(","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"Kok-je"},"content":"                name, employeeId, phone, email, position, department, address, tagList, numberOfLeaves, rating","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Kok-je":16,"kevinchangjk":38,"prit3010":5,"-":36}},{"path":"src/main/java/coydir/logic/parser/AddLeaveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao890"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"chao890"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ENDDATE;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_STARTDATE;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"chao890"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"import coydir.logic.commands.AddLeaveCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"chao890"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"chao890"},"content":"import coydir.model.person.Leave;","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"chao890"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"chao890"},"content":" * Parses input arguments and creates a new AddLeaveCommand object.","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"chao890"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"chao890"},"content":"public class AddLeaveCommandParser implements Parser\u003cAddLeaveCommand\u003e {","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"chao890"},"content":"     * Parses input arguments and creates a new AddLeaveCommand object.","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"chao890"},"content":"    public AddLeaveCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"chao890"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_STARTDATE, PREFIX_ENDDATE);","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"chao890"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_STARTDATE, PREFIX_ENDDATE)","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"chao890"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"chao890"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        String id \u003d ParserUtil.parseNumber(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"chao890"},"content":"        Leave leave \u003d ParserUtil.parseLeave(","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"chao890"},"content":"                argMultimap.getValue(PREFIX_STARTDATE).get(), argMultimap.getValue(PREFIX_ENDDATE).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"        return new AddLeaveCommand(new EmployeeId(id), leave);","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"chao890"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"chao890"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"chao890"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"chao890"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"chao890"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"chao890":43,"kevinchangjk":2}},{"path":"src/main/java/coydir/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"kevinchangjk":1,"-":59}},{"path":"src/main/java/coydir/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kevinchangjk":1,"-":147}},{"path":"src/main/java/coydir/logic/parser/BatchAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.BatchAddCommand;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"public class BatchAddCommandParser implements Parser\u003cBatchAddCommand\u003e {","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"     * Parses the given {@code String} of arguments in the context of the BatchAddCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"     * and returns a BatchAdd object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"    public BatchAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"        try {","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"            String filename \u003d ParserUtil.parseFileName(args);","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"            return new BatchAddCommand(filename);","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchAddCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"prit3010":29}},{"path":"src/main/java/coydir/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    public static final Prefix PREFIX_POSITION \u003d new Prefix(\"j/\");","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    public static final Prefix PREFIX_DEPARTMENT \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"    public static final Prefix PREFIX_LEAVE \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Kok-je"},"content":"    public static final Prefix PREFIX_RATE \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"chao890"},"content":"    public static final Prefix PREFIX_STARTDATE \u003d new Prefix(\"sd/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"chao890"},"content":"    public static final Prefix PREFIX_ENDDATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"    public static final Prefix[] PREFIX_LIST \u003d {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"        PREFIX_NAME,","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"        PREFIX_PHONE,","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"        PREFIX_EMAIL,","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"        PREFIX_POSITION,","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        PREFIX_DEPARTMENT,","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"        PREFIX_ADDRESS,","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"        PREFIX_LEAVE,","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Kok-je"},"content":"        PREFIX_TAG,","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"        PREFIX_RATE,","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"        PREFIX_ID,","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"        PREFIX_STARTDATE,","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"chao890"},"content":"        PREFIX_ENDDATE,","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"        PREFIX_INDEX","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"    };","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kok-je":7,"kevinchangjk":4,"chao890":4,"prit3010":9,"-":14}},{"path":"src/main/java/coydir/logic/parser/DatabaseParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.AddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"import coydir.logic.commands.AddLeaveCommand;","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.BatchAddCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.Command;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"chao890"},"content":"import coydir.logic.commands.DeleteLeaveCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.EditCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.FindCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.ListCommand;","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"import coydir.logic.commands.RateCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"import coydir.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"import coydir.logic.commands.ViewDepartmentCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"public class DatabaseParser {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"prit3010"},"content":"        case BatchAddCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"            return new BatchAddCommandParser().parse(arguments);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":80,"author":{"gitId":"ngshijun"},"content":"        case ViewDepartmentCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ngshijun"},"content":"            return new ViewDepartmentCommandParser().parse(arguments);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"ngshijun"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"ngshijun"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Kok-je"},"content":"        case RateCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"Kok-je"},"content":"            return new RateCommandParser().parse(arguments);","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"chao890"},"content":"        case AddLeaveCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"chao890"},"content":"            return new AddLeaveCommandParser().parse(arguments);","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"chao890"},"content":"        case DeleteLeaveCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-25"},{"lineNumber":93,"author":{"gitId":"chao890"},"content":"            return new DeleteLeaveCommandParser().parse(arguments);","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"            throw new ParseException(\u0027\"\u0027 + commandWord + \u0027\"\u0027 + MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ngshijun":7,"Kok-je":5,"kevinchangjk":4,"chao890":8,"prit3010":15,"-":61}},{"path":"src/main/java/coydir/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.DeleteCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"            String id \u003d ParserUtil.parseNumber(args);","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"            return new DeleteCommand(new EmployeeId(id));","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kevinchangjk":5,"chao890":2,"-":22}},{"path":"src/main/java/coydir/logic/parser/DeleteLeaveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chao890"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"chao890"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"chao890"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"chao890"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"chao890"},"content":"import coydir.logic.commands.DeleteLeaveCommand;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"chao890"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"chao890"},"content":" * Parses user input to return a DeleteLeaveCommand object.","lastModifiedDate":"2022-10-25"},{"lineNumber":15,"author":{"gitId":"chao890"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"chao890"},"content":"public class DeleteLeaveCommandParser implements Parser\u003cDeleteLeaveCommand\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"chao890"},"content":"     * Parses user input to return a DeleteLeaveCommand object.","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"chao890"},"content":"    public DeleteLeaveCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"chao890"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_INDEX);","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_INDEX)","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"chao890"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"chao890"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteLeaveCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        String id \u003d ParserUtil.parseNumber(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        int index \u003d Integer.parseInt(ParserUtil.parseNumber(argMultimap.getValue(PREFIX_INDEX).get()));","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"chao890"},"content":"        return new DeleteLeaveCommand(new EmployeeId(id), index);","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"chao890"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"chao890"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"chao890"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"chao890"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"chao890"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"chao890":39,"kevinchangjk":2}},{"path":"src/main/java/coydir/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_LEAVE;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"                        PREFIX_POSITION, PREFIX_DEPARTMENT, PREFIX_ADDRESS, PREFIX_LEAVE, PREFIX_TAG);","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2022-10-04"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"            editPersonDescriptor.setPosition(ParserUtil.parsePosition(argMultimap.getValue(PREFIX_POSITION).get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"        if (argMultimap.getValue(PREFIX_DEPARTMENT).isPresent()) {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"            editPersonDescriptor.setDepartment(","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"                    ParserUtil.parseDepartment(argMultimap.getValue(PREFIX_DEPARTMENT).get()));","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        if (argMultimap.getValue(PREFIX_LEAVE).isPresent()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"            editPersonDescriptor.setLeaves(Integer.valueOf(ParserUtil.parseNumber(","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"                    argMultimap.getValue(PREFIX_LEAVE).get())));","lastModifiedDate":"2022-10-19"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kevinchangjk":24,"prit3010":4,"-":69}},{"path":"src/main/java/coydir/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.FindCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_POSITION, PREFIX_DEPARTMENT);","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        if (!isPrefixPresent(argMultimap, PREFIX_NAME, PREFIX_POSITION, PREFIX_DEPARTMENT)","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        String keywordName \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        String keywordPosition \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        String keywordDepartment \u003d \"\";","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"            keywordName \u003d ParserUtil.parseKeyword(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"            if (!Name.isValidName(keywordName)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"                throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"        if (argMultimap.getValue(PREFIX_POSITION).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"            keywordPosition \u003d ParserUtil.parseKeyword(argMultimap.getValue(PREFIX_POSITION).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"            if (!Position.isValidPosition(keywordPosition)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"                throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        if (argMultimap.getValue(PREFIX_DEPARTMENT).isPresent()) {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"            keywordDepartment \u003d ParserUtil.parseKeyword(argMultimap.getValue(PREFIX_DEPARTMENT).get());","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"        return new FindCommand(new PersonMatchesKeywordsPredicate(keywordName, keywordPosition, keywordDepartment));","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kevinchangjk":31,"prit3010":8,"-":21}},{"path":"src/main/java/coydir/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.Command;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kevinchangjk":3,"-":13}},{"path":"src/main/java/coydir/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"chao890"},"content":"import static coydir.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.StringUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"chao890"},"content":"import coydir.model.person.Leave;","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_INVALID_NUMBER \u003d","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"            \"Number should be a positive integer (non-zero, not too large).\\n\"","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"            + \"Check out our User Guide for more information by entering \u0027help\u0027!\";","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_INVALID_ARGUMENT \u003d \"Keyword argument cannot be empty.\";","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"            throw new ParseException(MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"     * Parses a user-specified keyword into an {@code String} and returns it trimmed and in lower-case.","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"     * @throws ParseException if the specified keyword is empty.","lastModifiedDate":"2022-10-25"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    public static String parseKeyword(String keyword) throws ParseException {","lastModifiedDate":"2022-10-25"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        String trimmedKeyword \u003d keyword.trim();","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        if (trimmedKeyword.equals(\"\")) {","lastModifiedDate":"2022-10-25"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"            throw new ParseException(MESSAGE_INVALID_ARGUMENT);","lastModifiedDate":"2022-10-25"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"        return trimmedKeyword;","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":58,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"     * Parses {@code oneBasedIndex} into an {@code String} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"chao890"},"content":"     * trimmed.","lastModifiedDate":"2022-10-05"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer less than MAX_INT).","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    public static String parseNumber(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"chao890"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-10-05"},{"lineNumber":65,"author":{"gitId":"chao890"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-10-05"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"            throw new ParseException(MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-05"},{"lineNumber":68,"author":{"gitId":"chao890"},"content":"        return trimmedIndex;","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"     * Parses a {@code String position} into an {@code Position}.","lastModifiedDate":"2022-10-04"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-04"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"     * @throws ParseException if the  given {@code position} is invalid.","lastModifiedDate":"2022-10-04"},{"lineNumber":136,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"    public static Position parsePosition(String position) throws ParseException {","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"        String trimmedPosition \u003d position.trim();","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"kevinchangjk"},"content":"        if (!Position.isValidPosition(trimmedPosition)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"            throw new ParseException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"        return new Position(trimmedPosition);","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":146,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"     * Parses a {@code String department} into an {@code Department}.","lastModifiedDate":"2022-10-23"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-23"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"     * @throws ParseException if the  given {@code department} is invalid.","lastModifiedDate":"2022-10-23"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"    public static Department parseDepartment(String department) throws ParseException {","lastModifiedDate":"2022-10-23"},{"lineNumber":153,"author":{"gitId":"kevinchangjk"},"content":"        requireNonNull(department);","lastModifiedDate":"2022-10-23"},{"lineNumber":154,"author":{"gitId":"kevinchangjk"},"content":"        String trimmedDepartment \u003d department.trim();","lastModifiedDate":"2022-10-23"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"        if (!Department.isValidDepartment(trimmedDepartment)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"            throw new ParseException(Department.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":157,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":158,"author":{"gitId":"kevinchangjk"},"content":"        return new Department(trimmedDepartment);","lastModifiedDate":"2022-10-23"},{"lineNumber":159,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":160,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":161,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"Kok-je"},"content":"     * Parses a {@code String Rating} into an {@code Rating}.","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"Kok-je"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"Kok-je"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"Kok-je"},"content":"     * @throws ParseException if the  given {@code leave period} is invalid.","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"Kok-je"},"content":"    public static Rating parseRating(String rating) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"Kok-je"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"Kok-je"},"content":"        String trimmedRating \u003d rating.trim();","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"Kok-je"},"content":"        if (!Rating.isValidRating(trimmedRating)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":171,"author":{"gitId":"Kok-je"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":172,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":173,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":174,"author":{"gitId":"Kok-je"},"content":"        return new Rating(trimmedRating);","lastModifiedDate":"2022-10-26"},{"lineNumber":175,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":176,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"chao890"},"content":"     * Parses a {@code String leave period} into an {@code Leave}.","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"chao890"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"chao890"},"content":"     *","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"chao890"},"content":"     * @throws ParseException if the  given {@code leave period} is invalid.","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"chao890"},"content":"    public static Leave parseLeave(String leaveStart, String leaveEnd) throws ParseException {","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"chao890"},"content":"        requireAllNonNull(leaveStart, leaveEnd);","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"chao890"},"content":"        String start \u003d leaveStart.trim();","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"chao890"},"content":"        String end \u003d leaveEnd.trim();","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"chao890"},"content":"        if (!Leave.isValidLeave(start, end)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"chao890"},"content":"            throw new ParseException(Leave.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"chao890"},"content":"        return new Leave(start, end);","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":219,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":220,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":221,"author":{"gitId":"prit3010"},"content":"     * Parses a {@code String filename}.","lastModifiedDate":"2022-10-16"},{"lineNumber":222,"author":{"gitId":"prit3010"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-16"},{"lineNumber":223,"author":{"gitId":"prit3010"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":224,"author":{"gitId":"prit3010"},"content":"     * @throws ParseException if the given {@code filename} length is less than 1.","lastModifiedDate":"2022-10-16"},{"lineNumber":225,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":226,"author":{"gitId":"prit3010"},"content":"    public static String parseFileName(String filename) throws ParseException {","lastModifiedDate":"2022-10-13"},{"lineNumber":227,"author":{"gitId":"prit3010"},"content":"        requireNonNull(filename);","lastModifiedDate":"2022-10-13"},{"lineNumber":228,"author":{"gitId":"prit3010"},"content":"        String trimmedFileName \u003d filename.trim();","lastModifiedDate":"2022-10-13"},{"lineNumber":229,"author":{"gitId":"prit3010"},"content":"        // Checking if trimmedFileName is either empty or not in the correct file format","lastModifiedDate":"2022-11-03"},{"lineNumber":230,"author":{"gitId":"prit3010"},"content":"        if (trimmedFileName.length() \u003c 1","lastModifiedDate":"2022-11-03"},{"lineNumber":231,"author":{"gitId":"prit3010"},"content":"            || trimmedFileName.indexOf(\".\") \u003d\u003d -1","lastModifiedDate":"2022-11-03"},{"lineNumber":232,"author":{"gitId":"prit3010"},"content":"            || !trimmedFileName.split(\"\\\\.\")[1].equals(\"csv\")) {","lastModifiedDate":"2022-11-03"},{"lineNumber":233,"author":{"gitId":"prit3010"},"content":"            throw new ParseException(\"Fail\");","lastModifiedDate":"2022-10-13"},{"lineNumber":234,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-13"},{"lineNumber":235,"author":{"gitId":"prit3010"},"content":"        return trimmedFileName;","lastModifiedDate":"2022-10-13"},{"lineNumber":236,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Kok-je":17,"kevinchangjk":62,"chao890":26,"prit3010":19,"-":113}},{"path":"src/main/java/coydir/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kevinchangjk":1,"-":38}},{"path":"src/main/java/coydir/logic/parser/RateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kok-je"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Kok-je"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Kok-je"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Kok-je"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Kok-je"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Kok-je"},"content":"import coydir.logic.commands.RateCommand;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Kok-je"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":" * Parses input arguments and creates a new AddLeaveCommand object.","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Kok-je"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"public class RateCommandParser implements Parser\u003cRateCommand\u003e {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Kok-je"},"content":"     * Parses input arguments and creates a new AddLeaveCommand object.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"    public RateCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Kok-je"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Kok-je"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_ID, PREFIX_RATE);","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Kok-je"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ID, PREFIX_RATE)","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Kok-je"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Kok-je"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        String id \u003d ParserUtil.parseNumber(argMultimap.getValue(PREFIX_ID).get());","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        Rating rating \u003d ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATE).get());","lastModifiedDate":"2022-10-28"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"        return new RateCommand(new EmployeeId(id), rating);","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Kok-je":40,"kevinchangjk":3}},{"path":"src/main/java/coydir/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"import coydir.logic.commands.ViewCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"ngshijun"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"ngshijun"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ngshijun"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ngshijun":29}},{"path":"src/main/java/coydir/logic/parser/ViewDepartmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"import coydir.logic.commands.ViewDepartmentCommand;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ngshijun"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ngshijun"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"public class ViewDepartmentCommandParser implements Parser\u003cViewDepartmentCommand\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewDepartmentCommand","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"     * and returns a ViewDepartmentCommand object for execution.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"    public ViewDepartmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"            Department department \u003d ParserUtil.parseDepartment(args);","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"            return new ViewDepartmentCommand(department.toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ngshijun"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewDepartmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ngshijun":28}},{"path":"src/main/java/coydir/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser.exceptions;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kevinchangjk":2,"-":15}},{"path":"src/main/java/coydir/model/Database.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.UniquePersonList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"public class Database implements ReadOnlyDatabase {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"    public Database() {}","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"     * Creates a database using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    public Database(ReadOnlyDatabase toBeCopied) {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"     * Resets the existing data of this {@code database} with {@code newData}.","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"    public void resetData(ReadOnlyDatabase newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"     * Adds a person to the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"     * The person must not already exist in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"     * Removes {@code key} from this {@code database}.","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"prit3010"},"content":"     * {@code key} must exist in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"prit3010"},"content":"                || (other instanceof Database // instanceof handles nulls","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 persons.equals(((Database) other).persons));","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":3,"prit3010":15,"-":102}},{"path":"src/main/java/coydir/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"     * Returns the user prefs\u0027 database file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"     * Sets the user prefs\u0027 database file path.","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"    void setDatabaseFilePath(Path databaseFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"     * Replaces database data with the data in {@code database}.","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"    void setDatabase(ReadOnlyDatabase database);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"    /** Returns the database */","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"    ReadOnlyDatabase getDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"     * The person must exist in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"     * {@code person} must not already exist in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"     * {@code target} must exist in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kevinchangjk":3,"prit3010":13,"-":71}},{"path":"src/main/java/coydir/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":" * Represents the in-memory model of the database data.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"    private final Database database;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"     * Initializes a ModelManager with the given database and userPrefs.","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    public ModelManager(ReadOnlyDatabase database, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"        requireAllNonNull(database, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"        logger.fine(\"Initializing with database: \" + database + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"        this.database \u003d new Database(database);","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.database.getPersonList());","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"        this(new Database(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        return userPrefs.getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"    public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"        requireNonNull(databaseFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"        userPrefs.setDatabaseFilePath(databaseFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"    public void setDatabase(ReadOnlyDatabase database) {","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"        this.database.resetData(database);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"    public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"        return database;","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"        return database.hasPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"        database.removePerson(target);","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"prit3010"},"content":"        database.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"prit3010"},"content":"        database.setPerson(target, editedPerson);","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"prit3010"},"content":"     * {@code versionedDatabase}","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"prit3010"},"content":"        return database.equals(other.database)","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":5,"prit3010":25,"-":119}},{"path":"src/main/java/coydir/model/ReadOnlyDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * Unmodifiable view of an database","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"public interface ReadOnlyDatabase {","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":2,"-":13}},{"path":"src/main/java/coydir/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":1,"-":13}},{"path":"src/main/java/coydir/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"    private Path databaseFilePath \u003d Paths.get(\"data\" , \"database.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"        setDatabaseFilePath(newUserPrefs.getDatabaseFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"        return databaseFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"    public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"        requireNonNull(databaseFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"        this.databaseFilePath \u003d databaseFilePath;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 databaseFilePath.equals(o.databaseFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"prit3010"},"content":"        return Objects.hash(guiSettings, databaseFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"        sb.append(\"\\nLocal data file location : \" + databaseFilePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":10,"-":75}},{"path":"src/main/java/coydir/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * Represents a Person\u0027s address in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Kok-je"},"content":"    private static final Address NULL \u003d new Address();","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"     * Bypass input validation, allows actual null values.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"    public Address() {","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d \"N/A\";","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"    public static Address getNullAddress() {","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"        return Address.NULL;","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kok-je":11,"kevinchangjk":4,"prit3010":1,"-":54}},{"path":"src/main/java/coydir/model/person/Department.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-23"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-23"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-23"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-10-23"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":" * Represents a Person\u0027s department in the database.","lastModifiedDate":"2022-10-23"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDepartment(String)}","lastModifiedDate":"2022-10-23"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-10-23"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"public class Department {","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    public static final String[] VALID_DEPARTMENTS \u003d {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"        \"Administration\",","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"        \"Board of Directors\",","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        \"Customer Service\",","lastModifiedDate":"2022-10-23"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"        \"Finance\",","lastModifiedDate":"2022-10-23"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"        \"General Management\",","lastModifiedDate":"2022-10-23"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        \"Human Resources\",","lastModifiedDate":"2022-10-23"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"        \"Information Technology\",","lastModifiedDate":"2022-10-23"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"        \"Legal\",","lastModifiedDate":"2022-10-23"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"        \"Marketing\",","lastModifiedDate":"2022-10-23"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        \"Operations\",","lastModifiedDate":"2022-10-23"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"        \"Product Management\",","lastModifiedDate":"2022-10-23"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        \"Production\",","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        \"Quality Assurance\",","lastModifiedDate":"2022-10-23"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"        \"Research and Development\",","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        \"Sales\",","lastModifiedDate":"2022-10-23"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        \"Technology\"","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        };","lastModifiedDate":"2022-10-23"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            \"Input for department (case-insensitive) is invalid if it is not in this list: \\n\"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"            + Department.listValidDepartments();","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"    private static final String NULL_DEPARTMENT \u003d \"N/A\";","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    public final String value;","lastModifiedDate":"2022-10-23"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs a {@code Department}.","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"     * @param department A valid department.","lastModifiedDate":"2022-10-23"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    public Department(String department) {","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        requireNonNull(department);","lastModifiedDate":"2022-10-23"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"        checkArgument(isValidDepartment(department), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        this.value \u003d Department.findValidDepartment(department);","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"     * Returns true if a given string is a valid department.","lastModifiedDate":"2022-10-23"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-23"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"    public static boolean isValidDepartment(String test) {","lastModifiedDate":"2022-10-23"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"        String department \u003d findValidDepartment(test);","lastModifiedDate":"2022-10-23"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"        if (department.equals(NULL_DEPARTMENT)) {","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"            return false;","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        } else {","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"            return true;","lastModifiedDate":"2022-10-23"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"    private static String findValidDepartment(String test) {","lastModifiedDate":"2022-10-23"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"        String lowerCaseTest \u003d test.toLowerCase();","lastModifiedDate":"2022-10-23"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        for (String department : VALID_DEPARTMENTS) {","lastModifiedDate":"2022-10-23"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"            if (lowerCaseTest.equals(department.toLowerCase())) {","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"                return department;","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-10-23"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"        return NULL_DEPARTMENT;","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"    private static String listValidDepartments() {","lastModifiedDate":"2022-10-23"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"        StringBuilder allValidDepartments \u003d new StringBuilder();","lastModifiedDate":"2022-10-23"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"        for (String department : VALID_DEPARTMENTS) {","lastModifiedDate":"2022-10-23"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"            String toAdd \u003d String.format(\"\u0027%s\u0027, \", department);","lastModifiedDate":"2022-10-23"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"            allValidDepartments.append(toAdd);","lastModifiedDate":"2022-10-23"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        return allValidDepartments.substring(0, allValidDepartments.length() - 2);","lastModifiedDate":"2022-10-23"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-10-23"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"        return value;","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"                || (other instanceof Department // instanceof handles nulls","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 value.equals(((Department) other).value)); // state check","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-23"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-23"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-23"}],"authorContributionMap":{"kevinchangjk":98}},{"path":"src/main/java/coydir/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * Represents a Person\u0027s email in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"    private static final Email NULL \u003d new Email();","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"     * Bypass input validation, allows actual null values.","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"Kok-je"},"content":"    public Email() {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d \"N/A\";","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"    public static Email getNullEmail() {","lastModifiedDate":"2022-10-28"},{"lineNumber":56,"author":{"gitId":"Kok-je"},"content":"        return Email.NULL;","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kok-je":11,"kevinchangjk":3,"prit3010":1,"-":68}},{"path":"src/main/java/coydir/model/person/EmployeeId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import java.util.Set;","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":" * Represents a Person\u0027s employee ID in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmployeeId(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"public class EmployeeId {","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"            \"Employee ID is entirely managed by Coydir. It is a fixed number provided by Coydir. Please do not tamper.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    /*","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"     * The first character of the position must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+\";","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    private static int count \u003d 1;","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    private static Set\u003cInteger\u003e allIds \u003d new HashSet\u003cInteger\u003e();","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    public final String value;","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs a {@code EmployeeId}.","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    public EmployeeId() {","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        allIds.add(count);","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        this.value \u003d String.format(\"%d\", count++);","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs a {@code EmployeeId} with a given ID.","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"     * Uses the raw integer value of the ID (no leading zeroes).","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"     * Called by factory method {@code addEmployeeId}.","lastModifiedDate":"2022-11-02"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"     * Also used primarily in testing.","lastModifiedDate":"2022-11-02"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    public EmployeeId(String id) {","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-11-02"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"        checkArgument(isValidNumber(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-02"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        this.value \u003d String.valueOf(Integer.parseInt(id));","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"     * Resets the static count to a given input.","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"     * Also clears the set for new entries.","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"    public static void restart(int count) {","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"        allIds.clear();","lastModifiedDate":"2022-11-02"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        EmployeeId.count \u003d count;","lastModifiedDate":"2022-11-04"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"     * Factory method for creating a new {@code EmployeeId}.","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"     * Calls the constructor with a given string, but performs validation checks.","lastModifiedDate":"2022-11-04"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    public static EmployeeId addEmployeeId(String id) {","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        requireNonNull(id);","lastModifiedDate":"2022-10-04"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"        checkArgument(isValidEmployeeId(id), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        int rawValue \u003d Integer.parseInt(id);","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"        allIds.add(rawValue);","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        return new EmployeeId(String.valueOf(rawValue));","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"     * Returns true if a given string is a valid number, and can possibly be an employee ID.","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    public static boolean isValidNumber(String test) {","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-11-02"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"     * Returns true if a given string is a valid new Employee ID.","lastModifiedDate":"2022-11-02"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"    public static boolean isValidEmployeeId(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"            return false;","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"        int testValue \u003d Integer.parseInt(test);","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"        return testValue \u003c count \u0026\u0026 !allIds.contains(testValue);","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"     * Sets the current employee count and thus next employee ID.","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"    public static void setCount(int count) {","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        EmployeeId.count \u003d count;","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"    public static int getCount() {","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"        return count;","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        return this.value;","lastModifiedDate":"2022-10-04"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"                || (other instanceof EmployeeId // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":109,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 Integer.valueOf(this.value).equals(Integer.valueOf(((EmployeeId) other).value))); // state check","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"        return this.value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"kevinchangjk":111,"prit3010":6}},{"path":"src/main/java/coydir/model/person/Leave.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"chao890"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":" * Represents a Leave in the database.","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidLeave}","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"public class Leave {","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"chao890"},"content":"    public static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Invalid Date Parameters. Please check for the following : \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"            + \"1. Date should be valid \\n\"","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"chao890"},"content":"            + \"2. Start Date should be equal to or earlier than End Date \\n \"","lastModifiedDate":"2022-10-31"},{"lineNumber":23,"author":{"gitId":"chao890"},"content":"            + \"3. both Dates should be in dd-MM-YYYY \"","lastModifiedDate":"2022-10-31"},{"lineNumber":24,"author":{"gitId":"chao890"},"content":"            + \"4. Year provided should be between 1900 to 2999 inclusive.\";","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"    public static final CustomLeaveComparator COMPARATOR \u003d new CustomLeaveComparator();","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    private static final Pattern DATE_PATTERN \u003d Pattern.compile(","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"                \"^(29-02-(2000|2400|2800|(19|2[0-9])(0[48]|[2468][048]|[13579][26])))$\"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"                        + \"|^((0[1-9]|1[0-9]|2[0-8])-02-((19|2[0-9])[0-9]{2}))$\"","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"                        + \"|^((0[1-9]|[12][0-9]|3[01])-(0[13578]|10|12)-((19|2[0-9])[0-9]{2}))$\"","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"                        + \"|^((0[1-9]|[12][0-9]|30)-(0[469]|11)-((19|2[0-9])[0-9]{2}))$\");","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    public final LocalDate startDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    public final LocalDate endDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"    private final SimpleStringProperty col1;","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"    private final SimpleStringProperty col2;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"    private final SimpleStringProperty col3;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"     * Constructs a {@code Leave}.","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"prit3010"},"content":"     * @param startDate A valid start date.","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"     * @param endDate A valid end date.","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"    public Leave(String startDate, String endDate) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"        this.startDate \u003d LocalDate.parse(startDate, FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"        this.endDate \u003d LocalDate.parse(endDate, FORMAT);","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"        this.col1 \u003d new SimpleStringProperty(this.startDate.format(FORMAT));","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"        this.col2 \u003d new SimpleStringProperty(this.endDate.format(FORMAT));","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"ngshijun"},"content":"        if (getTotalDays() \u003d\u003d 1) {","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ngshijun"},"content":"            this.col3 \u003d new SimpleStringProperty(String.valueOf(getTotalDays()) + \" day\");","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Kok-je"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"ngshijun"},"content":"            this.col3 \u003d new SimpleStringProperty(String.valueOf(getTotalDays()) + \" days\");","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"ngshijun"},"content":"    public String getCol1() {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"ngshijun"},"content":"        return this.col1.get();","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"ngshijun"},"content":"    public String getCol2() {","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"ngshijun"},"content":"        return this.col2.get();","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"ngshijun"},"content":"    public String getCol3() {","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"ngshijun"},"content":"        return this.col3.get();","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"ngshijun"},"content":"     * Check whether current date falls under this leave time frame.","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"ngshijun"},"content":"     * @return true if current date falls under this leave time frame, false otherwise.","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"ngshijun"},"content":"    public boolean isOnLeave() {","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"ngshijun"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"ngshijun"},"content":"        return !(currentDate.isBefore(startDate) || currentDate.isAfter(endDate));","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"     * Returns true if a endDate and StartDate makes sense.","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"    public static boolean isValidLeave(String startDate, String endDate) {","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"prit3010"},"content":"        try {","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"prit3010"},"content":"            boolean startDateValid \u003d DATE_PATTERN.matcher(startDate).matches();","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"            boolean endDateValid \u003d DATE_PATTERN.matcher(endDate).matches();","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"            if (startDateValid \u0026\u0026 endDateValid) {","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"prit3010"},"content":"                final int b \u003d LocalDate.parse(endDate, FORMAT).compareTo(LocalDate.parse(startDate, FORMAT));","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"                return b \u003e\u003d 0;","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"prit3010"},"content":"            } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"prit3010"},"content":"                return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"prit3010"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"prit3010"},"content":"            return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":98,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"chao890"},"content":"     * Returns true if a leave overlaps with another.","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"chao890"},"content":"    public boolean isOverlapping(Leave otherLeave) {","lastModifiedDate":"2022-10-24"},{"lineNumber":102,"author":{"gitId":"chao890"},"content":"        return (this.startDate.compareTo(otherLeave.startDate) \u003e\u003d 0","lastModifiedDate":"2022-10-25"},{"lineNumber":103,"author":{"gitId":"chao890"},"content":"                \u0026\u0026 this.startDate.compareTo(otherLeave.endDate) \u003c\u003d 0)","lastModifiedDate":"2022-10-25"},{"lineNumber":104,"author":{"gitId":"chao890"},"content":"                || (this.endDate.compareTo(otherLeave.startDate) \u003e\u003d 0","lastModifiedDate":"2022-10-25"},{"lineNumber":105,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 this.endDate.compareTo(otherLeave.endDate) \u003c\u003d 0)","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"prit3010"},"content":"                || this.startDate.compareTo(otherLeave.startDate) \u003e\u003d 0","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 this.endDate.compareTo(otherLeave.endDate) \u003c\u003d 0","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"prit3010"},"content":"                || this.startDate.compareTo(otherLeave.startDate) \u003c\u003d 0","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 this.endDate.compareTo(otherLeave.endDate) \u003e\u003d 0;","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"chao890"},"content":"    /**","lastModifiedDate":"2022-10-25"},{"lineNumber":113,"author":{"gitId":"chao890"},"content":"     * Returns a comparator for two Leave objects in a queue.","lastModifiedDate":"2022-10-25"},{"lineNumber":114,"author":{"gitId":"chao890"},"content":"     */","lastModifiedDate":"2022-10-25"},{"lineNumber":115,"author":{"gitId":"chao890"},"content":"    public static class CustomLeaveComparator implements Comparator\u003cLeave\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":116,"author":{"gitId":"chao890"},"content":"        @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":117,"author":{"gitId":"chao890"},"content":"        public int compare(Leave o1, Leave o2) {","lastModifiedDate":"2022-10-25"},{"lineNumber":118,"author":{"gitId":"chao890"},"content":"            return o2.startDate.compareTo(o1.startDate);","lastModifiedDate":"2022-10-25"},{"lineNumber":119,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":122,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":123,"author":{"gitId":"prit3010"},"content":"     * Returns number of days","lastModifiedDate":"2022-10-18"},{"lineNumber":124,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":125,"author":{"gitId":"prit3010"},"content":"    public int getTotalDays() {","lastModifiedDate":"2022-10-18"},{"lineNumber":126,"author":{"gitId":"ngshijun"},"content":"        return (int) DAYS.between(startDate, endDate) + 1;","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":128,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"prit3010"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":130,"author":{"gitId":"prit3010"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-19"},{"lineNumber":131,"author":{"gitId":"prit3010"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-19"},{"lineNumber":132,"author":{"gitId":"prit3010"},"content":"            return true;","lastModifiedDate":"2022-10-19"},{"lineNumber":133,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":135,"author":{"gitId":"prit3010"},"content":"        if (!(other instanceof Leave)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":136,"author":{"gitId":"prit3010"},"content":"            return false;","lastModifiedDate":"2022-10-19"},{"lineNumber":137,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":138,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"prit3010"},"content":"        Leave otherLeave \u003d (Leave) other;","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"prit3010"},"content":"        return this.startDate.equals(otherLeave.startDate)","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 this.endDate.equals(otherLeave.endDate);","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":144,"author":{"gitId":"prit3010"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":145,"author":{"gitId":"prit3010"},"content":"    public String toString() {","lastModifiedDate":"2022-10-19"},{"lineNumber":146,"author":{"gitId":"prit3010"},"content":"        return String.format(\"%s - %s\", startDate, endDate);","lastModifiedDate":"2022-10-19"},{"lineNumber":147,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"        return Objects.hash(startDate, endDate);","lastModifiedDate":"2022-10-28"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"ngshijun":34,"Kok-je":2,"chao890":25,"kevinchangjk":6,"prit3010":86}},{"path":"src/main/java/coydir/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * Represents a Person\u0027s name in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":1,"-":56}},{"path":"src/main/java/coydir/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Kok-je"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"chao890"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"chao890"},"content":"import java.util.Queue;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":" * Represents a Person in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    private final EmployeeId employeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    private final Position position;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"    private final Department department;","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"chao890"},"content":"    private Queue\u003cLeave\u003e leaves \u003d new PriorityQueue\u003c\u003e(Leave.COMPARATOR);","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"    private final int totalNumberOfLeaves;","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"    private int leavesLeft \u003d 0;","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"    private ArrayList\u003cRating\u003e performanceHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"    private Rating rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"    // Rating table requirements","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"    private SimpleStringProperty col1;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ngshijun"},"content":"    private SimpleStringProperty col2;","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ngshijun"},"content":"    private SimpleStringProperty col3;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    public Person(Name name, EmployeeId employeeId, Phone phone, Email email, Position position,","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"Kok-je"},"content":"            Department department, Address address, Set\u003cTag\u003e tags, int numberOfLeaves, Rating rating) {","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Kok-je"},"content":"        requireAllNonNull(name, employeeId, phone, email, position, department, address, numberOfLeaves, rating);","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        this.employeeId \u003d employeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"        this.totalNumberOfLeaves \u003d numberOfLeaves;","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"        this.leavesLeft \u003d numberOfLeaves;","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"Kok-je"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"ngshijun"},"content":"        this.col1 \u003d new SimpleStringProperty(this.employeeId.toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ngshijun"},"content":"        this.col2 \u003d new SimpleStringProperty(this.name.toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"        this.col3 \u003d new SimpleStringProperty(this.rating.toString());","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"        return this.name;","lastModifiedDate":"2022-10-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"    public EmployeeId getEmployeeId() {","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"        return this.employeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"        return this.phone;","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        return this.email;","lastModifiedDate":"2022-10-04"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"    public Position getPosition() {","lastModifiedDate":"2022-10-04"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"        return this.position;","lastModifiedDate":"2022-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"    public Department getDepartment() {","lastModifiedDate":"2022-10-23"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"        return this.department;","lastModifiedDate":"2022-10-23"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-23"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        return this.address;","lastModifiedDate":"2022-10-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":96,"author":{"gitId":"ngshijun"},"content":"    public String getCol1() {","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"ngshijun"},"content":"        return this.col1.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"ngshijun"},"content":"    public String getCol2() {","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"ngshijun"},"content":"        return this.col2.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"ngshijun"},"content":"    public String getCol3() {","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"ngshijun"},"content":"        return this.col3.get();","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"prit3010"},"content":"    public void addLeave(Leave toAdd) {","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"prit3010"},"content":"        this.leaves.add(toAdd);","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"prit3010"},"content":"    public void deleteLeave(Leave toDelete) {","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"prit3010"},"content":"        this.leaves.remove(toDelete);","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":124,"author":{"gitId":"chao890"},"content":"    public Queue\u003cLeave\u003e getLeaves() {","lastModifiedDate":"2022-10-25"},{"lineNumber":125,"author":{"gitId":"chao890"},"content":"        return this.leaves;","lastModifiedDate":"2022-10-25"},{"lineNumber":126,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"ngshijun"},"content":"    public ObservableList\u003cLeave\u003e getObservableListLeaves() {","lastModifiedDate":"2022-10-26"},{"lineNumber":129,"author":{"gitId":"chao890"},"content":"        ObservableList\u003cLeave\u003e list \u003d FXCollections.observableArrayList(leaves);","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"chao890"},"content":"        list.sort(Leave.COMPARATOR);","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"chao890"},"content":"        return list;","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":133,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":134,"author":{"gitId":"prit3010"},"content":"    public int getTotalNumberOfLeaves() {","lastModifiedDate":"2022-10-18"},{"lineNumber":135,"author":{"gitId":"prit3010"},"content":"        return this.totalNumberOfLeaves;","lastModifiedDate":"2022-10-18"},{"lineNumber":136,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":137,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":138,"author":{"gitId":"prit3010"},"content":"    public int getLeavesLeft() {","lastModifiedDate":"2022-10-18"},{"lineNumber":139,"author":{"gitId":"prit3010"},"content":"        return this.leavesLeft;","lastModifiedDate":"2022-10-18"},{"lineNumber":140,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":141,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":142,"author":{"gitId":"prit3010"},"content":"    public void setLeavesLeft(int leavesLeft) {","lastModifiedDate":"2022-10-18"},{"lineNumber":143,"author":{"gitId":"prit3010"},"content":"        this.leavesLeft \u003d leavesLeft;","lastModifiedDate":"2022-10-18"},{"lineNumber":144,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":146,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-28"},{"lineNumber":147,"author":{"gitId":"ngshijun"},"content":"     * Add a rating to the person.","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"ngshijun"},"content":"     * @param toAdd the rating to be added.","lastModifiedDate":"2022-10-28"},{"lineNumber":149,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-28"},{"lineNumber":150,"author":{"gitId":"Kok-je"},"content":"    public void addRating(Rating toAdd) {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"Kok-je"},"content":"        this.performanceHistory.add(toAdd);","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"ngshijun"},"content":"        this.col3 \u003d new SimpleStringProperty(toAdd.toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":153,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"Kok-je"},"content":"    public void setRating(Rating rating) {","lastModifiedDate":"2022-10-26"},{"lineNumber":156,"author":{"gitId":"Kok-je"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"ngshijun"},"content":"        this.col3 \u003d new SimpleStringProperty(rating.toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":159,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"Kok-je"},"content":"    public Rating getRating() {","lastModifiedDate":"2022-10-26"},{"lineNumber":161,"author":{"gitId":"Kok-je"},"content":"        return this.rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"Kok-je"},"content":"    public ArrayList\u003cRating\u003e getRatingHistory() {","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"Kok-je"},"content":"        return this.performanceHistory;","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"chao890"},"content":"    public void setRatingHistory(ArrayList\u003cRating\u003e ratinglist) {","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"chao890"},"content":"        this.performanceHistory \u003d ratinglist;","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"chao890"},"content":"    public void setLeaves(Queue\u003cLeave\u003e leaves) {","lastModifiedDate":"2022-10-27"},{"lineNumber":173,"author":{"gitId":"chao890"},"content":"        this.leaves \u003d leaves;","lastModifiedDate":"2022-10-27"},{"lineNumber":174,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":175,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":176,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":177,"author":{"gitId":"ngshijun"},"content":"     * Check whether a person is currently on leave","lastModifiedDate":"2022-10-26"},{"lineNumber":178,"author":{"gitId":"ngshijun"},"content":"     * @return a string representation of \"true\" if the person is currently on leave, \"false\" otherwise.","lastModifiedDate":"2022-10-26"},{"lineNumber":179,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":180,"author":{"gitId":"ngshijun"},"content":"    public String onLeaveStatus() {","lastModifiedDate":"2022-10-26"},{"lineNumber":181,"author":{"gitId":"ngshijun"},"content":"        for (Leave leave: leaves) {","lastModifiedDate":"2022-10-26"},{"lineNumber":182,"author":{"gitId":"ngshijun"},"content":"            if (leave.isOnLeave()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":183,"author":{"gitId":"ngshijun"},"content":"                return \"True\";","lastModifiedDate":"2022-10-26"},{"lineNumber":184,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":185,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":186,"author":{"gitId":"ngshijun"},"content":"        return \"False\";","lastModifiedDate":"2022-10-26"},{"lineNumber":187,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":190,"author":{"gitId":"ngshijun"},"content":"     * Check whether a person is currently on leave","lastModifiedDate":"2022-10-27"},{"lineNumber":191,"author":{"gitId":"ngshijun"},"content":"     * @return true if the person is currently on leave, false otherwise.","lastModifiedDate":"2022-10-27"},{"lineNumber":192,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":193,"author":{"gitId":"ngshijun"},"content":"    public boolean isOnLeave() {","lastModifiedDate":"2022-10-27"},{"lineNumber":194,"author":{"gitId":"ngshijun"},"content":"        for (Leave leave: leaves) {","lastModifiedDate":"2022-10-27"},{"lineNumber":195,"author":{"gitId":"ngshijun"},"content":"            if (leave.isOnLeave()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":196,"author":{"gitId":"ngshijun"},"content":"                return true;","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":198,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":199,"author":{"gitId":"ngshijun"},"content":"        return false;","lastModifiedDate":"2022-10-27"},{"lineNumber":200,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":201,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":215,"author":{"gitId":"chao890"},"content":"    private boolean isSameLeaves(Queue\u003cLeave\u003e queue) {","lastModifiedDate":"2022-10-26"},{"lineNumber":216,"author":{"gitId":"chao890"},"content":"        Queue\u003cLeave\u003e copy1 \u003d new PriorityQueue\u003c\u003e(this.leaves);","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"chao890"},"content":"        Queue\u003cLeave\u003e copy2 \u003d new PriorityQueue\u003c\u003e(queue);","lastModifiedDate":"2022-10-26"},{"lineNumber":218,"author":{"gitId":"chao890"},"content":"        if (!(this.leaves.size() \u003d\u003d queue.size())) {","lastModifiedDate":"2022-10-26"},{"lineNumber":219,"author":{"gitId":"chao890"},"content":"            return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":220,"author":{"gitId":"chao890"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":221,"author":{"gitId":"chao890"},"content":"            for (Leave leave: copy1) {","lastModifiedDate":"2022-10-26"},{"lineNumber":222,"author":{"gitId":"chao890"},"content":"                if (copy1.poll() !\u003d copy2.poll()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":223,"author":{"gitId":"chao890"},"content":"                    return false;","lastModifiedDate":"2022-10-26"},{"lineNumber":224,"author":{"gitId":"chao890"},"content":"                }","lastModifiedDate":"2022-10-26"},{"lineNumber":225,"author":{"gitId":"chao890"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"chao890"},"content":"            return true;","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"chao890"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":228,"author":{"gitId":"chao890"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":229,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":246,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 otherPerson.getEmployeeId().equals(getEmployeeId())","lastModifiedDate":"2022-10-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":249,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 otherPerson.getPosition().equals(getPosition())","lastModifiedDate":"2022-10-04"},{"lineNumber":250,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 otherPerson.getDepartment().equals(getDepartment())","lastModifiedDate":"2022-10-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":252,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"chao890"},"content":"                \u0026\u0026 this.isSameLeaves(otherPerson.getLeaves())","lastModifiedDate":"2022-10-26"},{"lineNumber":254,"author":{"gitId":"prit3010"},"content":"                \u0026\u0026 otherPerson.getTotalNumberOfLeaves() \u003d\u003d getTotalNumberOfLeaves()","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"Kok-je"},"content":"                \u0026\u0026 otherPerson.getLeavesLeft() \u003d\u003d getLeavesLeft()","lastModifiedDate":"2022-10-26"},{"lineNumber":256,"author":{"gitId":"Kok-je"},"content":"                \u0026\u0026 otherPerson.getRating().equals(getRating())","lastModifiedDate":"2022-10-26"},{"lineNumber":257,"author":{"gitId":"Kok-je"},"content":"                \u0026\u0026 otherPerson.getRatingHistory().equals(getRatingHistory());","lastModifiedDate":"2022-10-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":263,"author":{"gitId":"kevinchangjk"},"content":"        return Objects.hash(name, employeeId, phone, email, position, department, address, tags,","lastModifiedDate":"2022-10-23"},{"lineNumber":264,"author":{"gitId":"Kok-je"},"content":"                leaves, totalNumberOfLeaves, leavesLeft, rating);","lastModifiedDate":"2022-10-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":271,"author":{"gitId":"kevinchangjk"},"content":"                .append(\"; Employee ID: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":272,"author":{"gitId":"kevinchangjk"},"content":"                .append(getEmployeeId())","lastModifiedDate":"2022-10-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":277,"author":{"gitId":"kevinchangjk"},"content":"                .append(\"; Position: \")","lastModifiedDate":"2022-10-04"},{"lineNumber":278,"author":{"gitId":"kevinchangjk"},"content":"                .append(getPosition())","lastModifiedDate":"2022-10-04"},{"lineNumber":279,"author":{"gitId":"kevinchangjk"},"content":"                .append(\"; Department: \")","lastModifiedDate":"2022-10-23"},{"lineNumber":280,"author":{"gitId":"kevinchangjk"},"content":"                .append(getDepartment())","lastModifiedDate":"2022-10-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":282,"author":{"gitId":"prit3010"},"content":"                .append(getAddress())","lastModifiedDate":"2022-10-18"},{"lineNumber":283,"author":{"gitId":"prit3010"},"content":"                .append(\"; Total Leaves: \")","lastModifiedDate":"2022-10-18"},{"lineNumber":284,"author":{"gitId":"prit3010"},"content":"                .append(getTotalNumberOfLeaves())","lastModifiedDate":"2022-10-18"},{"lineNumber":285,"author":{"gitId":"prit3010"},"content":"                .append(\"; Number of Leaves Left: \")","lastModifiedDate":"2022-10-18"},{"lineNumber":286,"author":{"gitId":"Kok-je"},"content":"                .append(getLeavesLeft())","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"Kok-je"},"content":"                .append(\"; Performance: \")","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"Kok-je"},"content":"                .append(getRating());","lastModifiedDate":"2022-10-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":295,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":296,"author":{"gitId":"chao890"},"content":"        Queue\u003cLeave\u003e leaves \u003d getLeaves();","lastModifiedDate":"2022-10-25"},{"lineNumber":297,"author":{"gitId":"prit3010"},"content":"        if (!leaves.isEmpty()) {","lastModifiedDate":"2022-10-19"},{"lineNumber":298,"author":{"gitId":"prit3010"},"content":"            builder.append(\"; Leaves: \");","lastModifiedDate":"2022-10-19"},{"lineNumber":299,"author":{"gitId":"prit3010"},"content":"            leaves.forEach(builder::append);","lastModifiedDate":"2022-10-19"},{"lineNumber":300,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":301,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":302,"author":{"gitId":"Kok-je"},"content":"        ArrayList\u003cRating\u003e performanceHistory \u003d getRatingHistory();","lastModifiedDate":"2022-10-26"},{"lineNumber":303,"author":{"gitId":"Kok-je"},"content":"        if (!performanceHistory.isEmpty()) {","lastModifiedDate":"2022-10-26"},{"lineNumber":304,"author":{"gitId":"Kok-je"},"content":"            builder.append(\"; Performance History: \");","lastModifiedDate":"2022-10-26"},{"lineNumber":305,"author":{"gitId":"Kok-je"},"content":"            performanceHistory.forEach(builder::append);","lastModifiedDate":"2022-10-27"},{"lineNumber":306,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":307,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ngshijun":58,"Kok-je":35,"kevinchangjk":37,"chao890":33,"prit3010":38,"-":110}},{"path":"src/main/java/coydir/model/person/PersonMatchesKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-25"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-10-25"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":" * Tests that a {@code Person} matches all of the keywords given, for name, position, and/or department.","lastModifiedDate":"2022-10-25"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"public class PersonMatchesKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2022-10-25"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"    private final String keywordName;","lastModifiedDate":"2022-10-25"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"    private final String keywordPosition;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    private final String keywordDepartment;","lastModifiedDate":"2022-10-25"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"     * Constructor for {@Code PersonMatchesKeywordsPredicate}.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"     * Though in functionality there has to be at least one keyword (no need for all 3),","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"     * to construct an instance all 3 arguments must be provided.","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"     * @param keywordName Keyword for name search.","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"     * @param keywordPosition Keyword for position search.","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"     * @param keywordDepartment Keyword for department search.","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    public PersonMatchesKeywordsPredicate(","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"            String keywordName, String keywordPosition, String keywordDepartment) {","lastModifiedDate":"2022-10-25"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        this.keywordName \u003d keywordName.toLowerCase();","lastModifiedDate":"2022-10-25"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        this.keywordPosition \u003d keywordPosition.toLowerCase();","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"        this.keywordDepartment \u003d keywordDepartment.toLowerCase();","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        String lowerCaseName \u003d person.getName().fullName.toLowerCase();","lastModifiedDate":"2022-10-25"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"        String lowerCasePosition \u003d person.getPosition().value.toLowerCase();","lastModifiedDate":"2022-10-25"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        String lowerCaseDepartment \u003d person.getDepartment().value.toLowerCase();","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        return lowerCaseName.contains(keywordName)","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 lowerCasePosition.contains(keywordPosition)","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 lowerCaseDepartment.contains(keywordDepartment);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-25"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-25"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-25"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"                || (other instanceof PersonMatchesKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-25"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 keywordName.equals(((PersonMatchesKeywordsPredicate) other).keywordName) // state check","lastModifiedDate":"2022-10-25"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 keywordPosition.equals(((PersonMatchesKeywordsPredicate) other).keywordPosition)","lastModifiedDate":"2022-10-25"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 keywordDepartment.equals(((PersonMatchesKeywordsPredicate) other).keywordDepartment));","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-25"}],"authorContributionMap":{"kevinchangjk":48}},{"path":"src/main/java/coydir/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * Represents a Person\u0027s phone number in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"            \"Phone numbers should only contain numbers, and it should be \"","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"            + \"from 3 digits to 15 digits long\";","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,15}\";","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"Kok-je"},"content":"    private static final Phone NULL \u003d new Phone();","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"Kok-je"},"content":"     * Bypass input validation, allows actual null values.","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"    public Phone() {","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d \"N/A\";","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    public static Phone getNullPhone() {","lastModifiedDate":"2022-10-28"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"        return Phone.NULL;","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Kok-je":11,"kevinchangjk":3,"prit3010":4,"-":47}},{"path":"src/main/java/coydir/model/person/Position.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * Represents a Person\u0027s position in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPosition(String)}","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"public class Position {","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"            \"Positions can take any values, and it should not be blank\";","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"    /*","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"     * The first character of the position must not be a whitespace,","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-04"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    public final String value;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"     * Constructs a {@code Position}.","lastModifiedDate":"2022-10-23"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"     * @param position A valid position.","lastModifiedDate":"2022-10-23"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    public Position(String position) {","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        requireNonNull(position);","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        checkArgument(isValidPosition(position), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        this.value \u003d position;","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"     * Returns true if a given string is a valid position.","lastModifiedDate":"2022-10-23"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    public static boolean isValidPosition(String test) {","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    public String toString() {","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"        return this.value;","lastModifiedDate":"2022-10-04"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-04"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-04"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"                || (other instanceof Position // instanceof handles nulls","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"                \u0026\u0026 this.value.equals(((Position) other).value)); // state check","lastModifiedDate":"2022-10-04"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"    @Override","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        return this.value.hashCode();","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"kevinchangjk":58,"prit3010":1}},{"path":"src/main/java/coydir/model/person/Rating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kok-je"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Kok-je"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-26"},{"lineNumber":4,"author":{"gitId":"Kok-je"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-26"},{"lineNumber":5,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Kok-je"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Kok-je"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Kok-je"},"content":"import java.util.Objects;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":" * Represents a Person\u0027s rating in the database.","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPosition(String)}","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"Kok-je"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"public class Rating {","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Kok-je"},"content":"            \"Ratings can take any integer values from 1 - 5 inclusive, and it should not be blank\\n\"","lastModifiedDate":"2022-11-02"},{"lineNumber":20,"author":{"gitId":"Kok-je"},"content":"          + \"5: Outstanding | 4: Exceeds Expectations | 3: Satisfactory | 2: Needs Improvement | 1: Unsatisfactory.\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"    public static final String MESSAGE_CONSTRAINTS_TIMESTAMP \u003d \"Invalid Timestamp, please follow dd-MM-yyyy\";","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-5]\";","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Kok-je"},"content":"    private static final Rating NULL \u003d new Rating();","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Kok-je"},"content":"    private static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Kok-je"},"content":"    public final LocalDate timestamp;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Kok-je"},"content":"    public final String value;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Kok-je"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Kok-je"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":31,"author":{"gitId":"Kok-je"},"content":"     * @param name A valid name.","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"    public Rating(String rating) {","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Kok-je"},"content":"        requireNonNull(rating);","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"        checkArgument(isValidRating(rating), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"        this.timestamp \u003d LocalDate.now();","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"     * Constructs a {@code Rating}.","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Kok-je"},"content":"     * @param rating A valid rating.","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"     * @param timestamp Timestamp when rating is added.","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"     * @throws ParseException","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Kok-je"},"content":"    public Rating(String rating, String timestamp) throws ParseException {","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Kok-je"},"content":"        checkArgument(isValidRating(rating), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"        try {","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"Kok-je"},"content":"            this.timestamp \u003d LocalDate.parse(timestamp, FORMAT);","lastModifiedDate":"2022-10-26"},{"lineNumber":51,"author":{"gitId":"Kok-je"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2022-10-26"},{"lineNumber":52,"author":{"gitId":"Kok-je"},"content":"            throw new ParseException(MESSAGE_CONSTRAINTS_TIMESTAMP);","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":56,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"Kok-je"},"content":"     * Bypass input validation, allows actual null values.","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Kok-je"},"content":"    public Rating() {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d \"N/A\";","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"Kok-je"},"content":"        this.timestamp \u003d LocalDate.now();","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"    public static Rating getNullRating() {","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"Kok-je"},"content":"        return Rating.NULL;","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"Kok-je"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2022-10-26"},{"lineNumber":69,"author":{"gitId":"Kok-je"},"content":"        return this.timestamp;","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"Kok-je"},"content":"     * Returns true if a given string is a valid rating.","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"Kok-je"},"content":"    public static boolean isValidRating(String test) {","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"Kok-je"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Kok-je"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"Kok-je"},"content":"    public String toString() {","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"Kok-je"},"content":"        return this.value;","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"Kok-je"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"Kok-je"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"Kok-je"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"Kok-je"},"content":"                || (other instanceof Rating // instanceof handles nulls","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"Kok-je"},"content":"                \u0026\u0026 this.value.equals(((Rating) other).value)); // state check","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":90,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":91,"author":{"gitId":"Kok-je"},"content":"    @Override","lastModifiedDate":"2022-10-26"},{"lineNumber":92,"author":{"gitId":"Kok-je"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"Kok-je"},"content":"        return Objects.hash(value, timestamp);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":95,"author":{"gitId":"Kok-je"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Kok-je":94,"kevinchangjk":1}},{"path":"src/main/java/coydir/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"ngshijun"},"content":"    public Person getPersons(int index) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"ngshijun"},"content":"        return internalList.get(index);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ngshijun":4,"kevinchangjk":4,"-":133}},{"path":"src/main/java/coydir/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person.exceptions;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kevinchangjk":1,"-":10}},{"path":"src/main/java/coydir/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person.exceptions;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"kevinchangjk":1,"-":5}},{"path":"src/main/java/coydir/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * Represents a Tag in the database.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":2,"-":50}},{"path":"src/main/java/coydir/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-23"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":" * Contains utility methods for populating {@code Database} with sample data.","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"            new Person(new Name(\"Alex Yeoh\"), new EmployeeId(), new Phone(\"87438807\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"                new Email(\"alexyeoh@example.com\"), new Position(\"Chief Technology Officer\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"                new Department(\"General Management\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":29,"author":{"gitId":"Kok-je"},"content":"                getTagSet(\"friends\"), 14, new Rating()),","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"            new Person(new Name(\"Bernice Yu\"), new EmployeeId(), new Phone(\"99272758\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"                new Email(\"berniceyu@example.com\"), new Position(\"Chief of Staff\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"                new Department(\"General Management\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"                getTagSet(\"colleagues\", \"friends\"), 14, new Rating()),","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new EmployeeId(), new Phone(\"93210283\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"                new Email(\"charlotte@example.com\"), new Position(\"Chief Executive Officer\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"                new Department(\"General Management\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"                getTagSet(\"neighbours\"), 14, new Rating()),","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"            new Person(new Name(\"David Li\"), new EmployeeId(), new Phone(\"91031282\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"                new Email(\"lidavid@example.com\"), new Position(\"Janitor\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"                new Department(\"Administration\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"                getTagSet(\"family\"), 14, new Rating()),","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new EmployeeId(), new Phone(\"92492021\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"                new Email(\"irfan@example.com\"), new Position(\"Senior Product Manager\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"                new Department(\"Product Management\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"                getTagSet(\"classmates\"), 14, new Rating()),","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new EmployeeId(), new Phone(\"92624417\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"                new Email(\"royb@example.com\"), new Position(\"UI/UX Designer\"),","lastModifiedDate":"2022-10-04"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"                new Department(\"Information Technology\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"                getTagSet(\"colleagues\"), 14, new Rating())","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"    public static ReadOnlyDatabase getSampleDatabase() {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"        Database sampleAb \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Kok-je":7,"kevinchangjk":28,"prit3010":5,"-":30}},{"path":"src/main/java/coydir/storage/DatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.storage;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":" * Represents a storage for {@link Database}.","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"public interface DatabaseStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"     * Returns database data as a {@link ReadOnlyDatabase}.","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"     * @see #getDatabaseFilePath()","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"     * Saves the given {@link ReadOnlyDatabase} to the storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"     * @param database cannot be null.","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"     * @see #saveDatabase(ReadOnlyDatabase)","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"prit3010"},"content":"    void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"prit3010":46}},{"path":"src/main/java/coydir/storage/JsonAdaptedLeave.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.storage;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"chao890"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-25"},{"lineNumber":4,"author":{"gitId":"chao890"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Leave;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":" * Jackson-friendly version of {@link Leave}.","lastModifiedDate":"2022-10-23"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"class JsonAdaptedLeave {","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"    private final String startDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"    private final String endDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"     * Constructs a {@code JsonAdaptedLeave} with the given {@code startDate} and {@code endDate}.","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"    public JsonAdaptedLeave(@JsonProperty(\"startDate\") String startDate, @JsonProperty(\"endDate\") String endDate) {","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"     * Converts a given {@code Leave} into this class for Jackson use.","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"    public JsonAdaptedLeave(Leave source) {","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"chao890"},"content":"        this.startDate \u003d source.startDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"        this.endDate \u003d source.endDate.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"     * Converts this Jackson-friendly adapted Leave object into the model\u0027s {@code Leave} object.","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Leave.","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"    public Leave toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"prit3010"},"content":"        if (!Leave.isValidLeave(startDate, endDate)) {","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"chao890"},"content":"            throw new IllegalValueException(\"Leave not valid\");","lastModifiedDate":"2022-10-25"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"        return new Leave(startDate, endDate);","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"chao890":5,"prit3010":45}},{"path":"src/main/java/coydir/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-23"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Leave;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    public static final String LEAVES_FIELD \u003d \"Number of Leaves\";","lastModifiedDate":"2022-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    private final String employeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    private final String position;","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    private final String department;","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"    private final String leave;","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"    private final String leaveLeft;","lastModifiedDate":"2022-10-23"},{"lineNumber":42,"author":{"gitId":"Kok-je"},"content":"    private final String rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"    private final List\u003cJsonAdaptedLeave\u003e leaveTaken \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"Kok-je"},"content":"    private final List\u003cJsonAdaptedRating\u003e performanceHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"employeeId\") String employeeId,","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"            @JsonProperty(\"position\") String position, @JsonProperty(\"department\") String department,","lastModifiedDate":"2022-10-24"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"leave\") String leave,","lastModifiedDate":"2022-10-24"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"            @JsonProperty(\"leaveLeft\") String leaveLeft, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2022-10-23"},{"lineNumber":57,"author":{"gitId":"Kok-je"},"content":"            @JsonProperty(\"leaveTaken\") List\u003cJsonAdaptedLeave\u003e leaveTaken,","lastModifiedDate":"2022-10-26"},{"lineNumber":58,"author":{"gitId":"Kok-je"},"content":"            @JsonProperty(\"rating\") String rating,","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"Kok-je"},"content":"            @JsonProperty(\"performanceHistory\") List\u003cJsonAdaptedRating\u003e performanceHistory) {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"        this.employeeId \u003d employeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"        this.position \u003d position;","lastModifiedDate":"2022-10-04"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        this.department \u003d department;","lastModifiedDate":"2022-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"        this.leave \u003d leave;","lastModifiedDate":"2022-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"        this.leaveLeft \u003d leaveLeft;","lastModifiedDate":"2022-10-23"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"        if (leaveTaken !\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"            this.leaveTaken.addAll(leaveTaken);","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"Kok-je"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"Kok-je"},"content":"        if (performanceHistory !\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"Kok-je"},"content":"            this.performanceHistory.addAll(performanceHistory);","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"        employeeId \u003d source.getEmployeeId().value;","lastModifiedDate":"2022-10-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"        position \u003d source.getPosition().value;","lastModifiedDate":"2022-10-04"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"        department \u003d source.getDepartment().value;","lastModifiedDate":"2022-10-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"        leave \u003d String.valueOf(source.getTotalNumberOfLeaves());","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"        leaveLeft \u003d String.valueOf(source.getLeavesLeft());","lastModifiedDate":"2022-10-23"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"        leaveTaken.addAll(source.getLeaves().stream()","lastModifiedDate":"2022-10-19"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"                .map(JsonAdaptedLeave::new)","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"Kok-je"},"content":"        rating \u003d String.valueOf(source.getRating());","lastModifiedDate":"2022-10-26"},{"lineNumber":102,"author":{"gitId":"Kok-je"},"content":"        performanceHistory.addAll(source.getRatingHistory().stream()","lastModifiedDate":"2022-10-26"},{"lineNumber":103,"author":{"gitId":"Kok-je"},"content":"                .map(JsonAdaptedRating::new)","lastModifiedDate":"2022-10-26"},{"lineNumber":104,"author":{"gitId":"Kok-je"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"prit3010"},"content":"        final List\u003cLeave\u003e personLeaves \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":119,"author":{"gitId":"prit3010"},"content":"        for (JsonAdaptedLeave leave : leaveTaken) {","lastModifiedDate":"2022-10-19"},{"lineNumber":120,"author":{"gitId":"prit3010"},"content":"            personLeaves.add(leave.toModelType());","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":122,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":123,"author":{"gitId":"Kok-je"},"content":"        final List\u003cRating\u003e personRatings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":124,"author":{"gitId":"Kok-je"},"content":"        for (JsonAdaptedRating rating : performanceHistory) {","lastModifiedDate":"2022-10-26"},{"lineNumber":125,"author":{"gitId":"Kok-je"},"content":"            personRatings.add(rating.toModelType());","lastModifiedDate":"2022-10-26"},{"lineNumber":126,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":127,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"kevinchangjk"},"content":"        if (employeeId \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, EmployeeId.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":140,"author":{"gitId":"kevinchangjk"},"content":"        if (!EmployeeId.isValidEmployeeId(employeeId)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"            throw new IllegalValueException(EmployeeId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":142,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"        final EmployeeId modelEmployeeId \u003d EmployeeId.addEmployeeId(employeeId);","lastModifiedDate":"2022-11-02"},{"lineNumber":144,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":145,"author":{"gitId":"prit3010"},"content":"        final Phone modelPhone;","lastModifiedDate":"2022-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"prit3010"},"content":"        } else if (phone.equals(\"N/A\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"prit3010"},"content":"            modelPhone \u003d new Phone();","lastModifiedDate":"2022-10-25"},{"lineNumber":150,"author":{"gitId":"prit3010"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"prit3010"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"prit3010"},"content":"            modelPhone \u003d new Phone(phone);","lastModifiedDate":"2022-10-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"prit3010"},"content":"        final Email modelEmail;","lastModifiedDate":"2022-10-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"prit3010"},"content":"        } else if (email.equals(\"N/A\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":160,"author":{"gitId":"prit3010"},"content":"            modelEmail \u003d new Email();","lastModifiedDate":"2022-10-25"},{"lineNumber":161,"author":{"gitId":"prit3010"},"content":"        } else if (!Email.isValidEmail(email)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"prit3010"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":164,"author":{"gitId":"prit3010"},"content":"            modelEmail \u003d new Email(email);","lastModifiedDate":"2022-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"kevinchangjk"},"content":"        if (position \u003d\u003d null) {","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"                    Position.class.getSimpleName()));","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"kevinchangjk"},"content":"        if (!Position.isValidPosition(position)) {","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"kevinchangjk"},"content":"            throw new IllegalValueException(Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"kevinchangjk"},"content":"        final Position modelPosition \u003d new Position(position);","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"        if (department \u003d\u003d null) {","lastModifiedDate":"2022-10-23"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-23"},{"lineNumber":178,"author":{"gitId":"kevinchangjk"},"content":"                    Department.class.getSimpleName()));","lastModifiedDate":"2022-10-23"},{"lineNumber":179,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":180,"author":{"gitId":"kevinchangjk"},"content":"        if (!Department.isValidDepartment(department)) {","lastModifiedDate":"2022-10-23"},{"lineNumber":181,"author":{"gitId":"kevinchangjk"},"content":"            throw new IllegalValueException(Department.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-23"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-23"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":"        final Department modelDepartment \u003d new Department(department);","lastModifiedDate":"2022-10-23"},{"lineNumber":184,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":185,"author":{"gitId":"prit3010"},"content":"        final Address modelAddress;","lastModifiedDate":"2022-10-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":187,"author":{"gitId":"prit3010"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-26"},{"lineNumber":188,"author":{"gitId":"prit3010"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2022-10-26"},{"lineNumber":189,"author":{"gitId":"prit3010"},"content":"        } else if (address.equals(\"N/A\")) {","lastModifiedDate":"2022-10-26"},{"lineNumber":190,"author":{"gitId":"prit3010"},"content":"            modelAddress \u003d new Address();","lastModifiedDate":"2022-10-25"},{"lineNumber":191,"author":{"gitId":"prit3010"},"content":"        } else if (!Address.isValidAddress(address)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":193,"author":{"gitId":"prit3010"},"content":"        } else {","lastModifiedDate":"2022-10-26"},{"lineNumber":194,"author":{"gitId":"prit3010"},"content":"            modelAddress \u003d new Address(address);","lastModifiedDate":"2022-10-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":197,"author":{"gitId":"kevinchangjk"},"content":"        final int modelLeave;","lastModifiedDate":"2022-10-29"},{"lineNumber":198,"author":{"gitId":"kevinchangjk"},"content":"        final int leaveLeftTransfer;","lastModifiedDate":"2022-10-29"},{"lineNumber":199,"author":{"gitId":"kevinchangjk"},"content":"        if (leave \u003d\u003d null || leaveLeft \u003d\u003d null) {","lastModifiedDate":"2022-10-29"},{"lineNumber":200,"author":{"gitId":"kevinchangjk"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, LEAVES_FIELD));","lastModifiedDate":"2022-10-29"},{"lineNumber":201,"author":{"gitId":"kevinchangjk"},"content":"        } else {","lastModifiedDate":"2022-10-29"},{"lineNumber":202,"author":{"gitId":"kevinchangjk"},"content":"            try {","lastModifiedDate":"2022-10-29"},{"lineNumber":203,"author":{"gitId":"kevinchangjk"},"content":"                modelLeave \u003d Integer.valueOf(leave);","lastModifiedDate":"2022-10-29"},{"lineNumber":204,"author":{"gitId":"kevinchangjk"},"content":"                leaveLeftTransfer \u003d Integer.valueOf(leaveLeft);","lastModifiedDate":"2022-10-29"},{"lineNumber":205,"author":{"gitId":"prit3010"},"content":"                if (leaveLeftTransfer \u003e modelLeave) {","lastModifiedDate":"2022-11-03"},{"lineNumber":206,"author":{"gitId":"prit3010"},"content":"                    throw new IllegalValueException(\"Leave left cannot be more than total leave\");","lastModifiedDate":"2022-11-03"},{"lineNumber":207,"author":{"gitId":"prit3010"},"content":"                }","lastModifiedDate":"2022-11-03"},{"lineNumber":208,"author":{"gitId":"kevinchangjk"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-10-29"},{"lineNumber":209,"author":{"gitId":"kevinchangjk"},"content":"                throw new IllegalValueException(String.format(\"%s is not a valid integer\", leave));","lastModifiedDate":"2022-10-29"},{"lineNumber":210,"author":{"gitId":"kevinchangjk"},"content":"            }","lastModifiedDate":"2022-10-29"},{"lineNumber":211,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":212,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":214,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":215,"author":{"gitId":"Kok-je"},"content":"        final Rating modelRating;","lastModifiedDate":"2022-10-27"},{"lineNumber":216,"author":{"gitId":"Kok-je"},"content":"        if (rating \u003d\u003d null) {","lastModifiedDate":"2022-10-26"},{"lineNumber":217,"author":{"gitId":"Kok-je"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2022-10-27"},{"lineNumber":218,"author":{"gitId":"Kok-je"},"content":"                Rating.class.getSimpleName()));","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"Kok-je"},"content":"        } else if (rating.equals(\"N/A\")) {","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"Kok-je"},"content":"            modelRating \u003d new Rating();","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"Kok-je"},"content":"        } else if (!Rating.isValidRating(rating)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"Kok-je"},"content":"            throw new IllegalValueException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"Kok-je"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":224,"author":{"gitId":"Kok-je"},"content":"            modelRating \u003d new Rating(rating);","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":226,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":227,"author":{"gitId":"kevinchangjk"},"content":"        // Create Person object","lastModifiedDate":"2022-10-23"},{"lineNumber":228,"author":{"gitId":"prit3010"},"content":"        Person p \u003d new Person(modelName, modelEmployeeId, modelPhone, modelEmail,","lastModifiedDate":"2022-10-19"},{"lineNumber":229,"author":{"gitId":"Kok-je"},"content":"                modelPosition, modelDepartment, modelAddress, modelTags, modelLeave,","lastModifiedDate":"2022-10-26"},{"lineNumber":230,"author":{"gitId":"Kok-je"},"content":"                modelRating);","lastModifiedDate":"2022-10-26"},{"lineNumber":231,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-23"},{"lineNumber":232,"author":{"gitId":"kevinchangjk"},"content":"        // Add related data","lastModifiedDate":"2022-10-23"},{"lineNumber":233,"author":{"gitId":"kevinchangjk"},"content":"        p.setLeavesLeft(leaveLeftTransfer);","lastModifiedDate":"2022-10-29"},{"lineNumber":234,"author":{"gitId":"kevinchangjk"},"content":"        for (Leave l : personLeaves) {","lastModifiedDate":"2022-10-28"},{"lineNumber":235,"author":{"gitId":"prit3010"},"content":"            p.addLeave(l);","lastModifiedDate":"2022-10-19"},{"lineNumber":236,"author":{"gitId":"prit3010"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":237,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":238,"author":{"gitId":"kevinchangjk"},"content":"        for (Rating r : personRatings) {","lastModifiedDate":"2022-10-28"},{"lineNumber":239,"author":{"gitId":"Kok-je"},"content":"            p.addRating(r);","lastModifiedDate":"2022-10-26"},{"lineNumber":240,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":241,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"prit3010"},"content":"        return p;","lastModifiedDate":"2022-10-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kok-je":37,"kevinchangjk":71,"prit3010":50,"-":86}},{"path":"src/main/java/coydir/storage/JsonAdaptedRating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Kok-je"},"content":"package coydir.storage;","lastModifiedDate":"2022-10-26"},{"lineNumber":2,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":3,"author":{"gitId":"Kok-je"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"Kok-je"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"Kok-je"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-26"},{"lineNumber":9,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":10,"author":{"gitId":"Kok-je"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-10-26"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"Kok-je"},"content":"/**","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":" * Jackson-friendly version of {@link Rating}.","lastModifiedDate":"2022-10-26"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":" */","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"public class JsonAdaptedRating {","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"Kok-je"},"content":"    private final String value;","lastModifiedDate":"2022-10-26"},{"lineNumber":18,"author":{"gitId":"Kok-je"},"content":"    private final String timestamp;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"Kok-je"},"content":"     * Constructs a {@code JsonAdaptedRating} with the given {@code rating} and {@code timestamp}.","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"Kok-je"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-26"},{"lineNumber":24,"author":{"gitId":"Kok-je"},"content":"    public JsonAdaptedRating(@JsonProperty(\"rating\") String value, @JsonProperty(\"timestamp\") String timestamp) {","lastModifiedDate":"2022-10-26"},{"lineNumber":25,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-10-26"},{"lineNumber":26,"author":{"gitId":"Kok-je"},"content":"        this.timestamp \u003d timestamp;","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":29,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":30,"author":{"gitId":"Kok-je"},"content":"     * Converts a given {@code Rating} into this class for Jackson use.","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"    public JsonAdaptedRating(Rating source) {","lastModifiedDate":"2022-10-26"},{"lineNumber":33,"author":{"gitId":"Kok-je"},"content":"        this.value \u003d String.valueOf(source.value);","lastModifiedDate":"2022-10-26"},{"lineNumber":34,"author":{"gitId":"Kok-je"},"content":"        this.timestamp \u003d source.timestamp.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"     * Converts this Jackson-friendly adapted Rating object into the model\u0027s {@code Rating} object.","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"     *","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"Kok-je"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Rating.","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":42,"author":{"gitId":"Kok-je"},"content":"    public Rating toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-26"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"        if (!Rating.isValidRating(value)) {","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":46,"author":{"gitId":"Kok-je"},"content":"        return new Rating(value, timestamp);","lastModifiedDate":"2022-10-26"},{"lineNumber":47,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"}","lastModifiedDate":"2022-10-26"}],"authorContributionMap":{"Kok-je":47,"kevinchangjk":2}},{"path":"src/main/java/coydir/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kevinchangjk":3,"-":45}},{"path":"src/main/java/coydir/storage/JsonDatabaseStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.FileUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.JsonUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":" * A class to access database data stored as a json file on the hard disk.","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"public class JsonDatabaseStorage implements DatabaseStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDatabaseStorage.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    public JsonDatabaseStorage(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"        return readDatabase(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"     * Similar to {@link #readDatabase()}.","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"        Optional\u003cJsonSerializableDatabase\u003e jsonDatabase \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"                filePath, JsonSerializableDatabase.class);","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"        if (!jsonDatabase.isPresent()) {","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"            return Optional.of(jsonDatabase.get().toModelType());","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"prit3010"},"content":"        saveDatabase(database, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"     * Similar to {@link #saveDatabase(ReadOnlyDatabase)}.","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"        requireNonNull(database);","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDatabase(database, EmployeeId.getCount()), filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kevinchangjk":6,"prit3010":21,"-":54}},{"path":"src/main/java/coydir/storage/JsonSerializableDatabase.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":" * An Immutable database that is serializable to JSON format.","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"@JsonRootName(value \u003d \"database\")","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"class JsonSerializableDatabase {","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"    private final int maxID;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"     * Constructs a {@code JsonSerializableDatabase} with the given persons.","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"    public JsonSerializableDatabase(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"                                    @JsonProperty(\"maxID\") int maxID) {","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"        this.maxID \u003d maxID;","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"     * Converts a given {@code ReadOnlyDatabase} into this class for Jackson use.","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDatabase}.","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"    public JsonSerializableDatabase(ReadOnlyDatabase source, int maxID) {","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"        this.maxID \u003d maxID;","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"     * Converts this database into the model\u0027s {@code database} object.","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"    public Database toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"        EmployeeId.setCount(maxID);","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"        Database database \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"            if (database.hasPerson(person)) {","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"            database.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"        return database;","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kevinchangjk":3,"prit3010":22,"-":41}},{"path":"src/main/java/coydir/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.JsonUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kevinchangjk":5,"-":42}},{"path":"src/main/java/coydir/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"public interface Storage extends DatabaseStorage, UserPrefsStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"    Path getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"    void saveDatabase(ReadOnlyDatabase database) throws IOException;","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kevinchangjk":4,"prit3010":5,"-":23}},{"path":"src/main/java/coydir/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":" * Manages storage of database data in local storage.","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"    private DatabaseStorage databaseStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"     * Creates a {@code StorageManager} with the given {@code DatabaseStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"    public StorageManager(DatabaseStorage databaseStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"        this.databaseStorage \u003d databaseStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Database methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"    public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"        return databaseStorage.getDatabaseFilePath();","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"prit3010"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"        return readDatabase(databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"    public Optional\u003cReadOnlyDatabase\u003e readDatabase(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"        return databaseStorage.readDatabase(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"    public void saveDatabase(ReadOnlyDatabase database) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        saveDatabase(database, databaseStorage.getDatabaseFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"    public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"        databaseStorage.saveDatabase(database, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":5,"prit3010":17,"-":56}},{"path":"src/main/java/coydir/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":" * Represents a storage for {@link coydir.model.UserPrefs}.","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"     * Saves the given {@link coydir.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kevinchangjk":6,"-":30}},{"path":"src/main/java/coydir/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.CommandResult;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"     * Make cursor focus on the text field.","lastModifiedDate":"2022-10-26"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"    public void focus() {","lastModifiedDate":"2022-10-26"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"         * @see coydir.logic.Logic#execute(String)","lastModifiedDate":"2022-09-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"ngshijun":7,"kevinchangjk":5,"prit3010":1,"-":80}},{"path":"src/main/java/coydir/ui/CommandFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":" * Format and usage for a Coydir command.","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":" * Used in {@code HelpWindow} for the help command.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"public class CommandFormat {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"    // All profile commands below","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat ADD_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"            \"add\",","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"            \"Adds a person to Coydir.\",","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"            \"add n/NAME j/POSITION d/DEPARTMENT [p/PHONE] [e/EMAIL] [a/ADDRESS] [l/LEAVE] [t/TAG]…\");","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat EDIT_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"            \"edit\",","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"            \"Edits an employee\u0027s details.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"            \"edit INDEX [n/NAME] [j/POSITION] [d/DEPARTMENT] [p/PHONE] [e/EMAIL] [a/ADDRESS] [l/LEAVE] [t/TAG]…\");","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat DELETE_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"            \"delete\",","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"            \"Deletes the specified person from Coydir, given the Employee ID.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"            \"delete EMPLOYEE_ID\");","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat BATCH_ADD_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"            \"batch-add\",","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"            \"Adds multiple employees all at once.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            \"batch-add FILENAME\");","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat VIEW_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"            \"view\",","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"            \"View the details of an existing person in Coydir.\",","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"            \"view INDEX\");","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat LIST_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"            \"list\",","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"            \"Shows a list of all persons in the company.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"            \"list\");","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat FIND_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"            \"find\",","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"            \"Find employees with a search filter.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"            \"find [n/NAME_KEYWORD] [j/POSITION_KEYWORD] [d/DEPARTMENT_KEYWORD]\");","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    // All advanced commands below","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat ADD_LEAVE_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"            \"add-leave\",","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"            \"Adds a leave period for an employee.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"            \"add-leave id/ID sd/START_DATE ed/END_DATE\");","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat DELETE_LEAVE_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"            \"delete-leave\",","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"            \"Deletes a leave period for an employee.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"            \"delete-leave id/ID i/INDEX\");","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat RATE_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"            \"rate\",","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"            \"Rate the performance of an employee.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"            \"rate id/ID r/RATING\");","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat VIEW_DEPARTMENT_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"            \"view-department\",","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"            \"View the summarized details of a department given the name of the department.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"            \"view-department DEPARTMENT\");","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"    // All misc commands below","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat HELP_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"            \"help\",","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"            \"Opens the help window.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"            \"help\");","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat EXIT_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"            \"exit\",","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"            \"Exits the program.\",","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"            \"exit\");","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"    private static final CommandFormat CLEAR_COMMAND_FORMAT \u003d new CommandFormat(","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"            \"clear\",","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"            \"Clears the data stored in the database.\",","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"            \"clear\");","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"    private SimpleStringProperty command;","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"    private SimpleStringProperty usage;","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"     * Creates a {@code CommandFormat} object with a specified command and corresponding description, format.","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"     * @param command The specified command.","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"     * @param description The corresponding description.","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"     * @param format The corresponding format.","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"    public CommandFormat(String command, String description, String format) {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"        this.command \u003d new SimpleStringProperty(command);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"        this.usage \u003d new SimpleStringProperty(String.format(\"%s\\nFormat: %s\", description, format));","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"    public static ObservableList\u003cCommandFormat\u003e getProfileCommands() {","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"                ADD_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"                EDIT_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"                DELETE_COMMAND_FORMAT,","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"                BATCH_ADD_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"                VIEW_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"                LIST_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"                FIND_COMMAND_FORMAT","lastModifiedDate":"2022-11-01"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"    public static ObservableList\u003cCommandFormat\u003e getAdvancedCommands() {","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2022-11-01"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"                ADD_LEAVE_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"                DELETE_LEAVE_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"                RATE_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"                VIEW_DEPARTMENT_COMMAND_FORMAT","lastModifiedDate":"2022-11-01"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-11-01"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"    public static ObservableList\u003cCommandFormat\u003e getMiscCommands() {","lastModifiedDate":"2022-11-01"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2022-11-01"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"                HELP_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"                EXIT_COMMAND_FORMAT,","lastModifiedDate":"2022-11-01"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"                CLEAR_COMMAND_FORMAT","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"                );","lastModifiedDate":"2022-11-01"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"    public String getCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"        return this.command.get();","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":"    public String getUsage() {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"        return this.usage.get();","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"kevinchangjk":138}},{"path":"src/main/java/coydir/ui/DepartmentInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"package coydir.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"import java.util.List;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ngshijun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":" * An UI component that displays detailed information of a {@code Department}.","lastModifiedDate":"2022-10-28"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"public class DepartmentInfo extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"    private static final String FXML \u003d \"DepartmentInfo.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"    private ObservableList\u003cPerson\u003e unfilteredPersonList;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"    private List\u003cPerson\u003e filteredPersonListByDepartment \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"    private VBox departmentInfo;","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"    private Label departmentName;","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ngshijun"},"content":"    private Label numberOfEmployee;","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"    private Label numberOfEmployeeAvailable;","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"    private Label numberOfEmployeeOnLeave;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"    private Label rating;","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"    private TableView\u003cPerson\u003e ratingTable;","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"     * Creates a {@code PersonInfo} to display the {@code Person} particulars.","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"ngshijun"},"content":"    public DepartmentInfo(ObservableList\u003cPerson\u003e unfilteredPersonList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"ngshijun"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"ngshijun"},"content":"        this.unfilteredPersonList \u003d unfilteredPersonList;","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"        initializeRatingTable();","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"chao890"},"content":"     * Initializes the leave table at the start of the program.","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"ngshijun"},"content":"    public void initializeRatingTable() {","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"ngshijun"},"content":"        ratingTable.setSelectionModel(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":58,"author":{"gitId":"ngshijun"},"content":"        ratingTable.setEditable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"ngshijun"},"content":"        ratingTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2022-10-27"},{"lineNumber":60,"author":{"gitId":"ngshijun"},"content":"        ratingTable.addEventFilter(MouseEvent.ANY, MouseEvent::consume);","lastModifiedDate":"2022-10-27"},{"lineNumber":61,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":62,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":63,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":64,"author":{"gitId":"ngshijun"},"content":"     * Update the person particulars in the {@code PersonInfo} panel.","lastModifiedDate":"2022-10-27"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"     * @param unfilteredPersonList the full person list","lastModifiedDate":"2022-10-27"},{"lineNumber":66,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":67,"author":{"gitId":"ngshijun"},"content":"    public void update(ObservableList\u003cPerson\u003e unfilteredPersonList, String department) {","lastModifiedDate":"2022-10-27"},{"lineNumber":68,"author":{"gitId":"ngshijun"},"content":"        this.unfilteredPersonList \u003d unfilteredPersonList;","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"ngshijun"},"content":"        departmentName.setText(department + \" Department\");","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ngshijun"},"content":"        numberOfEmployee.setText(\"Number of employees: \" + countNumberOfEmployee(department));","lastModifiedDate":"2022-10-27"},{"lineNumber":71,"author":{"gitId":"ngshijun"},"content":"        numberOfEmployeeAvailable.setText(\"Number of employees available: \"","lastModifiedDate":"2022-10-27"},{"lineNumber":72,"author":{"gitId":"ngshijun"},"content":"                + countNumberOfEmployeeAvailable(department));","lastModifiedDate":"2022-10-27"},{"lineNumber":73,"author":{"gitId":"ngshijun"},"content":"        numberOfEmployeeOnLeave.setText(\"Number of employees on leave: \" + countNumberOfEmployeeOnLeave(department));","lastModifiedDate":"2022-10-27"},{"lineNumber":74,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"ngshijun"},"content":"        updateFilteredPersonListByDepartment(unfilteredPersonList, department);","lastModifiedDate":"2022-10-27"},{"lineNumber":76,"author":{"gitId":"ngshijun"},"content":"        ratingTable.setItems(FXCollections.observableArrayList(filteredPersonListByDepartment));","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"        TableColumn\u003cPerson, String\u003e id \u003d new TableColumn\u003c\u003e(\"ID\");","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"ngshijun"},"content":"        id.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"col1\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":80,"author":{"gitId":"ngshijun"},"content":"        id.setSortable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":81,"author":{"gitId":"ngshijun"},"content":"        id.setReorderable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":82,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":83,"author":{"gitId":"ngshijun"},"content":"        TableColumn\u003cPerson, String\u003e name \u003d new TableColumn\u003c\u003e(\"Name\");","lastModifiedDate":"2022-10-27"},{"lineNumber":84,"author":{"gitId":"ngshijun"},"content":"        name.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"col2\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":85,"author":{"gitId":"ngshijun"},"content":"        name.setSortable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":86,"author":{"gitId":"ngshijun"},"content":"        name.setReorderable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":87,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":88,"author":{"gitId":"ngshijun"},"content":"        TableColumn\u003cPerson, Integer\u003e rating \u003d new TableColumn\u003c\u003e(\"Rating\");","lastModifiedDate":"2022-10-27"},{"lineNumber":89,"author":{"gitId":"ngshijun"},"content":"        rating.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"col3\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":90,"author":{"gitId":"ngshijun"},"content":"        rating.setSortable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":91,"author":{"gitId":"ngshijun"},"content":"        rating.setReorderable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":92,"author":{"gitId":"ngshijun"},"content":"        ratingTable.getColumns().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":93,"author":{"gitId":"ngshijun"},"content":"        ratingTable.getColumns().addAll(id, name, rating);","lastModifiedDate":"2022-10-27"},{"lineNumber":94,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":95,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":96,"author":{"gitId":"ngshijun"},"content":"    private int countNumberOfEmployee(String department) {","lastModifiedDate":"2022-10-27"},{"lineNumber":97,"author":{"gitId":"ngshijun"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":98,"author":{"gitId":"ngshijun"},"content":"        for (Person p: unfilteredPersonList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":99,"author":{"gitId":"ngshijun"},"content":"            if (p.getDepartment().value.equals(department)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":100,"author":{"gitId":"ngshijun"},"content":"                count++;","lastModifiedDate":"2022-10-27"},{"lineNumber":101,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":102,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":103,"author":{"gitId":"ngshijun"},"content":"        return count;","lastModifiedDate":"2022-10-27"},{"lineNumber":104,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":105,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":106,"author":{"gitId":"ngshijun"},"content":"    private int countNumberOfEmployeeAvailable(String department) {","lastModifiedDate":"2022-10-27"},{"lineNumber":107,"author":{"gitId":"ngshijun"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":108,"author":{"gitId":"ngshijun"},"content":"        for (Person p: unfilteredPersonList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":109,"author":{"gitId":"ngshijun"},"content":"            if (p.getDepartment().value.equals(department) \u0026\u0026 !p.isOnLeave()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":110,"author":{"gitId":"ngshijun"},"content":"                count++;","lastModifiedDate":"2022-10-27"},{"lineNumber":111,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":112,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":113,"author":{"gitId":"ngshijun"},"content":"        return count;","lastModifiedDate":"2022-10-27"},{"lineNumber":114,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":115,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":116,"author":{"gitId":"ngshijun"},"content":"    private int countNumberOfEmployeeOnLeave(String department) {","lastModifiedDate":"2022-10-27"},{"lineNumber":117,"author":{"gitId":"ngshijun"},"content":"        int count \u003d 0;","lastModifiedDate":"2022-10-27"},{"lineNumber":118,"author":{"gitId":"ngshijun"},"content":"        for (Person p: unfilteredPersonList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":119,"author":{"gitId":"ngshijun"},"content":"            if (p.getDepartment().value.equals(department) \u0026\u0026 p.isOnLeave()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":120,"author":{"gitId":"ngshijun"},"content":"                count++;","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"ngshijun"},"content":"        return count;","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"ngshijun"},"content":"    private void updateFilteredPersonListByDepartment(ObservableList\u003cPerson\u003e unfilteredPersonList, String department) {","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"ngshijun"},"content":"        filteredPersonListByDepartment.clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"ngshijun"},"content":"        for (Person p: unfilteredPersonList) {","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"ngshijun"},"content":"            if (p.getDepartment().value.equals(department)) {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"ngshijun"},"content":"                filteredPersonListByDepartment.add(p);","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ngshijun":131,"kevinchangjk":2,"chao890":1}},{"path":"src/main/java/coydir/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s1-cs2103t-t15-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    public static final String HELP_MESSAGE \u003d \"Click for more details: \";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"    private static final int ROW_HEIGHT \u003d 60; // Used to bind cell height","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    private static final int HEADER_HEIGHT \u003d 45; // Accurate for current label content","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    private static Application hostServicesApp \u003d new Application() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"            public void start(Stage stage) {}","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        };","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"    private Button openButton;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    private TableView\u003cCommandFormat\u003e profileTableView;","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"    private TableView\u003cCommandFormat\u003e advancedTableView;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    private TableView\u003cCommandFormat\u003e miscTableView;","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        this.initAllTableViews();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"    private void initAllTableViews() {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"        this.initTableView(this.profileTableView, CommandFormat.getProfileCommands());","lastModifiedDate":"2022-11-01"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"        this.initTableView(this.advancedTableView, CommandFormat.getAdvancedCommands());","lastModifiedDate":"2022-11-01"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"        this.initTableView(this.miscTableView, CommandFormat.getMiscCommands());","lastModifiedDate":"2022-11-01"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"    private void initTableView(TableView\u003cCommandFormat\u003e tableView, ObservableList\u003cCommandFormat\u003e commands) {","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"        tableView.setSelectionModel(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"        tableView.setItems(commands);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"        tableView.setFixedCellSize(ROW_HEIGHT);","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"        tableView.prefHeightProperty().bind(","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"                Bindings.size(tableView.getItems())","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"                .multiply(ROW_HEIGHT)","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"                .add(HEADER_HEIGHT));","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"        tableView.minHeightProperty().bind(tableView.prefHeightProperty());","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"        tableView.maxHeightProperty().bind(tableView.prefHeightProperty());","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"        TableColumn\u003cCommandFormat, String\u003e commandCol \u003d new TableColumn\u003c\u003e(\"Command\");","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"        commandCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"command\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"        commandCol.setSortable(false);","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":"        commandCol.setResizable(false);","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"        commandCol.setReorderable(false);","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"        TableColumn\u003cCommandFormat, String\u003e usageCol \u003d new TableColumn\u003c\u003e(\"Usage\");","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"        usageCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"usage\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"        usageCol.setSortable(false);","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"kevinchangjk"},"content":"        usageCol.setResizable(false);","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"        usageCol.setReorderable(false);","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"        commandCol.prefWidthProperty().bind(tableView.widthProperty().multiply(0.13));","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"kevinchangjk"},"content":"        usageCol.prefWidthProperty().bind(tableView.widthProperty().multiply(0.85));","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"kevinchangjk"},"content":"        tableView.getColumns().add(commandCol);","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"        tableView.getColumns().add(usageCol);","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"     * Opens the URL to the user guide in the default browser.","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"kevinchangjk"},"content":"    private void openWebsite() {","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"        HelpWindow.hostServicesApp.getHostServices().showDocument(USERGUIDE_URL);","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ngshijun":1,"kevinchangjk":70,"prit3010":1,"-":85}},{"path":"src/main/java/coydir/ui/HomePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.MainApp;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"/**","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":" * An UI component that displays the home \"page\" for the app.","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":" * Also acts as the default panel to return to, for when there is nothing to display,","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":" * e.g. after deleting the employee currently displayed.","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"public class HomePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    private static final String FXML \u003d \"HomePanel.fxml\";","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"    private static final coydir.commons.core.Version VERSION \u003d MainApp.VERSION;","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    private static final String MESSAGE \u003d String.format(\"\\tWelcome To\\t\\n\\tCoydir %s\\t\", VERSION.toString());","lastModifiedDate":"2022-10-28"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"    private VBox homePanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"    private ImageView logo;","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"    private BorderPane borderPane;","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-28"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    private Label message;","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"     * Creates a {@code HomePanel} for display.","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    public HomePanel() {","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        super(FXML);","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"        this.initialize();","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"    private void initialize() {","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        Image logoImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Coydir_Logo.png\"));","lastModifiedDate":"2022-10-28"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"        logo.setImage(logoImage);","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"        message.setText(MESSAGE);","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ngshijun":2,"kevinchangjk":45}},{"path":"src/main/java/coydir/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.Logic;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.CommandResult;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2022-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-10-17"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    private HomePanel homePanel;","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"ngshijun"},"content":"    private DepartmentInfo departmentInfo;","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"    private PersonInfo personInfo;","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"ngshijun"},"content":"    private int currentIndex;","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    private EmployeeId currentEmployee;","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"    private String currentDepartment;","lastModifiedDate":"2022-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    private StackPane sidePanelPlaceholder;","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        this.primaryStage.setWidth(1100);","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        this.primaryStage.setHeight(850);","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        this.primaryStage.setMinWidth(1100);","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        this.primaryStage.setMinHeight(850);","lastModifiedDate":"2022-10-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"        // init personInfo component but do not display","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"        personInfo \u003d new PersonInfo();","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":141,"author":{"gitId":"kevinchangjk"},"content":"        // init homePanel component","lastModifiedDate":"2022-10-27"},{"lineNumber":142,"author":{"gitId":"kevinchangjk"},"content":"        homePanel \u003d new HomePanel();","lastModifiedDate":"2022-10-27"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":144,"author":{"gitId":"kevinchangjk"},"content":"        // set side panel to home panel","lastModifiedDate":"2022-10-27"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"        sidePanelPlaceholder.getChildren().add(homePanel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":146,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"ngshijun"},"content":"        departmentInfo \u003d new DepartmentInfo(logic.getUnfilteredPersonList());","lastModifiedDate":"2022-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"prit3010"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDatabaseFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"        commandBox.focus();","lastModifiedDate":"2022-10-28"},{"lineNumber":157,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":158,"author":{"gitId":"ngshijun"},"content":"        personListPanel.getPersonListView().setOnMouseClicked((new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2022-10-17"},{"lineNumber":159,"author":{"gitId":"ngshijun"},"content":"            @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":160,"author":{"gitId":"ngshijun"},"content":"            public void handle(MouseEvent event) {","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"kevinchangjk"},"content":"                handleViewPerson(personListPanel.getPersonListView().getSelectionModel().getSelectedIndex());","lastModifiedDate":"2022-10-27"},{"lineNumber":162,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"ngshijun"},"content":"        }));","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":191,"author":{"gitId":"ngshijun"},"content":"     * Switches to Dark Theme if the window is currently on Light Theme.","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"ngshijun"},"content":"     * Remains on Dark Theme otherwise.","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":195,"author":{"gitId":"ngshijun"},"content":"    public void handleDarkTheme() {","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"ngshijun"},"content":"        getPrimaryStage().getScene().getStylesheets().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":197,"author":{"gitId":"ngshijun"},"content":"        getPrimaryStage().getScene().getStylesheets().addAll(","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"ngshijun"},"content":"                getClass().getClassLoader().getResource(\"view/DarkTheme.css\").toExternalForm(),","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"ngshijun"},"content":"                getClass().getClassLoader().getResource(\"view/Extensions.css\").toExternalForm());","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"ngshijun"},"content":"     * Switches to Light Theme if the window is currently on Dark Theme.","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"ngshijun"},"content":"     * Remains on Light Theme otherwise.","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"ngshijun"},"content":"    public void handleLightTheme() {","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"ngshijun"},"content":"        getPrimaryStage().getScene().getStylesheets().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":209,"author":{"gitId":"ngshijun"},"content":"        getPrimaryStage().getScene().getStylesheets().addAll(","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"ngshijun"},"content":"                getClass().getClassLoader().getResource(\"view/LightTheme.css\").toExternalForm(),","lastModifiedDate":"2022-10-06"},{"lineNumber":211,"author":{"gitId":"ngshijun"},"content":"                getClass().getClassLoader().getResource(\"view/Extensions.css\").toExternalForm());","lastModifiedDate":"2022-10-06"},{"lineNumber":212,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":213,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":218,"author":{"gitId":"kevinchangjk"},"content":"    private void setSidePanel(UiPart\u003cRegion\u003e panel) {","lastModifiedDate":"2022-10-27"},{"lineNumber":219,"author":{"gitId":"kevinchangjk"},"content":"        sidePanelPlaceholder.getChildren().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":220,"author":{"gitId":"kevinchangjk"},"content":"        sidePanelPlaceholder.getChildren().add(panel.getRoot());","lastModifiedDate":"2022-10-27"},{"lineNumber":221,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":222,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":235,"author":{"gitId":"kevinchangjk"},"content":"    private void handlePersonInfoUpdate(int index) {","lastModifiedDate":"2022-10-28"},{"lineNumber":236,"author":{"gitId":"kevinchangjk"},"content":"        ObservableList\u003cPerson\u003e personList \u003d logic.getFilteredPersonList();","lastModifiedDate":"2022-10-27"},{"lineNumber":237,"author":{"gitId":"kevinchangjk"},"content":"        if (index \u003e\u003d personList.size() || index \u003c 0) {","lastModifiedDate":"2022-11-04"},{"lineNumber":238,"author":{"gitId":"kevinchangjk"},"content":"            setSidePanel(homePanel);","lastModifiedDate":"2022-10-27"},{"lineNumber":239,"author":{"gitId":"kevinchangjk"},"content":"        } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":240,"author":{"gitId":"ngshijun"},"content":"            personInfo.update(logic.getFilteredPersonList().get(index));","lastModifiedDate":"2022-10-27"},{"lineNumber":241,"author":{"gitId":"ngshijun"},"content":"        }","lastModifiedDate":"2022-10-26"},{"lineNumber":242,"author":{"gitId":"kevinchangjk"},"content":"        currentIndex \u003d index;","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"kevinchangjk"},"content":"    private void handleViewPerson(int index) {","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"kevinchangjk"},"content":"        setSidePanel(personInfo);","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"kevinchangjk"},"content":"        handlePersonInfoUpdate(index);","lastModifiedDate":"2022-11-01"},{"lineNumber":248,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":249,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":250,"author":{"gitId":"ngshijun"},"content":"    private void handleViewDepartmentUpdate(String department) {","lastModifiedDate":"2022-10-28"},{"lineNumber":251,"author":{"gitId":"ngshijun"},"content":"        departmentInfo.update(logic.getUnfilteredPersonList(), department);","lastModifiedDate":"2022-10-28"},{"lineNumber":252,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-28"},{"lineNumber":253,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":254,"author":{"gitId":"ngshijun"},"content":"    private void handleViewDepartment(String department) {","lastModifiedDate":"2022-10-27"},{"lineNumber":255,"author":{"gitId":"ngshijun"},"content":"        departmentInfo.update(logic.getUnfilteredPersonList(), department);","lastModifiedDate":"2022-10-27"},{"lineNumber":256,"author":{"gitId":"kevinchangjk"},"content":"        setSidePanel(departmentInfo);","lastModifiedDate":"2022-10-28"},{"lineNumber":257,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-27"},{"lineNumber":258,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"kevinchangjk"},"content":"     * @see coydir.logic.Logic#execute(String)","lastModifiedDate":"2022-09-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"kevinchangjk"},"content":"            handlePersonInfoUpdate(currentIndex);","lastModifiedDate":"2022-10-28"},{"lineNumber":274,"author":{"gitId":"ngshijun"},"content":"            handleViewDepartmentUpdate(currentDepartment);","lastModifiedDate":"2022-10-28"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"kevinchangjk"},"content":"            } else if (commandResult.isExit()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"kevinchangjk"},"content":"            } else if (commandResult.isViewPerson()) {","lastModifiedDate":"2022-10-27"},{"lineNumber":281,"author":{"gitId":"kevinchangjk"},"content":"                int viewIndex \u003d commandResult.getViewIndex();","lastModifiedDate":"2022-10-27"},{"lineNumber":282,"author":{"gitId":"kevinchangjk"},"content":"                handleViewPerson(viewIndex);","lastModifiedDate":"2022-10-27"},{"lineNumber":283,"author":{"gitId":"kevinchangjk"},"content":"            } else if (commandResult.isViewDepartment()) {","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"ngshijun"},"content":"                currentDepartment \u003d commandResult.getDepartment();","lastModifiedDate":"2022-10-28"},{"lineNumber":285,"author":{"gitId":"ngshijun"},"content":"                handleViewDepartment(commandResult.getDepartment());","lastModifiedDate":"2022-10-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-10-26"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ngshijun":57,"kevinchangjk":53,"prit3010":1,"-":184}},{"path":"src/main/java/coydir/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    private Label employeeId;","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    private Label position;","lastModifiedDate":"2022-10-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        employeeId.setText(\"Employee ID:  \" + person.getEmployeeId().value);","lastModifiedDate":"2022-10-28"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"        position.setText(\"Position:  \" + person.getPosition().value);","lastModifiedDate":"2022-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ngshijun":1,"kevinchangjk":7,"-":67}},{"path":"src/main/java/coydir/ui/PersonInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"package coydir.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Kok-je"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"Kok-je"},"content":"import java.util.Collections;","lastModifiedDate":"2022-11-02"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"import coydir.model.person.Leave;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Kok-je"},"content":"import javafx.beans.binding.ObjectExpression;","lastModifiedDate":"2022-11-02"},{"lineNumber":10,"author":{"gitId":"ngshijun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Kok-je"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-11-02"},{"lineNumber":12,"author":{"gitId":"Kok-je"},"content":"import javafx.scene.chart.CategoryAxis;","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"Kok-je"},"content":"import javafx.scene.chart.LineChart;","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":"import javafx.scene.chart.NumberAxis;","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"Kok-je"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.TableCell;","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2022-10-26"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2022-10-26"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2022-10-26"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2022-10-26"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Kok-je"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2022-11-02"},{"lineNumber":24,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"Kok-je"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-11-02"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":" * An UI component that displays detailed information of a {@code Person}.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"public class PersonInfo extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"    private static final String FXML \u003d \"PersonInfo.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Kok-je"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"    private CategoryAxis xAxis;","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"Kok-je"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"    private NumberAxis yAxis;","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"    private VBox personInfo;","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"ngshijun"},"content":"    private Label name;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"    private Label employeeId;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"    private Label phone;","lastModifiedDate":"2022-10-23"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    private Label email;","lastModifiedDate":"2022-10-23"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    @FXML","lastModifiedDate":"2022-10-23"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"    private Label position;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"ngshijun"},"content":"    private Label onLeave;","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"    private Label department;","lastModifiedDate":"2022-10-23"},{"lineNumber":56,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"ngshijun"},"content":"    private Label address;","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"    private Label totalLeave;","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"    private Label leaveLeft;","lastModifiedDate":"2022-10-19"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":63,"author":{"gitId":"Kok-je"},"content":"    private Label performance;","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"Kok-je"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"    private FlowPane tags;","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"ngshijun"},"content":"    @FXML","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"ngshijun"},"content":"    private TableView\u003cLeave\u003e leaveTable;","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"Kok-je"},"content":"    @FXML","lastModifiedDate":"2022-10-27"},{"lineNumber":69,"author":{"gitId":"Kok-je"},"content":"    private LineChart\u003cString, Number\u003e lineChart;","lastModifiedDate":"2022-10-27"},{"lineNumber":70,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"ngshijun"},"content":"     * Creates a {@code PersonInfo} to display the {@code Person} particulars.","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    public PersonInfo() {","lastModifiedDate":"2022-10-27"},{"lineNumber":75,"author":{"gitId":"ngshijun"},"content":"        super(FXML);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"ngshijun"},"content":"        initializeLeaveTable();","lastModifiedDate":"2022-10-27"},{"lineNumber":77,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"ngshijun"},"content":"     * Initializing the leave table at the start of the program.","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"ngshijun"},"content":"    public void initializeLeaveTable() {","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"ngshijun"},"content":"        leaveTable.setSelectionModel(null);","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"ngshijun"},"content":"        leaveTable.setEditable(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":85,"author":{"gitId":"ngshijun"},"content":"        leaveTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"ngshijun"},"content":"        leaveTable.addEventFilter(MouseEvent.ANY, MouseEvent::consume);","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":89,"author":{"gitId":"Kok-je"},"content":"    private static Node createDataNode(ObjectExpression\u003cNumber\u003e value) {","lastModifiedDate":"2022-11-02"},{"lineNumber":90,"author":{"gitId":"Kok-je"},"content":"        var label \u003d new Label();","lastModifiedDate":"2022-11-02"},{"lineNumber":91,"author":{"gitId":"Kok-je"},"content":"        label.textProperty().bind(value.asString());","lastModifiedDate":"2022-11-02"},{"lineNumber":92,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":93,"author":{"gitId":"Kok-je"},"content":"        var pane \u003d new Pane(label);","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"Kok-je"},"content":"        pane.setShape(new Circle(6.0));","lastModifiedDate":"2022-11-02"},{"lineNumber":95,"author":{"gitId":"Kok-je"},"content":"        pane.setScaleShape(false);","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":97,"author":{"gitId":"Kok-je"},"content":"        label.translateYProperty().bind(label.heightProperty().divide(-1.5));","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"Kok-je"},"content":"        return pane;","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":101,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"ngshijun"},"content":"     * Update the person particulars in the {@code PersonInfo} panel.","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"ngshijun"},"content":"     * @param person the person to be displayed","lastModifiedDate":"2022-10-26"},{"lineNumber":105,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"ngshijun"},"content":"    public void update(Person person) {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"ngshijun"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"        employeeId.setText(\"Employee ID:  \" + person.getEmployeeId().value);","lastModifiedDate":"2022-10-28"},{"lineNumber":109,"author":{"gitId":"ngshijun"},"content":"        phone.setText(\"Phone number:  \" + person.getPhone().value);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"ngshijun"},"content":"        email.setText(\"Email address:  \" + person.getEmail().value);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"        position.setText(\"Position:  \" + person.getPosition().value);","lastModifiedDate":"2022-10-23"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"        department.setText(\"Department:  \" + person.getDepartment().value);","lastModifiedDate":"2022-10-23"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"        address.setText(\"Address:  \" + person.getAddress().value);","lastModifiedDate":"2022-10-23"},{"lineNumber":114,"author":{"gitId":"prit3010"},"content":"        totalLeave.setText(\"Total Leaves: \" + person.getTotalNumberOfLeaves());","lastModifiedDate":"2022-10-23"},{"lineNumber":115,"author":{"gitId":"prit3010"},"content":"        leaveLeft.setText(\"Leaves Left: \" + person.getLeavesLeft());","lastModifiedDate":"2022-10-23"},{"lineNumber":116,"author":{"gitId":"Kok-je"},"content":"        performance.setText(\"Performance: \" + person.getRating().value);","lastModifiedDate":"2022-10-26"},{"lineNumber":117,"author":{"gitId":"ngshijun"},"content":"        onLeave.setText(\"On leave: \" + person.onLeaveStatus());","lastModifiedDate":"2022-10-26"},{"lineNumber":118,"author":{"gitId":"ngshijun"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"ngshijun"},"content":"        leaveTable.setItems(person.getObservableListLeaves());","lastModifiedDate":"2022-10-26"},{"lineNumber":120,"author":{"gitId":"ngshijun"},"content":"        person.getTags().stream()","lastModifiedDate":"2022-10-27"},{"lineNumber":121,"author":{"gitId":"ngshijun"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2022-10-27"},{"lineNumber":122,"author":{"gitId":"ngshijun"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2022-10-27"},{"lineNumber":123,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":124,"author":{"gitId":"ngshijun"},"content":"        TableColumn\u003cLeave, String\u003e index \u003d new TableColumn\u003c\u003e(\"No.\");","lastModifiedDate":"2022-10-27"},{"lineNumber":125,"author":{"gitId":"ngshijun"},"content":"        index.setCellFactory(col -\u003e new TableCell\u003cLeave, String\u003e() {","lastModifiedDate":"2022-10-27"},{"lineNumber":126,"author":{"gitId":"ngshijun"},"content":"            @Override","lastModifiedDate":"2022-10-27"},{"lineNumber":127,"author":{"gitId":"ngshijun"},"content":"            public void updateIndex(int index) {","lastModifiedDate":"2022-10-27"},{"lineNumber":128,"author":{"gitId":"ngshijun"},"content":"                super.updateIndex(index);","lastModifiedDate":"2022-10-27"},{"lineNumber":129,"author":{"gitId":"ngshijun"},"content":"                if (isEmpty() || index \u003c 0) {","lastModifiedDate":"2022-10-27"},{"lineNumber":130,"author":{"gitId":"ngshijun"},"content":"                    setText(null);","lastModifiedDate":"2022-10-27"},{"lineNumber":131,"author":{"gitId":"ngshijun"},"content":"                } else {","lastModifiedDate":"2022-10-27"},{"lineNumber":132,"author":{"gitId":"ngshijun"},"content":"                    setText(Integer.toString(index + 1));","lastModifiedDate":"2022-10-27"},{"lineNumber":133,"author":{"gitId":"ngshijun"},"content":"                }","lastModifiedDate":"2022-10-27"},{"lineNumber":134,"author":{"gitId":"ngshijun"},"content":"            }","lastModifiedDate":"2022-10-27"},{"lineNumber":135,"author":{"gitId":"ngshijun"},"content":"        });","lastModifiedDate":"2022-10-27"},{"lineNumber":136,"author":{"gitId":"ngshijun"},"content":"        index.setSortable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":137,"author":{"gitId":"ngshijun"},"content":"        index.setReorderable(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":138,"author":{"gitId":"ngshijun"},"content":"        index.setMaxWidth(2000);","lastModifiedDate":"2022-10-27"},{"lineNumber":139,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":140,"author":{"gitId":"ngshijun"},"content":"        TableColumn\u003cLeave, String\u003e startDate \u003d new TableColumn\u003c\u003e(\"Start Date\");","lastModifiedDate":"2022-10-26"},{"lineNumber":141,"author":{"gitId":"ngshijun"},"content":"        startDate.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"col1\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":142,"author":{"gitId":"ngshijun"},"content":"        startDate.setSortable(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":143,"author":{"gitId":"ngshijun"},"content":"        startDate.setReorderable(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":144,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":145,"author":{"gitId":"ngshijun"},"content":"        TableColumn\u003cLeave, String\u003e endDate \u003d new TableColumn\u003c\u003e(\"End Date\");","lastModifiedDate":"2022-10-26"},{"lineNumber":146,"author":{"gitId":"ngshijun"},"content":"        endDate.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"col2\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":147,"author":{"gitId":"ngshijun"},"content":"        endDate.setSortable(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":148,"author":{"gitId":"ngshijun"},"content":"        endDate.setReorderable(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":149,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"        TableColumn\u003cLeave, Integer\u003e durations \u003d new TableColumn\u003c\u003e(\"Duration\");","lastModifiedDate":"2022-10-28"},{"lineNumber":151,"author":{"gitId":"ngshijun"},"content":"        durations.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"col3\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":152,"author":{"gitId":"ngshijun"},"content":"        durations.setSortable(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":153,"author":{"gitId":"ngshijun"},"content":"        durations.setReorderable(false);","lastModifiedDate":"2022-10-26"},{"lineNumber":154,"author":{"gitId":"ngshijun"},"content":"        leaveTable.getColumns().clear();","lastModifiedDate":"2022-10-26"},{"lineNumber":155,"author":{"gitId":"ngshijun"},"content":"        leaveTable.getColumns().addAll(index, startDate, endDate, durations);","lastModifiedDate":"2022-10-27"},{"lineNumber":156,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":157,"author":{"gitId":"Kok-je"},"content":"        Collections.sort(person.getRatingHistory(), (a, b)-\u003ea.getTime().compareTo(b.getTime()));","lastModifiedDate":"2022-11-02"},{"lineNumber":158,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":159,"author":{"gitId":"Kok-je"},"content":"        lineChart.setAnimated(false);","lastModifiedDate":"2022-10-27"},{"lineNumber":160,"author":{"gitId":"Kok-je"},"content":"        lineChart.setTitle(\"Performance History\");","lastModifiedDate":"2022-10-27"},{"lineNumber":161,"author":{"gitId":"Kok-je"},"content":"        yAxis.setLowerBound(0);","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"Kok-je"},"content":"        yAxis.setUpperBound(5);","lastModifiedDate":"2022-10-28"},{"lineNumber":163,"author":{"gitId":"Kok-je"},"content":"        yAxis.setLabel(\"Rating\");","lastModifiedDate":"2022-10-27"},{"lineNumber":164,"author":{"gitId":"Kok-je"},"content":"        xAxis.setLabel(\"Timestamp\");","lastModifiedDate":"2022-10-27"},{"lineNumber":165,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":166,"author":{"gitId":"Kok-je"},"content":"        XYChart.Series\u003cString, Number\u003e series \u003d new XYChart.Series\u003cString, Number\u003e();","lastModifiedDate":"2022-10-27"},{"lineNumber":167,"author":{"gitId":"Kok-je"},"content":"        series.setName(\"Performance\");","lastModifiedDate":"2022-10-27"},{"lineNumber":168,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":169,"author":{"gitId":"Kok-je"},"content":"        for (int i \u003d 0; i \u003c person.getRatingHistory().size(); i++) {","lastModifiedDate":"2022-10-27"},{"lineNumber":170,"author":{"gitId":"Kok-je"},"content":"            String timestamp \u003d person.getRatingHistory().get(i).timestamp","lastModifiedDate":"2022-10-27"},{"lineNumber":171,"author":{"gitId":"Kok-je"},"content":"                .format(DateTimeFormatter.ofPattern(\"dd-MMM-yy\"));","lastModifiedDate":"2022-10-27"},{"lineNumber":172,"author":{"gitId":"Kok-je"},"content":"            Number value \u003d Integer.parseInt(person.getRatingHistory().get(i).value);","lastModifiedDate":"2022-11-02"},{"lineNumber":173,"author":{"gitId":"Kok-je"},"content":"            var data \u003d new XYChart.Data\u003cString, Number\u003e(timestamp, value);","lastModifiedDate":"2022-11-02"},{"lineNumber":174,"author":{"gitId":"Kok-je"},"content":"            data.setNode(createDataNode(data.YValueProperty()));","lastModifiedDate":"2022-11-02"},{"lineNumber":175,"author":{"gitId":"Kok-je"},"content":"            series.getData().add(data);","lastModifiedDate":"2022-11-02"},{"lineNumber":176,"author":{"gitId":"Kok-je"},"content":"        }","lastModifiedDate":"2022-10-27"},{"lineNumber":177,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":178,"author":{"gitId":"Kok-je"},"content":"        lineChart.getData().clear();","lastModifiedDate":"2022-10-27"},{"lineNumber":179,"author":{"gitId":"Kok-je"},"content":"        lineChart.getData().add(series);","lastModifiedDate":"2022-10-27"},{"lineNumber":180,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"ngshijun":107,"Kok-je":57,"kevinchangjk":11,"prit3010":6}},{"path":"src/main/java/coydir/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"ngshijun"},"content":"     * get the current {@PersonListView} of employee list","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"ngshijun"},"content":"     * @return a {@code PersonListView} that represents the current employee list","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"    public ListView\u003cPerson\u003e getPersonListView() {","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"        return personListView;","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"    }","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ngshijun":8,"kevinchangjk":3,"-":46}},{"path":"src/main/java/coydir/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kevinchangjk":1,"-":27}},{"path":"src/main/java/coydir/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":1,"-":27}},{"path":"src/main/java/coydir/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kevinchangjk":1,"-":12}},{"path":"src/main/java/coydir/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.LogsCenter;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.AppUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.StringUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.Logic;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/Coydir_Logo.png\";","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"        primaryStage.getIcons().add(AppUtil.getImage(ICON_APPLICATION));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Kok-je":1,"kevinchangjk":6,"-":76}},{"path":"src/main/java/coydir/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.MainApp;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kevinchangjk":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"/* Common Colors for Color Scheme","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"--navyBlue: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"--pastelWhite: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"--pink: #ff0078;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"--purple: #6200eb;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"--turquoise: #05d1ce;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"--blue: #007cce;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"--white: #ffffff;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"--darkGray: #1d1d1d;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"--gray: #383838;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"--cornflower: #797ef6","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"--viking: #4adede","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"--picton: 1aa7ec","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"--jacksons: #1e2f97","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"*/","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"/* Import fonts */","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Bold\";","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Bold.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Bold Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-BoldItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Heavy\";","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Heavy.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Heavy Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-HeavyItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Light.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Light Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-LightItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Medium\";","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Medium.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Medium Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-MediumItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Regular\";","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Regular.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Regular Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-RegularItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Semibold.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Semibold Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-SemiboldItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":80,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"ngshijun"},"content":"/* End of import fonts */","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"    background-color: #020042; /* Used in the default.html file */","lastModifiedDate":"2022-10-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"    -fx-base: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"    -fx-control-inner-background: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"    -fx-table-cell-border-color: derive(#05d1ce, -50%);","lastModifiedDate":"2022-10-28"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"    -fx-table-header-border-color: #05d1ce;","lastModifiedDate":"2022-10-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":".table-view .placeholder .label {","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":136,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"kevinchangjk"},"content":".table-view .column-header,","lastModifiedDate":"2022-10-28"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":".table-view .filler {","lastModifiedDate":"2022-10-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":165,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: transparent transparent transparent transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":166,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":178,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"kevinchangjk"},"content":".list-cell:filled {","lastModifiedDate":"2022-10-28"},{"lineNumber":189,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 50%);","lastModifiedDate":"2022-10-28"},{"lineNumber":190,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":193,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":194,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #223bc9;","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":198,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: #6200eb;","lastModifiedDate":"2022-10-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono\";","lastModifiedDate":"2022-10-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":215,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"ngshijun"},"content":".info_big_label {","lastModifiedDate":"2022-10-17"},{"lineNumber":219,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-17"},{"lineNumber":220,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2022-10-17"},{"lineNumber":221,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":224,"author":{"gitId":"ngshijun"},"content":".info_title {","lastModifiedDate":"2022-10-27"},{"lineNumber":225,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-27"},{"lineNumber":226,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2022-10-27"},{"lineNumber":227,"author":{"gitId":"ngshijun"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-27"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":230,"author":{"gitId":"ngshijun"},"content":".info_small_label {","lastModifiedDate":"2022-10-17"},{"lineNumber":231,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono\";","lastModifiedDate":"2022-10-17"},{"lineNumber":232,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 17px;","lastModifiedDate":"2022-10-17"},{"lineNumber":233,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":234,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":235,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":237,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":241,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":242,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":243,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":248,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":250,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":253,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"kevinchangjk"},"content":".status-bar {","lastModifiedDate":"2022-10-28"},{"lineNumber":258,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":259,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":260,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":261,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":263,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":270,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: derive(#020042, 25%);","lastModifiedDate":"2022-10-28"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: derive(#020042, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":285,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 50%);","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":303,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-10-06"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"kevinchangjk"},"content":".button:pressed,","lastModifiedDate":"2022-10-28"},{"lineNumber":333,"author":{"gitId":"kevinchangjk"},"content":".button:default:hover:pressed {","lastModifiedDate":"2022-10-28"},{"lineNumber":334,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: transparent, transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"kevinchangjk"},"content":".button:disabled,","lastModifiedDate":"2022-10-28"},{"lineNumber":347,"author":{"gitId":"kevinchangjk"},"content":".button:default:disabled {","lastModifiedDate":"2022-10-28"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":376,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":377,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 25%);","lastModifiedDate":"2022-10-28"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":380,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"kevinchangjk"},"content":"    -fx-fill: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":384,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":387,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#6200eb, -50%);","lastModifiedDate":"2022-10-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":392,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#007cce, 0%);","lastModifiedDate":"2022-10-28"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":396,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2022-10-28"},{"lineNumber":397,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .decrement-button {","lastModifiedDate":"2022-10-28"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":400,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":402,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2022-10-28"},{"lineNumber":403,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .decrement-arrow {","lastModifiedDate":"2022-10-28"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":407,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2022-10-28"},{"lineNumber":408,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-10-28"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":410,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":412,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:horizontal .increment-arrow,","lastModifiedDate":"2022-10-28"},{"lineNumber":413,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-10-28"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":417,"author":{"gitId":"kevinchangjk"},"content":".scroll-pane .viewport {","lastModifiedDate":"2022-10-28"},{"lineNumber":418,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#020042, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":419,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":420,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":421,"author":{"gitId":"kevinchangjk"},"content":".scroll-pane {","lastModifiedDate":"2022-10-28"},{"lineNumber":422,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":423,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":424,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":425,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":427,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":428,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: #797ef6;","lastModifiedDate":"2022-10-28"},{"lineNumber":429,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":430,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":432,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f70d1a;","lastModifiedDate":"2022-10-28"},{"lineNumber":435,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":440,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-radius: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":441,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":444,"author":{"gitId":"ngshijun"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2022-10-07"},{"lineNumber":445,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":447,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":448,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":450,"author":{"gitId":"kevinchangjk"},"content":"#filterField,","lastModifiedDate":"2022-10-28"},{"lineNumber":451,"author":{"gitId":"kevinchangjk"},"content":"#personListPanel,","lastModifiedDate":"2022-10-28"},{"lineNumber":452,"author":{"gitId":"kevinchangjk"},"content":"#personWebpage {","lastModifiedDate":"2022-10-28"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":454,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":456,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":457,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":459,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":461,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":464,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":466,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":467,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":468,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #ad00ff;","lastModifiedDate":"2022-10-28"},{"lineNumber":469,"author":{"gitId":"kevinchangjk"},"content":"    -fx-padding: 2 6 2 6;","lastModifiedDate":"2022-10-28"},{"lineNumber":470,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":471,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":473,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"ngshijun":65,"kevinchangjk":145,"-":263}},{"path":"src/main/resources/view/DepartmentInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"ngshijun"},"content":"\u003cVBox fx:id\u003d\"departmentInfo\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"info_big_label\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":24,"author":{"gitId":"ngshijun"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"                \u003cLabel fx:id\u003d\"departmentName\" text\u003d\"\\$first\" styleClass\u003d\"info_big_label\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"numberOfEmployee\" styleClass\u003d\"info_small_label\" text\u003d\"\\$numberOfEmployee\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"numberOfEmployeeAvailable\" styleClass\u003d\"info_small_label\" text\u003d\"\\$numberOfEmployeeAvailable\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"numberOfEmployeeOnLeave\" styleClass\u003d\"info_small_label\" text\u003d\"\\$numberOfEmployeeOnLeave\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"whitespace\" styleClass\u003d\"info_small_label\" text\u003d\"\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"rating\" styleClass\u003d\"info_title\" text\u003d\"Rating Table\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":33,"author":{"gitId":"ngshijun"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":34,"author":{"gitId":"ngshijun"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"                    \u003cInsets top\u003d\"10\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"                \u003cTableView fx:id\u003d\"ratingTable\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":38,"author":{"gitId":"ngshijun"},"content":"                \u003c/TableView\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ngshijun":42}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":".commands-panel {","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":".help-label {","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"  -fx-padding: 2 6 2 6px;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"  -fx-font-size: 16pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":".table-view {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":".table-view .column-header {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: derive(#373737, 20%);","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: derive(#373737, 20%);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":".table-view .column-header-background .label {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"  -fx-padding: 2 0 2 2px;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":".table-view .table-cell {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"  -fx-padding: 2 4 2 4px;","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"  -fx-font-size: 10pt;","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":".table-view .scroll-bar * {","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"  -fx-min-width: 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"  -fx-pref-width: 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"ngshijun"},"content":"  -fx-max-width: 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":44,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"  -fx-min-height: 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"  -fx-pref-height: 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":47,"author":{"gitId":"ngshijun"},"content":"  -fx-max-height: 0;","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":".table-row-cell {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: dimgray;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-insets: 0, 1 0 1 0;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":".table-row-cell: hover {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: gray;","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"#helpContainer {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"#openButton,","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"#helpMessage {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"#openButton {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"#openButton:hover {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"#openButton:armed {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"}],"authorContributionMap":{"ngshijun":10,"kevinchangjk":49,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"\u003cfx:root minWidth\u003d\"850\" maxWidth\u003d\"850\" minHeight\u003d\"400\" maxHeight\u003d\"700\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"      \u003cVBox prefWidth\u003d\"850\" VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"helpContainer\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        \u003cScrollPane fitToWidth\u003d\"true\" fitToHeight\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"          \u003cVBox styleClass\u003d\"commands-panel\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"            \u003cLabel styleClass\u003d\"help-label\" text\u003d\"Employee Profile Functions\"/\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"            \u003cTableView fx:id\u003d\"profileTableView\" \u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"              \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"                \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"              \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"            \u003cLabel styleClass\u003d\"help-label\" text\u003d\"Advanced Management Functions\"/\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"            \u003cTableView fx:id\u003d\"advancedTableView\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"              \u003cVBox.margin\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"                \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"              \u003c/VBox.margin\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"            \u003cLabel styleClass\u003d\"help-label\" text\u003d\"Additional Functions\"/\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"            \u003cTableView fx:id\u003d\"miscTableView\"\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"              \u003cVBox.margin\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"                \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"              \u003c/VBox.margin\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"            \u003c/TableView\u003e","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        \u003c!--Container for User Guide reference and button--\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"            \u003cButton fx:id\u003d\"openButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openWebsite\" text\u003d\"User Guide\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"kevinchangjk":35,"-":41}},{"path":"src/main/resources/view/HomePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"\u003cVBox fx:id\u003d\"homePanel\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"        \u003cAnchorPane fx:id\u003d\"anchorPane\" HBox.hgrow\u003d\"ALWAYS\" \u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"            \u003cImageView fx:id\u003d\"logo\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"/\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    \u003cHBox fx:id\u003d\"messageBox\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        \u003cLabel fx:id\u003d\"message\" text\u003d\"\\$message\" styleClass\u003d\"info_big_label\" textAlignment\u003d\"center\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ngshijun":4,"kevinchangjk":16}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"/* Common Colors for Color Scheme","lastModifiedDate":"2022-10-28"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"--navyBlue: #020042;","lastModifiedDate":"2022-10-28"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"--pastelWhite: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"--pink: #ff0078;","lastModifiedDate":"2022-10-28"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"--purple: #6200eb;","lastModifiedDate":"2022-10-28"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"--turquoise: #05d1ce;","lastModifiedDate":"2022-10-28"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"--blue: #007cce;","lastModifiedDate":"2022-10-28"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"--#f1f1f1: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"--darkGray: #1d1d1d;","lastModifiedDate":"2022-10-28"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"--gray: #383838;","lastModifiedDate":"2022-10-28"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":" */","lastModifiedDate":"2022-10-28"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"/* Import fonts */","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Bold\";","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Bold.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Bold Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-BoldItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Heavy\";","lastModifiedDate":"2022-10-28"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Heavy.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Heavy Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-HeavyItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-28"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Light.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Light Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-LightItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Medium\";","lastModifiedDate":"2022-10-28"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Medium.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Medium Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-MediumItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":55,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Regular\";","lastModifiedDate":"2022-10-28"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Regular.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":60,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Regular Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-RegularItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":66,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-28"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-Semibold.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":71,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"ngshijun"},"content":"@font-face {","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"    font-family: \"SF Mono Semibold Italic\";","lastModifiedDate":"2022-10-28"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    src: url(\"/fonts/SFMono/LigaSFMonoNerdFont-SemiboldItalic.otf\");","lastModifiedDate":"2022-10-28"},{"lineNumber":75,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"ngshijun"},"content":"/* End of import fonts */","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"ngshijun"},"content":".background {","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#f1f1f1, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"    background-color: #f1f1f1; /* Used in the default.html file */","lastModifiedDate":"2022-10-28"},{"lineNumber":82,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"ngshijun"},"content":".label {","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":88,"author":{"gitId":"ngshijun"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"ngshijun"},"content":".label-bright {","lastModifiedDate":"2022-10-06"},{"lineNumber":92,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":95,"author":{"gitId":"ngshijun"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":97,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":98,"author":{"gitId":"ngshijun"},"content":".label-header {","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":100,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":102,"author":{"gitId":"ngshijun"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"ngshijun"},"content":".text-field {","lastModifiedDate":"2022-10-06"},{"lineNumber":106,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":110,"author":{"gitId":"ngshijun"},"content":".tab-pane {","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"ngshijun"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2022-10-06"},{"lineNumber":115,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"ngshijun"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"ngshijun"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":119,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"ngshijun"},"content":".table-view {","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"kevinchangjk"},"content":"    -fx-base: #7973f6;","lastModifiedDate":"2022-10-28"},{"lineNumber":122,"author":{"gitId":"kevinchangjk"},"content":"    -fx-control-inner-background: #7973f6;","lastModifiedDate":"2022-10-28"},{"lineNumber":123,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #7973f6;","lastModifiedDate":"2022-10-28"},{"lineNumber":124,"author":{"gitId":"ngshijun"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"ngshijun"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2022-10-06"},{"lineNumber":126,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 5;","lastModifiedDate":"2022-10-06"},{"lineNumber":127,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":129,"author":{"gitId":"ngshijun"},"content":".table-view .column-header-background {","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":132,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":".table-view .column-header,","lastModifiedDate":"2022-10-28"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":".table-view .filler {","lastModifiedDate":"2022-10-28"},{"lineNumber":135,"author":{"gitId":"ngshijun"},"content":"    -fx-size: 35;","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":137,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-06"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":139,"author":{"gitId":"ngshijun"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":140,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":142,"author":{"gitId":"ngshijun"},"content":".table-view .column-header .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":143,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":146,"author":{"gitId":"ngshijun"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2022-10-06"},{"lineNumber":147,"author":{"gitId":"ngshijun"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":148,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":150,"author":{"gitId":"ngshijun"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2022-10-06"},{"lineNumber":151,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"ngshijun"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2022-10-06"},{"lineNumber":155,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"ngshijun"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":158,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":160,"author":{"gitId":"ngshijun"},"content":".split-pane {","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":162,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-10-06"},{"lineNumber":164,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":166,"author":{"gitId":"ngshijun"},"content":".list-view {","lastModifiedDate":"2022-10-06"},{"lineNumber":167,"author":{"gitId":"ngshijun"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#f1f1f1, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":170,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":171,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":172,"author":{"gitId":"ngshijun"},"content":".list-cell {","lastModifiedDate":"2022-10-06"},{"lineNumber":173,"author":{"gitId":"ngshijun"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":174,"author":{"gitId":"ngshijun"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":175,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":177,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":179,"author":{"gitId":"kevinchangjk"},"content":".list-cell .label {","lastModifiedDate":"2022-10-28"},{"lineNumber":180,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":181,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":182,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":".list-cell:filled {","lastModifiedDate":"2022-10-28"},{"lineNumber":184,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #797ef6;","lastModifiedDate":"2022-10-28"},{"lineNumber":185,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":186,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":187,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":188,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"ngshijun"},"content":".list-cell:filled:selected {","lastModifiedDate":"2022-10-06"},{"lineNumber":190,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #1aa7ec;","lastModifiedDate":"2022-10-28"},{"lineNumber":191,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":192,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"ngshijun"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2022-10-06"},{"lineNumber":194,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: derive(#1aa7ec, -30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":195,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":196,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":197,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":198,"author":{"gitId":"ngshijun"},"content":".cell_big_label {","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-06"},{"lineNumber":200,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2022-10-06"},{"lineNumber":201,"author":{"gitId":"ngshijun"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-06"},{"lineNumber":202,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":204,"author":{"gitId":"ngshijun"},"content":".cell_small_label {","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono\";","lastModifiedDate":"2022-10-06"},{"lineNumber":206,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2022-10-06"},{"lineNumber":207,"author":{"gitId":"ngshijun"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":209,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"ngshijun"},"content":".info_big_label {","lastModifiedDate":"2022-10-17"},{"lineNumber":211,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Semibold\";","lastModifiedDate":"2022-10-17"},{"lineNumber":212,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2022-10-17"},{"lineNumber":213,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":214,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":215,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":216,"author":{"gitId":"ngshijun"},"content":".info_small_label {","lastModifiedDate":"2022-10-17"},{"lineNumber":217,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono\";","lastModifiedDate":"2022-10-17"},{"lineNumber":218,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 17px;","lastModifiedDate":"2022-10-17"},{"lineNumber":219,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":220,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-17"},{"lineNumber":221,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":222,"author":{"gitId":"ngshijun"},"content":".stack-pane {","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#f1f1f1, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":224,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"ngshijun"},"content":".pane-with-border {","lastModifiedDate":"2022-10-06"},{"lineNumber":227,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#f1f1f1, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":228,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":229,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-top-width: 2px;","lastModifiedDate":"2022-10-28"},{"lineNumber":230,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":231,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":232,"author":{"gitId":"ngshijun"},"content":".result-display {","lastModifiedDate":"2022-10-06"},{"lineNumber":233,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-06"},{"lineNumber":234,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":235,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":236,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":237,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":238,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":239,"author":{"gitId":"ngshijun"},"content":".result-display .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":240,"author":{"gitId":"ngshijun"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2022-10-06"},{"lineNumber":241,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":242,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":243,"author":{"gitId":"kevinchangjk"},"content":".status-bar {","lastModifiedDate":"2022-10-28"},{"lineNumber":244,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#1e2f97, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":245,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":246,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":247,"author":{"gitId":"ngshijun"},"content":".status-bar .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":248,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":249,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":250,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2022-10-06"},{"lineNumber":251,"author":{"gitId":"ngshijun"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2022-10-06"},{"lineNumber":252,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":253,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":254,"author":{"gitId":"ngshijun"},"content":".status-bar-with-border {","lastModifiedDate":"2022-10-06"},{"lineNumber":255,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-06"},{"lineNumber":256,"author":{"gitId":"ngshijun"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-10-06"},{"lineNumber":257,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-06"},{"lineNumber":258,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":259,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":260,"author":{"gitId":"ngshijun"},"content":".status-bar-with-border .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":261,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":262,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":263,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":264,"author":{"gitId":"ngshijun"},"content":".grid-pane {","lastModifiedDate":"2022-10-06"},{"lineNumber":265,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-06"},{"lineNumber":266,"author":{"gitId":"ngshijun"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-06"},{"lineNumber":267,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2022-10-06"},{"lineNumber":268,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":269,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":270,"author":{"gitId":"ngshijun"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2022-10-06"},{"lineNumber":271,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2022-10-06"},{"lineNumber":272,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":273,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":274,"author":{"gitId":"ngshijun"},"content":".context-menu {","lastModifiedDate":"2022-10-06"},{"lineNumber":275,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2022-10-06"},{"lineNumber":276,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":277,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":278,"author":{"gitId":"ngshijun"},"content":".context-menu .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":279,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":280,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":281,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":282,"author":{"gitId":"ngshijun"},"content":".menu-bar {","lastModifiedDate":"2022-10-06"},{"lineNumber":283,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#1e2f97, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":284,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":285,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":286,"author":{"gitId":"ngshijun"},"content":".menu-bar .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":287,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":288,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":289,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":290,"author":{"gitId":"ngshijun"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2022-10-06"},{"lineNumber":291,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":292,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":293,"author":{"gitId":"ngshijun"},"content":".menu .left-container {","lastModifiedDate":"2022-10-06"},{"lineNumber":294,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: black;","lastModifiedDate":"2022-10-06"},{"lineNumber":295,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":296,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":297,"author":{"gitId":"ngshijun"},"content":"/*","lastModifiedDate":"2022-10-06"},{"lineNumber":298,"author":{"gitId":"ngshijun"},"content":" * Metro style Push Button","lastModifiedDate":"2022-10-06"},{"lineNumber":299,"author":{"gitId":"ngshijun"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2022-10-06"},{"lineNumber":300,"author":{"gitId":"ngshijun"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2022-10-06"},{"lineNumber":301,"author":{"gitId":"ngshijun"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":302,"author":{"gitId":"ngshijun"},"content":".button {","lastModifiedDate":"2022-10-06"},{"lineNumber":303,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2022-10-06"},{"lineNumber":304,"author":{"gitId":"ngshijun"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2022-10-06"},{"lineNumber":305,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2022-10-06"},{"lineNumber":306,"author":{"gitId":"ngshijun"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":307,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-06"},{"lineNumber":308,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-10-06"},{"lineNumber":309,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":310,"author":{"gitId":"ngshijun"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2022-10-06"},{"lineNumber":311,"author":{"gitId":"ngshijun"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2022-10-06"},{"lineNumber":312,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":313,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":314,"author":{"gitId":"ngshijun"},"content":".button:hover {","lastModifiedDate":"2022-10-06"},{"lineNumber":315,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2022-10-06"},{"lineNumber":316,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":317,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":318,"author":{"gitId":"kevinchangjk"},"content":".button:pressed,","lastModifiedDate":"2022-10-28"},{"lineNumber":319,"author":{"gitId":"kevinchangjk"},"content":".button:default:hover:pressed {","lastModifiedDate":"2022-10-28"},{"lineNumber":320,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":321,"author":{"gitId":"ngshijun"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2022-10-06"},{"lineNumber":322,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":323,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":324,"author":{"gitId":"ngshijun"},"content":".button:focused {","lastModifiedDate":"2022-10-06"},{"lineNumber":325,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: #f1f1f1, white;","lastModifiedDate":"2022-10-28"},{"lineNumber":326,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":327,"author":{"gitId":"ngshijun"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2022-10-06"},{"lineNumber":328,"author":{"gitId":"ngshijun"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":329,"author":{"gitId":"ngshijun"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":330,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":331,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":332,"author":{"gitId":"kevinchangjk"},"content":".button:disabled,","lastModifiedDate":"2022-10-28"},{"lineNumber":333,"author":{"gitId":"kevinchangjk"},"content":".button:default:disabled {","lastModifiedDate":"2022-10-28"},{"lineNumber":334,"author":{"gitId":"ngshijun"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2022-10-06"},{"lineNumber":335,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-06"},{"lineNumber":336,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":337,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":338,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":339,"author":{"gitId":"ngshijun"},"content":".button:default {","lastModifiedDate":"2022-10-06"},{"lineNumber":340,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2022-10-06"},{"lineNumber":341,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":342,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":343,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":344,"author":{"gitId":"ngshijun"},"content":".button:default:hover {","lastModifiedDate":"2022-10-06"},{"lineNumber":345,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2022-10-06"},{"lineNumber":346,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":347,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":348,"author":{"gitId":"ngshijun"},"content":".dialog-pane {","lastModifiedDate":"2022-10-06"},{"lineNumber":349,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-06"},{"lineNumber":350,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":351,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":352,"author":{"gitId":"ngshijun"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2022-10-06"},{"lineNumber":353,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2022-10-06"},{"lineNumber":354,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":355,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":356,"author":{"gitId":"ngshijun"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2022-10-06"},{"lineNumber":357,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2022-10-06"},{"lineNumber":358,"author":{"gitId":"ngshijun"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2022-10-06"},{"lineNumber":359,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":360,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":361,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":362,"author":{"gitId":"ngshijun"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2022-10-06"},{"lineNumber":363,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2022-10-06"},{"lineNumber":364,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":365,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":366,"author":{"gitId":"ngshijun"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2022-10-06"},{"lineNumber":367,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2022-10-06"},{"lineNumber":368,"author":{"gitId":"ngshijun"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2022-10-06"},{"lineNumber":369,"author":{"gitId":"kevinchangjk"},"content":"    -fx-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":370,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":371,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":372,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":373,"author":{"gitId":"ngshijun"},"content":".scroll-bar {","lastModifiedDate":"2022-10-06"},{"lineNumber":374,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#797ef6, 30%);","lastModifiedDate":"2022-10-28"},{"lineNumber":375,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":376,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":377,"author":{"gitId":"ngshijun"},"content":".scroll-bar .thumb {","lastModifiedDate":"2022-10-06"},{"lineNumber":378,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":379,"author":{"gitId":"ngshijun"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2022-10-06"},{"lineNumber":380,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":381,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":382,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2022-10-28"},{"lineNumber":383,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .decrement-button {","lastModifiedDate":"2022-10-28"},{"lineNumber":384,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-06"},{"lineNumber":385,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":386,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":387,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":388,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2022-10-28"},{"lineNumber":389,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar .decrement-arrow {","lastModifiedDate":"2022-10-28"},{"lineNumber":390,"author":{"gitId":"ngshijun"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2022-10-06"},{"lineNumber":391,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":392,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":393,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2022-10-28"},{"lineNumber":394,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2022-10-28"},{"lineNumber":395,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2022-10-06"},{"lineNumber":396,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":397,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":398,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:horizontal .increment-arrow,","lastModifiedDate":"2022-10-28"},{"lineNumber":399,"author":{"gitId":"kevinchangjk"},"content":".scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2022-10-28"},{"lineNumber":400,"author":{"gitId":"ngshijun"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":401,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":402,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":403,"author":{"gitId":"kevinchangjk"},"content":".scroll-pane .viewport {","lastModifiedDate":"2022-10-28"},{"lineNumber":404,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: derive(#f1f1f1, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":405,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":406,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":407,"author":{"gitId":"kevinchangjk"},"content":".scroll-pane {","lastModifiedDate":"2022-10-28"},{"lineNumber":408,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-28"},{"lineNumber":409,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":410,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":411,"author":{"gitId":"ngshijun"},"content":"#cardPane {","lastModifiedDate":"2022-10-06"},{"lineNumber":412,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2022-10-06"},{"lineNumber":413,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-28"},{"lineNumber":414,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":415,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2022-10-28"},{"lineNumber":416,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":417,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":418,"author":{"gitId":"ngshijun"},"content":"#commandTypeLabel {","lastModifiedDate":"2022-10-06"},{"lineNumber":419,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2022-10-06"},{"lineNumber":420,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f70d1a;","lastModifiedDate":"2022-10-28"},{"lineNumber":421,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":422,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":423,"author":{"gitId":"ngshijun"},"content":"#commandTextField {","lastModifiedDate":"2022-10-06"},{"lineNumber":424,"author":{"gitId":"ngshijun"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2022-10-06"},{"lineNumber":425,"author":{"gitId":"ngshijun"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":426,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-color: #1e2f97 #1e2f97 #1e2f97 #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":427,"author":{"gitId":"ngshijun"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2022-10-06"},{"lineNumber":428,"author":{"gitId":"ngshijun"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2022-10-06"},{"lineNumber":429,"author":{"gitId":"ngshijun"},"content":"    -fx-border-radius: 20px;","lastModifiedDate":"2022-10-07"},{"lineNumber":430,"author":{"gitId":"ngshijun"},"content":"    -fx-font-family: \"SF Mono Light\";","lastModifiedDate":"2022-10-06"},{"lineNumber":431,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2022-10-06"},{"lineNumber":432,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":433,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":434,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":435,"author":{"gitId":"kevinchangjk"},"content":"#filterField,","lastModifiedDate":"2022-10-28"},{"lineNumber":436,"author":{"gitId":"kevinchangjk"},"content":"#personListPanel,","lastModifiedDate":"2022-10-28"},{"lineNumber":437,"author":{"gitId":"kevinchangjk"},"content":"#personWebpage {","lastModifiedDate":"2022-10-28"},{"lineNumber":438,"author":{"gitId":"ngshijun"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2022-10-06"},{"lineNumber":439,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":440,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":441,"author":{"gitId":"ngshijun"},"content":"#resultDisplay .content {","lastModifiedDate":"2022-10-06"},{"lineNumber":442,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: transparent, derive(#1aa7ec, 20%), transparent,","lastModifiedDate":"2022-10-28"},{"lineNumber":443,"author":{"gitId":"kevinchangjk"},"content":"        derive(#1aa7ec, 20%);","lastModifiedDate":"2022-10-28"},{"lineNumber":444,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":445,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":446,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":447,"author":{"gitId":"ngshijun"},"content":"#tags {","lastModifiedDate":"2022-10-06"},{"lineNumber":448,"author":{"gitId":"ngshijun"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2022-10-06"},{"lineNumber":449,"author":{"gitId":"ngshijun"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2022-10-06"},{"lineNumber":450,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":451,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":452,"author":{"gitId":"ngshijun"},"content":"#tags .label {","lastModifiedDate":"2022-10-06"},{"lineNumber":453,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #f1f1f1;","lastModifiedDate":"2022-10-28"},{"lineNumber":454,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-color: #fa6900;","lastModifiedDate":"2022-10-28"},{"lineNumber":455,"author":{"gitId":"kevinchangjk"},"content":"    -fx-padding: 2 6 2 6;","lastModifiedDate":"2022-10-28"},{"lineNumber":456,"author":{"gitId":"kevinchangjk"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":457,"author":{"gitId":"kevinchangjk"},"content":"    -fx-background-radius: 20;","lastModifiedDate":"2022-10-28"},{"lineNumber":458,"author":{"gitId":"ngshijun"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2022-10-06"},{"lineNumber":459,"author":{"gitId":"ngshijun"},"content":"}","lastModifiedDate":"2022-10-06"},{"lineNumber":460,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":461,"author":{"gitId":"kevinchangjk"},"content":"#lineChart .chart-title {","lastModifiedDate":"2022-10-28"},{"lineNumber":462,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":463,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":464,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":465,"author":{"gitId":"kevinchangjk"},"content":"#lineChart .axis-label {","lastModifiedDate":"2022-10-28"},{"lineNumber":466,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":467,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"},{"lineNumber":468,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":469,"author":{"gitId":"kevinchangjk"},"content":"#lineChart .chart-legend-item {","lastModifiedDate":"2022-10-28"},{"lineNumber":470,"author":{"gitId":"kevinchangjk"},"content":"    -fx-text-fill: #1e2f97;","lastModifiedDate":"2022-10-28"},{"lineNumber":471,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-28"}],"authorContributionMap":{"ngshijun":333,"kevinchangjk":138}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.control.ProgressBar?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"         title\u003d\"Coydir\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"Kok-je"},"content":"    \u003cImage url\u003d\"@/images/Coydir_Logo.png\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"            \u003cMenuItem fx:id\u003d\"darkTheme\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleDarkTheme\" text\u003d\"Dark\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"            \u003cMenuItem fx:id\u003d\"lightTheme\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleLightTheme\" text\u003d\"Light\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"ngshijun"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"ngshijun"},"content":"        \u003cHBox fx:id\u003d\"employeeList\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"ngshijun"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"ngshijun"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"ngshijun"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"ngshijun"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"          \u003cVBox fx:id\u003d\"sidePanel\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"            \u003cStackPane fx:id\u003d\"sidePanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"ngshijun"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"ngshijun"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"ngshijun"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":64,"author":{"gitId":"ngshijun"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"ngshijun"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":68,"author":{"gitId":"ngshijun"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ngshijun":20,"Kok-je":1,"kevinchangjk":2,"prit3010":1,"-":50}},{"path":"src/main/resources/view/PersonInfo.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ngshijun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"ngshijun"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"ngshijun"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Kok-je"},"content":"\u003c?import javafx.scene.chart.CategoryAxis?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":9,"author":{"gitId":"Kok-je"},"content":"\u003c?import javafx.scene.chart.LineChart?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":10,"author":{"gitId":"Kok-je"},"content":"\u003c?import javafx.scene.chart.NumberAxis?\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":11,"author":{"gitId":"ngshijun"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"ngshijun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"ngshijun"},"content":"\u003cVBox fx:id\u003d\"personInfo\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"      \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"ngshijun"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"ngshijun"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"ngshijun"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"        \u003cScrollPane fitToWidth\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":22,"author":{"gitId":"ngshijun"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"ngshijun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"ngshijun"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"ngshijun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"ngshijun"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"ngshijun"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"info_big_label\"\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":28,"author":{"gitId":"ngshijun"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"ngshijun"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"ngshijun"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"ngshijun"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"ngshijun"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"ngshijun"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"info_big_label\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":34,"author":{"gitId":"ngshijun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"ngshijun"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"employeeId\" styleClass\u003d\"info_small_label\" text\u003d\"\\$employeeId\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":37,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"info_small_label\" text\u003d\"\\$position\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"            \u003cLabel fx:id\u003d\"department\" styleClass\u003d\"info_small_label\" text\u003d\"\\$department\" /\u003e","lastModifiedDate":"2022-10-23"},{"lineNumber":39,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"info_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":40,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"info_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":41,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"info_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Kok-je"},"content":"            \u003cLabel fx:id\u003d\"performance\" styleClass\u003d\"info_small_label\" text\u003d\"\\$performance\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":45,"author":{"gitId":"Kok-je"},"content":"                    \u003cInsets top\u003d\"10\"/\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":46,"author":{"gitId":"Kok-je"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":47,"author":{"gitId":"Kok-je"},"content":"                \u003cLineChart fx:id\u003d\"lineChart\" layoutX\u003d\"14.0\" layoutY\u003d\"52.0\" prefHeight\u003d\"512.0\"","lastModifiedDate":"2022-10-27"},{"lineNumber":48,"author":{"gitId":"Kok-je"},"content":"                    prefWidth\u003d\"887.0\" title\u003d\"performanceHistory\" style\u003d\"-fx-background-color: #F5F5F5;\"\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"                    \u003cxAxis\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":50,"author":{"gitId":"Kok-je"},"content":"                        \u003cCategoryAxis fx:id\u003d\"xAxis\" side\u003d\"BOTTOM\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":51,"author":{"gitId":"Kok-je"},"content":"                    \u003c/xAxis\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":52,"author":{"gitId":"Kok-je"},"content":"                    \u003cyAxis\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":53,"author":{"gitId":"Kok-je"},"content":"                        \u003cNumberAxis fx:id\u003d\"yAxis\" side\u003d\"LEFT\" /\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":54,"author":{"gitId":"Kok-je"},"content":"                    \u003c/yAxis\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":55,"author":{"gitId":"Kok-je"},"content":"                \u003c/LineChart\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":56,"author":{"gitId":"Kok-je"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-27"},{"lineNumber":57,"author":{"gitId":"Kok-je"},"content":"            \u003cLabel /\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":58,"author":{"gitId":"ngshijun"},"content":"            \u003cLabel fx:id\u003d\"onLeave\" styleClass\u003d\"info_small_label\" text\u003d\"\\$onLeave\" /\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"            \u003cLabel fx:id\u003d\"totalLeave\" styleClass\u003d\"info_small_label\" text\u003d\"\\$totalLeave\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"            \u003cLabel fx:id\u003d\"leaveLeft\" styleClass\u003d\"info_small_label\" text\u003d\"\\$leaveLeft\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":61,"author":{"gitId":"ngshijun"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"ngshijun"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"ngshijun"},"content":"                    \u003cInsets top\u003d\"10\"/\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":64,"author":{"gitId":"ngshijun"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":65,"author":{"gitId":"ngshijun"},"content":"                \u003cTableView fx:id\u003d\"leaveTable\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"ngshijun"},"content":"                \u003c/TableView\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":67,"author":{"gitId":"ngshijun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-26"},{"lineNumber":68,"author":{"gitId":"ngshijun"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-10-28"},{"lineNumber":70,"author":{"gitId":"ngshijun"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"ngshijun"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-27"}],"authorContributionMap":{"ngshijun":44,"Kok-je":19,"kevinchangjk":4,"prit3010":4}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"ngshijun"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"      \u003cLabel fx:id\u003d\"employeeId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$employeeId\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"      \u003cLabel fx:id\u003d\"position\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$position\" /\u003e","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ngshijun":1,"kevinchangjk":2,"-":32}},{"path":"src/test/java/coydir/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kevinchangjk":1,"-":57}},{"path":"src/test/java/coydir/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kevinchangjk":1,"-":26}},{"path":"src/test/java/coydir/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":2,"-":133}},{"path":"src/test/java/coydir/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.core.index;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kevinchangjk":2,"-":58}},{"path":"src/test/java/coydir/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kevinchangjk":2,"-":34}},{"path":"src/test/java/coydir/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"kevinchangjk":3,"-":105}},{"path":"src/test/java/coydir/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Config;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kevinchangjk":4,"-":112}},{"path":"src/test/java/coydir/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":2,"-":21}},{"path":"src/test/java/coydir/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.SerializableTestClass;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.TestUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":3,"-":42}},{"path":"src/test/java/coydir/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.commons.util;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kevinchangjk":2,"-":141}},{"path":"src/test/java/coydir/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DEPARTMENT_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.AddCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.CommandResult;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.ListCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-31"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"import coydir.storage.JsonDatabaseStorage;","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"import coydir.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"import coydir.storage.StorageManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"        JsonDatabaseStorage databaseStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"                new JsonDatabaseStorage(temporaryFolder.resolve(\"database.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"        StorageManager storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"        assertParseException(invalidCommand, \u0027\"\u0027 + invalidCommand + \u0027\"\u0027 + MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"prit3010"},"content":"        // Setup LogicManager with JsonDatabaseIoExceptionThrowingStub","lastModifiedDate":"2022-10-13"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"        JsonDatabaseStorage databaseStorage \u003d","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"                new JsonDatabaseIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionDatabase.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"        StorageManager storage \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_AMY + DEPARTMENT_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"        PersonBuilder amyBuilder \u003d new PersonBuilder(AMY);","lastModifiedDate":"2022-10-31"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"        String newId \u003d String.valueOf(EmployeeId.getCount());","lastModifiedDate":"2022-10-31"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"        Person expectedPerson \u003d amyBuilder.withEmployeeId(newId).withTags().build();","lastModifiedDate":"2022-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"prit3010"},"content":"    private static class JsonDatabaseIoExceptionThrowingStub extends JsonDatabaseStorage {","lastModifiedDate":"2022-10-13"},{"lineNumber":159,"author":{"gitId":"prit3010"},"content":"        private JsonDatabaseIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"prit3010"},"content":"        public void saveDatabase(ReadOnlyDatabase database, Path filePath) throws IOException {","lastModifiedDate":"2022-10-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kevinchangjk":28,"prit3010":14,"-":126}},{"path":"src/test/java/coydir/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"        Person personInList \u003d model.getDatabase().getPersonList().get(0);","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"                String.format(AddCommand.MESSAGE_DUPLICATE_PERSON, personInList.getName()));","lastModifiedDate":"2022-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kevinchangjk":8,"prit3010":6,"-":32}},{"path":"src/test/java/coydir/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2022-10-16"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"                String.format(AddCommand.MESSAGE_DUPLICATE_PERSON, validPerson.getName()), () -\u003e","lastModifiedDate":"2022-10-16"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"                        addCommand.execute(modelStub));","lastModifiedDate":"2022-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"prit3010"},"content":"        public Path getDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"prit3010"},"content":"        public void setDatabaseFilePath(Path databaseFilePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"prit3010"},"content":"        public void setDatabase(ReadOnlyDatabase newData) {","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"prit3010"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"prit3010"},"content":"        public ReadOnlyDatabase getDatabase() {","lastModifiedDate":"2022-10-13"},{"lineNumber":191,"author":{"gitId":"prit3010"},"content":"            return new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kevinchangjk":8,"prit3010":11,"-":176}},{"path":"src/test/java/coydir/logic/commands/BatchAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-10-16"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.commands.BatchAddCommand.MESSAGE_DUPLICATE_FOUND;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.commands.BatchAddCommand.MESSAGE_FILE_NOT_FOUND;","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.commands.BatchAddCommand.MESSAGE_MISSING_COMP_FIELDS;","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.commands.BatchAddCommand.MESSAGE_NO_DATA;","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-16"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"import coydir.testutil.TypicalPersons;","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"class BatchAddCommandTest {","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    private static final Person KIM \u003d new PersonBuilder().withName(\"Kim Meier\").withPhone(\"84824249\")","lastModifiedDate":"2022-11-03"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"            .withEmail(\"kimmeier@example.com\").withPosition(\"Frontend Engineer\")","lastModifiedDate":"2022-11-03"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"            .withDepartment(\"Information Technology\").withAddress(\"Little India\").withTags(\"Promotion coming\")","lastModifiedDate":"2022-11-03"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"            .withEmployeeId(\"1\").withTotalLeave(20).build();","lastModifiedDate":"2022-11-03"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"    private static final Person PETRIS \u003d new PersonBuilder().withName(\"Petris Mueller\").withPhone(\"96722343\")","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"            .withEmptyEmail().withEmptyAddress().withPosition(\"Marketing Intern\").withDepartment(\"Marketing\")","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"            .withEmployeeId(\"2\").withTotalLeave(13).withEmployeeId(\"2\").build();","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"    private static final Person PAUL \u003d new PersonBuilder().withName(\"Paul Morty\").withEmail(\"paul@example.com\")","lastModifiedDate":"2022-11-03"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"            .withEmptyPhone().withEmptyAddress().withPosition(\"UI/UX Engineer\").withDepartment(\"Sales\")","lastModifiedDate":"2022-11-03"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"            .withEmployeeId(\"3\").withTags(\"Innovation Lead\")","lastModifiedDate":"2022-11-03"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"            .build();","lastModifiedDate":"2022-11-03"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-11-03"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":44,"author":{"gitId":"prit3010"},"content":"    void execute_batchAdd_success() {","lastModifiedDate":"2022-11-03"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"        Model emptyDatabase \u003d new ModelManager(new Database(), new UserPrefs());","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"        Path testData \u003d Paths.get(\"src\", \"test\", \"data\", \"BatchAddTest\", \"BatchAddSuccess.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"        BatchAddCommand batchAddCommand \u003d new BatchAddCommand(\"BatchAddSuccess.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"        batchAddCommand.setFilePath(testData);","lastModifiedDate":"2022-11-03"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"        String expectedMessage \u003d String.format(BatchAddCommand.MESSAGE_SUCCESS, 3);","lastModifiedDate":"2022-11-03"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"        ModelManager expectedModel \u003d new ModelManager(new Database(), new UserPrefs());","lastModifiedDate":"2022-11-03"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"        EmployeeId.setCount(1);","lastModifiedDate":"2022-11-03"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"        expectedModel.addPerson(KIM);","lastModifiedDate":"2022-11-03"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"        expectedModel.addPerson(PETRIS);","lastModifiedDate":"2022-11-03"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"        expectedModel.addPerson(PAUL);","lastModifiedDate":"2022-11-03"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":57,"author":{"gitId":"prit3010"},"content":"        assertCommandSuccess(batchAddCommand, emptyDatabase, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-03"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"    void execute_batchAddFileNoExist_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"        Path testData \u003d Paths.get(\"src\", \"test\", \"data\", \"BatchAddTest\", \"filename.csv\");","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"        BatchAddCommand batchAddCommand \u003d new BatchAddCommand(\"filename.csv\");","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"        batchAddCommand.setFilePath(testData);","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"prit3010"},"content":"        assertCommandFailure(batchAddCommand, model, MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2022-11-03"},{"lineNumber":66,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":67,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"    void execute_batchAddFileDuplicates_throwsCommandException() {","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"        BatchAddCommand batchAddCommand \u003d new BatchAddCommand(\"BatchAddDuplicatePerson.csv\");","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"        Path testData \u003d Paths.get(\"src\", \"test\", \"data\", \"BatchAddTest\", \"BatchAddDuplicatePerson.csv\");","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"        batchAddCommand.setFilePath(testData);","lastModifiedDate":"2022-10-16"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"        assertCommandFailure(batchAddCommand, model, MESSAGE_DUPLICATE_FOUND);","lastModifiedDate":"2022-11-03"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":76,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":77,"author":{"gitId":"prit3010"},"content":"    void execute_batchAddFileMissingName_throwsCommandException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"        BatchAddCommand batchAddCommand \u003d new BatchAddCommand(\"BatchAddMissingName.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"        Path testData \u003d Paths.get(\"src\", \"test\", \"data\", \"BatchAddTest\", \"BatchAddMissingName.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"        batchAddCommand.setFilePath(testData);","lastModifiedDate":"2022-11-03"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"        assertCommandFailure(batchAddCommand, model, MESSAGE_MISSING_COMP_FIELDS);","lastModifiedDate":"2022-11-03"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":84,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":85,"author":{"gitId":"prit3010"},"content":"    void execute_batchAddFilePhoneIncorrectFormat_throwsCommandException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"        BatchAddCommand batchAddCommand \u003d new BatchAddCommand(\"BatchAddInvalidPhone.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"        Path testData \u003d Paths.get(\"src\", \"test\", \"data\", \"BatchAddTest\", \"BatchAddInvalidPhone.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":88,"author":{"gitId":"prit3010"},"content":"        batchAddCommand.setFilePath(testData);","lastModifiedDate":"2022-11-03"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"        assertCommandFailure(batchAddCommand, model, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-11-03"},{"lineNumber":90,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":92,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"    void execute_batchAddFileEmpty_throwsCommandException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":94,"author":{"gitId":"prit3010"},"content":"        BatchAddCommand batchAddCommand \u003d new BatchAddCommand(\"BatchAddEmpty.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":95,"author":{"gitId":"prit3010"},"content":"        Path testData \u003d Paths.get(\"src\", \"test\", \"data\", \"BatchAddTest\", \"BatchAddEmpty.csv\");","lastModifiedDate":"2022-11-03"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"        batchAddCommand.setFilePath(testData);","lastModifiedDate":"2022-11-03"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"        assertCommandFailure(batchAddCommand, model, String.format(MESSAGE_NO_DATA, \"BatchAddEmpty.csv\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-10-16"}],"authorContributionMap":{"prit3010":99}},{"path":"src/test/java/coydir/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"    public void execute_emptyDatabase_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"    public void execute_nonEmptyDatabase_success() {","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"        Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"        expectedModel.setDatabase(new Database());","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kevinchangjk":5,"prit3010":7,"-":20}},{"path":"src/test/java/coydir/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"kevinchangjk":1,"-":53}},{"path":"src/test/java/coydir/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2022-10-26"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"Kok-je"},"content":"    public static final String VALID_NAME_PRITTAM \u003d \"Prittam Kok\";","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"Kok-je"},"content":"    public static final String VALID_PHONE_PRITTAM \u003d \"00000000\";","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"    public static final String VALID_EMAIL_PRITTAM \u003d \"null@null.com\";","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    public static final String VALID_POSITION_AMY \u003d \"Software Engineer\";","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    public static final String VALID_POSITION_BOB \u003d \"Product Manager\";","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"Kok-je"},"content":"    public static final String VALID_POSITION_PRITTAM \u003d \"Intern\";","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"    public static final String VALID_DEPARTMENT_AMY \u003d \"Information Technology\";","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"    public static final String VALID_DEPARTMENT_BOB \u003d \"Product Management\";","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"    public static final String VALID_DEPARTMENT_PRITTAM \u003d \"Board of Directors\";","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"Kok-je"},"content":"    public static final String VALID_ADDRESS_PRITTAM \u003d \"null\";","lastModifiedDate":"2022-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"Kok-je"},"content":"    public static final String NAME_DESC_PRITTAM \u003d \" \" + PREFIX_NAME + VALID_NAME_PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"Kok-je"},"content":"    public static final String PHONE_DESC_PRITTAM \u003d \" \" + PREFIX_PHONE + VALID_PHONE_PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"Kok-je"},"content":"    public static final String EMAIL_DESC_PRITTAM \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"    public static final String POSITION_DESC_AMY \u003d \" \" + PREFIX_POSITION + VALID_POSITION_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"    public static final String POSITION_DESC_BOB \u003d \" \" + PREFIX_POSITION + VALID_POSITION_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":62,"author":{"gitId":"Kok-je"},"content":"    public static final String POSITION_DESC_PRITTAM \u003d \" \" + PREFIX_POSITION + VALID_POSITION_PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    public static final String DEPARTMENT_DESC_AMY \u003d \" \" + PREFIX_DEPARTMENT + VALID_DEPARTMENT_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"    public static final String DEPARTMENT_DESC_BOB \u003d \" \" + PREFIX_DEPARTMENT + VALID_DEPARTMENT_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"    public static final String DEPARTMENT_DESC_PRITTAM \u003d \" \" + PREFIX_DEPARTMENT + VALID_DEPARTMENT_PRITTAM;","lastModifiedDate":"2022-10-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"Kok-je"},"content":"    public static final String ADDRESS_DESC_PRITTAM \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":73,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"    public static final String INVALID_POSITION_DESC \u003d \" \" + PREFIX_POSITION; // empty string not allowed for positions","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"    public static final String INVALID_DEPARTMENT_DESC \u003d","lastModifiedDate":"2022-10-24"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"            \" \" + PREFIX_DEPARTMENT + \"Invalid Department\"; // not in list of valid departments","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withPosition(VALID_POSITION_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"                .withDepartment(VALID_DEPARTMENT_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withPosition(VALID_POSITION_BOB)","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"                .withDepartment(VALID_DEPARTMENT_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-11-01"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-11-01"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"     * that takes a string {@code expectedMessage}, and an int {@code index} for viewing.","lastModifiedDate":"2022-11-01"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-11-01"},{"lineNumber":130,"author":{"gitId":"kevinchangjk"},"content":"    public static void assertViewingCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-11-01"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"            Model expectedModel, int index) {","lastModifiedDate":"2022-11-01"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, index);","lastModifiedDate":"2022-11-01"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"prit3010"},"content":"     * - the database, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"prit3010"},"content":"        Database expectedDatabase \u003d new Database(actualModel.getDatabase());","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":149,"author":{"gitId":"prit3010"},"content":"        assertEquals(expectedDatabase, actualModel.getDatabase());","lastModifiedDate":"2022-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"prit3010"},"content":"     * {@code model}\u0027s database.","lastModifiedDate":"2022-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"kevinchangjk"},"content":"        model.updateFilteredPersonList(new PersonMatchesKeywordsPredicate(splitName[0], \"\", \"\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Kok-je":12,"kevinchangjk":43,"prit3010":5,"-":106}},{"path":"src/test/java/coydir/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"import static coydir.testutil.TypicalIndexes.ID_FIRST_EMPLOYEE;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"chao890"},"content":"import static coydir.testutil.TypicalIndexes.ID_SECOND_EMPLOYEE;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"chao890"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new EmployeeId(\"1\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"chao890"},"content":"        EmployeeId outOfBoundId \u003d new EmployeeId(Integer.toString(model.getFilteredPersonList().size() + 1));","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"chao890"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundId);","lastModifiedDate":"2022-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"chao890"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new EmployeeId(\"1\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"        assertTrue(2 \u003c model.getDatabase().getPersonList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"chao890"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new EmployeeId(\"2\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"chao890"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(ID_FIRST_EMPLOYEE);","lastModifiedDate":"2022-10-05"},{"lineNumber":82,"author":{"gitId":"chao890"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(ID_SECOND_EMPLOYEE);","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"chao890"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(ID_FIRST_EMPLOYEE);","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kevinchangjk":10,"chao890":11,"prit3010":6,"-":82}},{"path":"src/test/java/coydir/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.Messages;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"        String employeeId \u003d model.getFilteredPersonList().get(0).getEmployeeId().value;","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        PersonBuilder builder \u003d new PersonBuilder();","lastModifiedDate":"2022-10-31"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        Person editedPerson \u003d builder.withEmployeeId(employeeId).withRating(\"3\").build();","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"        Model expectedModel \u003d new ModelManager(new Database(model.getDatabase()), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2022-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"prit3010"},"content":"        // edit person in filtered list into a duplicate in database","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"prit3010"},"content":"        Person personInList \u003d model.getDatabase().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2022-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"prit3010"},"content":"     * but smaller than size of database","lastModifiedDate":"2022-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"prit3010"},"content":"        // ensures that outOfBoundIndex is still in bounds of database list","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"prit3010"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDatabase().getPersonList().size());","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kevinchangjk":24,"prit3010":12,"-":140}},{"path":"src/test/java/coydir/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPosition(VALID_POSITION_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        // different department -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withDepartment(VALID_DEPARTMENT_BOB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kevinchangjk":20,"-":48}},{"path":"src/test/java/coydir/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kevinchangjk":5,"-":15}},{"path":"src/test/java/coydir/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertViewingCommandSuccess;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.CARL;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2022-10-26"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"    private Model model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"                new PersonMatchesKeywordsPredicate(\"one\", \"two\", \"three\");","lastModifiedDate":"2022-10-25"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-25"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"                new PersonMatchesKeywordsPredicate(\"four\", \"five\", \"six\");","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    public void execute_oneKeyword_multiplePersonsFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2022-10-28"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate predicate \u003d preparePredicate(\"el\");","lastModifiedDate":"2022-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"        assertFindCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(Arrays.asList(DANIEL, ELLE), model.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    public void execute_multipleKeywords_onePersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2022-10-28"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Fire Operations\");","lastModifiedDate":"2022-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"        assertFindCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2022-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"    public void execute_mismatchedKeywords_noPersonFound() {","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d String.format(FindCommand.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-28"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate predicate \u003d preparePredicate(\"Alice Fire\");","lastModifiedDate":"2022-10-26"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2022-10-26"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"        assertFindCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2022-10-26"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"     * Parses {@code userInput} into a {@code PersonMatchesKeywordsPredicate}.","lastModifiedDate":"2022-10-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"    private PersonMatchesKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-25"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        while (keywords.size() \u003c 3) {","lastModifiedDate":"2022-10-25"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"            keywords.add(\"\");","lastModifiedDate":"2022-10-25"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"        return new PersonMatchesKeywordsPredicate(keywords.get(0), keywords.get(1), keywords.get(2));","lastModifiedDate":"2022-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"    private void assertFindCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"            Model expectedModel) {","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        assertViewingCommandSuccess(command, actualModel, expectedMessage, expectedModel, 0);","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kevinchangjk":51,"prit3010":3,"-":50}},{"path":"src/test/java/coydir/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kevinchangjk":5,"-":15}},{"path":"src/test/java/coydir/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.commands;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.ModelManager;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"        model \u003d new ModelManager(getTypicalDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"        expectedModel \u003d new ModelManager(model.getDatabase(), new UserPrefs());","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kevinchangjk":7,"prit3010":3,"-":29}},{"path":"src/test/java/coydir/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DEPARTMENT_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DEPARTMENT_DESC_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DEPARTMENT_DESC_PRITTAM;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_DEPARTMENT_DESC;","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"Kok-je"},"content":"import static coydir.logic.commands.CommandTestUtil.NAME_DESC_PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.POSITION_DESC_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":25,"author":{"gitId":"Kok-je"},"content":"import static coydir.logic.commands.CommandTestUtil.POSITION_DESC_PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"Kok-je"},"content":"import static coydir.testutil.TypicalPersons.PRITTAM;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.AddCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-11-04"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-11-04"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-11-04"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-11-04"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-11-04"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-11-04"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-11-04"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.TestUtil;","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"        String newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withEmployeeId(newId).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withEmployeeId(newId).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withEmployeeId(newId).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withEmployeeId(newId).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"        // multiple positions - last position accepted","lastModifiedDate":"2022-10-04"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withEmployeeId(newId).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_AMY","lastModifiedDate":"2022-10-04"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"        // multiple departments - last department accepted","lastModifiedDate":"2022-10-24"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withEmployeeId(newId).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_AMY + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withEmployeeId(newId).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":110,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":115,"author":{"gitId":"kevinchangjk"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withEmployeeId(newId)","lastModifiedDate":"2022-10-31"},{"lineNumber":116,"author":{"gitId":"kevinchangjk"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2022-10-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"kevinchangjk"},"content":"        // missing tags, leave","lastModifiedDate":"2022-10-31"},{"lineNumber":125,"author":{"gitId":"kevinchangjk"},"content":"        PersonBuilder expectedPersonBuilder \u003d new PersonBuilder(AMY);","lastModifiedDate":"2022-11-04"},{"lineNumber":126,"author":{"gitId":"kevinchangjk"},"content":"        String newId \u003d String.valueOf(EmployeeId.getCount());","lastModifiedDate":"2022-10-31"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"        Person expectedPerson \u003d expectedPersonBuilder.withEmployeeId(newId).withTags().build();","lastModifiedDate":"2022-11-04"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2022-10-04"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_AMY + DEPARTMENT_DESC_AMY + ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2022-10-24"},{"lineNumber":130,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"        // only compulsory fields","lastModifiedDate":"2022-10-31"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"        newId \u003d String.valueOf(TestUtil.getMaxEmployeeId());","lastModifiedDate":"2022-11-04"},{"lineNumber":133,"author":{"gitId":"kevinchangjk"},"content":"        Person expectedPersonMissingOptional \u003d new PersonBuilder(PRITTAM).withEmployeeId(newId).withTags().build();","lastModifiedDate":"2022-10-31"},{"lineNumber":134,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, NAME_DESC_PRITTAM + POSITION_DESC_PRITTAM + DEPARTMENT_DESC_PRITTAM,","lastModifiedDate":"2022-10-24"},{"lineNumber":135,"author":{"gitId":"kevinchangjk"},"content":"                new AddCommand(expectedPersonMissingOptional));","lastModifiedDate":"2022-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":144,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"kevinchangjk"},"content":"        // missing position prefix","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"                + VALID_POSITION_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-24"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"        // missing department prefix","lastModifiedDate":"2022-10-24"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + VALID_DEPARTMENT_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2022-10-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"                + VALID_POSITION_BOB + VALID_DEPARTMENT_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":164,"author":{"gitId":"kevinchangjk"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + POSITION_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":174,"author":{"gitId":"kevinchangjk"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":175,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"        // invalid position","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_POSITION_DESC","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"kevinchangjk"},"content":"                Position.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"kevinchangjk"},"content":"        // invalid department","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":"                + INVALID_DEPARTMENT_DESC + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"kevinchangjk"},"content":"                Department.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"kevinchangjk"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":193,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"kevinchangjk"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + POSITION_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"kevinchangjk"},"content":"                + DEPARTMENT_DESC_BOB + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Kok-je":4,"kevinchangjk":142,"-":59}},{"path":"src/test/java/coydir/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kevinchangjk":1,"-":149}},{"path":"src/test/java/coydir/logic/parser/BatchAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-11-03"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-11-03"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-11-03"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-03"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.BatchAddCommand;","lastModifiedDate":"2022-11-03"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"public class BatchAddCommandParserTest {","lastModifiedDate":"2022-11-03"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"    private BatchAddCommandParser parser \u003d new BatchAddCommandParser();","lastModifiedDate":"2022-11-03"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-11-03"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"        assertParseSuccess(parser, \"coydir.csv\", new BatchAddCommand(\"coydir.csv\"));","lastModifiedDate":"2022-11-03"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"        assertParseFailure(parser, \"coydir.xlsx\",","lastModifiedDate":"2022-11-03"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, BatchAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-11-03"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-11-03"}],"authorContributionMap":{"prit3010":28}},{"path":"src/test/java/coydir/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.Command;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kevinchangjk":3,"-":36}},{"path":"src/test/java/coydir/logic/parser/DatabaseParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"import static coydir.testutil.TypicalIndexes.ID_FIRST_EMPLOYEE;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.AddCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"import coydir.logic.commands.BatchAddCommand;","lastModifiedDate":"2022-11-03"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.ClearCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.DeleteCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.ExitCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.FindCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.HelpCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.ListCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-31"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"public class DatabaseParserTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"    private final DatabaseParser parser \u003d new DatabaseParser();","lastModifiedDate":"2022-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        PersonBuilder builder \u003d new PersonBuilder();","lastModifiedDate":"2022-10-31"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        String newId \u003d String.valueOf(EmployeeId.getCount());","lastModifiedDate":"2022-10-31"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"        Person person \u003d builder.withEmployeeId(newId).build();","lastModifiedDate":"2022-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"chao890"},"content":"        assertEquals(new DeleteCommand(ID_FIRST_EMPLOYEE), command);","lastModifiedDate":"2022-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"        List\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e(Arrays.asList(\"foo\", \"bar\", \"baz\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"                FindCommand.COMMAND_WORD + \" \" + PersonUtil.getFindCommand(keywords));","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(new FindCommand(","lastModifiedDate":"2022-10-25"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"                    new PersonMatchesKeywordsPredicate(keywords.get(0), keywords.get(1), keywords.get(2))","lastModifiedDate":"2022-10-25"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"                    ), command);","lastModifiedDate":"2022-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"    public void parseCommand_batch_add() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"        assertTrue(parser.parseCommand(BatchAddCommand.COMMAND_WORD + \" coydir.csv\") instanceof BatchAddCommand);","lastModifiedDate":"2022-11-03"},{"lineNumber":101,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":102,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"prit3010"},"content":"        String userinput \u003d \"unknownCommand\";","lastModifiedDate":"2022-10-06"},{"lineNumber":112,"author":{"gitId":"prit3010"},"content":"        assertThrows(ParseException.class, \u0027\"\u0027 + userinput + \u0027\"\u0027 + MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"prit3010"},"content":"                -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kevinchangjk":30,"chao890":2,"prit3010":11,"-":72}},{"path":"src/test/java/coydir/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"chao890"},"content":"import static coydir.testutil.TypicalIndexes.ID_FIRST_EMPLOYEE;","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.DeleteCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"chao890"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(ID_FIRST_EMPLOYEE));","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kevinchangjk":5,"chao890":2,"-":25}},{"path":"src/test/java/coydir/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DEPARTMENT_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.DEPARTMENT_DESC_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_DEPARTMENT_DESC;","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_POSITION_DESC;","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.POSITION_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.POSITION_DESC_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_DEPARTMENT_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-09-29"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-29"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-29"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":54,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_POSITION_DESC, Position.MESSAGE_CONSTRAINTS); // invalid position","lastModifiedDate":"2022-10-04"},{"lineNumber":100,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DEPARTMENT_DESC, Department.MESSAGE_CONSTRAINTS); // invalid department","lastModifiedDate":"2022-10-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_POSITION_AMY","lastModifiedDate":"2022-10-04"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"                + INVALID_DEPARTMENT_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2022-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"                + EMAIL_DESC_AMY + POSITION_DESC_AMY + DEPARTMENT_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-24"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2022-10-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"kevinchangjk"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withPosition(VALID_POSITION_AMY)","lastModifiedDate":"2022-10-04"},{"lineNumber":132,"author":{"gitId":"kevinchangjk"},"content":"                .withDepartment(VALID_DEPARTMENT_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2022-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"kevinchangjk"},"content":"        // position","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"kevinchangjk"},"content":"        userInput \u003d targetIndex.getOneBased() + POSITION_DESC_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"kevinchangjk"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPosition(VALID_POSITION_AMY).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"kevinchangjk"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"kevinchangjk"},"content":"        // department","lastModifiedDate":"2022-10-24"},{"lineNumber":179,"author":{"gitId":"kevinchangjk"},"content":"        userInput \u003d targetIndex.getOneBased() + DEPARTMENT_DESC_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":180,"author":{"gitId":"kevinchangjk"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDepartment(VALID_DEPARTMENT_AMY).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":181,"author":{"gitId":"kevinchangjk"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"kevinchangjk"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + POSITION_DESC_AMY + DEPARTMENT_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"kevinchangjk"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"kevinchangjk"},"content":"                + POSITION_DESC_BOB + DEPARTMENT_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"kevinchangjk"},"content":"                .withEmail(VALID_EMAIL_BOB).withPosition(VALID_POSITION_BOB).withDepartment(VALID_DEPARTMENT_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"kevinchangjk"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"kevinchangjk"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + POSITION_DESC_BOB","lastModifiedDate":"2022-10-04"},{"lineNumber":224,"author":{"gitId":"kevinchangjk"},"content":"                + ADDRESS_DESC_BOB + PHONE_DESC_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"kevinchangjk"},"content":"                .withPosition(VALID_POSITION_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2022-10-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kevinchangjk":80,"-":161}},{"path":"src/test/java/coydir/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.FindCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"                new FindCommand(new PersonMatchesKeywordsPredicate(\"Prittam\", \"Intern\", \"Board\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, \" n/Prittam j/Intern d/Board\", expectedFindCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        assertParseSuccess(parser, \" \\n n/Prittam \\n j/Intern \\t d/Board  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kevinchangjk":9,"-":23}},{"path":"src/test/java/coydir/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.logic.parser;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.ParserUtil.MESSAGE_INVALID_NUMBER;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    private static final String INVALID_POSITION \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    private static final String INVALID_DEPARTMENT \u003d \"Invalid\";","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"    private static final String INVALID_FILENAME1 \u003d \"a\";","lastModifiedDate":"2022-11-03"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    private static final String INVALID_FILENAME2 \u003d \" \";","lastModifiedDate":"2022-11-03"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    private static final String INVALID_FILENAME3 \u003d \"coydir.xlsx\";","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"    private static final String VALID_POSITION \u003d \"Software Engineer\";","lastModifiedDate":"2022-10-04"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"    private static final String VALID_DEPARTMENT \u003d \"Information Technology\";","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"    private static final String VALID_FILENAME \u003d \"coydir.csv\";","lastModifiedDate":"2022-11-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_NUMBER, ()","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"kevinchangjk"},"content":"    public void parsePosition_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePosition((String) null));","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"kevinchangjk"},"content":"    public void parsePosition_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePosition(INVALID_POSITION));","lastModifiedDate":"2022-10-04"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":170,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":171,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"kevinchangjk"},"content":"    public void parsePosition_validValueWithoutWhitespace_returnsPosition() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"kevinchangjk"},"content":"        Position expectedPosition \u003d new Position(VALID_POSITION);","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(expectedPosition, ParserUtil.parsePosition(VALID_POSITION));","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":178,"author":{"gitId":"kevinchangjk"},"content":"    public void parsePosition_validValueWithWhitespace_returnsTrimmedPosition() throws Exception {","lastModifiedDate":"2022-10-04"},{"lineNumber":179,"author":{"gitId":"kevinchangjk"},"content":"        String positionWithWhitespace \u003d WHITESPACE + VALID_POSITION + WHITESPACE;","lastModifiedDate":"2022-10-04"},{"lineNumber":180,"author":{"gitId":"kevinchangjk"},"content":"        Position expectedPosition \u003d new Position(VALID_POSITION);","lastModifiedDate":"2022-10-04"},{"lineNumber":181,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(expectedPosition, ParserUtil.parsePosition(positionWithWhitespace));","lastModifiedDate":"2022-10-04"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":184,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"kevinchangjk"},"content":"    public void parseDepartment_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDepartment((String) null));","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":188,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":189,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":190,"author":{"gitId":"kevinchangjk"},"content":"    public void parseDepartment_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":191,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDepartment(INVALID_DEPARTMENT));","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"kevinchangjk"},"content":"    public void parseDepartment_validValueWithoutWhitespace_returnsDepartment() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"kevinchangjk"},"content":"        Department expectedDepartment \u003d new Department(VALID_DEPARTMENT);","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(expectedDepartment, ParserUtil.parseDepartment(VALID_DEPARTMENT));","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":199,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":200,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":201,"author":{"gitId":"kevinchangjk"},"content":"    public void parseDepartment_validValueWithWhitespace_returnsTrimmedDepartment() throws Exception {","lastModifiedDate":"2022-10-24"},{"lineNumber":202,"author":{"gitId":"kevinchangjk"},"content":"        String departmentWithWhitespace \u003d WHITESPACE + VALID_DEPARTMENT + WHITESPACE;","lastModifiedDate":"2022-10-24"},{"lineNumber":203,"author":{"gitId":"kevinchangjk"},"content":"        Department expectedDepartment \u003d new Department(VALID_DEPARTMENT);","lastModifiedDate":"2022-10-24"},{"lineNumber":204,"author":{"gitId":"kevinchangjk"},"content":"        assertEquals(expectedDepartment, ParserUtil.parseDepartment(departmentWithWhitespace));","lastModifiedDate":"2022-10-24"},{"lineNumber":205,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":206,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":253,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":254,"author":{"gitId":"prit3010"},"content":"    public void parseFileName_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":255,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFileName((String) null));","lastModifiedDate":"2022-11-03"},{"lineNumber":256,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":257,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":258,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":259,"author":{"gitId":"prit3010"},"content":"    public void parseFileName_invalidValueNotFile_throwsParseException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":260,"author":{"gitId":"prit3010"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFileName(INVALID_FILENAME1));","lastModifiedDate":"2022-11-03"},{"lineNumber":261,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":262,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":263,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":264,"author":{"gitId":"prit3010"},"content":"    public void parseFileName_invalidValueEmptyString_throwsParseException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":265,"author":{"gitId":"prit3010"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFileName(INVALID_FILENAME2));","lastModifiedDate":"2022-11-03"},{"lineNumber":266,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":267,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":268,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":269,"author":{"gitId":"prit3010"},"content":"    public void parseFileName_invalidValueNotCsv_throwsParseException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":270,"author":{"gitId":"prit3010"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFileName(INVALID_FILENAME3));","lastModifiedDate":"2022-11-03"},{"lineNumber":271,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":272,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":273,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":274,"author":{"gitId":"prit3010"},"content":"    public void parseFileName_validValueWithoutWhitespace_returnsDepartment() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":275,"author":{"gitId":"prit3010"},"content":"        String expectedFileName \u003d VALID_FILENAME;","lastModifiedDate":"2022-11-03"},{"lineNumber":276,"author":{"gitId":"prit3010"},"content":"        assertEquals(expectedFileName, ParserUtil.parseFileName(VALID_FILENAME));","lastModifiedDate":"2022-11-03"},{"lineNumber":277,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":278,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":279,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":280,"author":{"gitId":"prit3010"},"content":"    public void parseFileName_validValueWithWhitespace_returnsTrimmedDepartment() throws Exception {","lastModifiedDate":"2022-11-03"},{"lineNumber":281,"author":{"gitId":"prit3010"},"content":"        String whitespaceFileName \u003d WHITESPACE + VALID_FILENAME + WHITESPACE;","lastModifiedDate":"2022-11-03"},{"lineNumber":282,"author":{"gitId":"prit3010"},"content":"        String expectedFileName \u003d VALID_FILENAME;","lastModifiedDate":"2022-11-03"},{"lineNumber":283,"author":{"gitId":"prit3010"},"content":"        assertEquals(expectedFileName, ParserUtil.parseFileName(whitespaceFileName));","lastModifiedDate":"2022-11-03"},{"lineNumber":284,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kevinchangjk":63,"prit3010":37,"-":185}},{"path":"src/test/java/coydir/model/DatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"public class DatabaseTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    private final Database database \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"        assertEquals(Collections.emptyList(), database.getPersonList());","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.resetData(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"    public void resetData_withValidReadOnlyDatabase_replacesData() {","lastModifiedDate":"2022-10-13"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"        Database newData \u003d getTypicalDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"        database.resetData(newData);","lastModifiedDate":"2022-10-13"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"        assertEquals(newData, database);","lastModifiedDate":"2022-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"        DatabaseStub newData \u003d new DatabaseStub(newPersons);","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e database.resetData(newData));","lastModifiedDate":"2022-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e database.hasPerson(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"    public void hasPerson_personNotInDatabase_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"        assertFalse(database.hasPerson(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"    public void hasPerson_personInDatabase_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        database.addPerson(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"        assertTrue(database.hasPerson(ALICE));","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"    public void hasPerson_personWithSameIdentityFieldsInDatabase_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"        database.addPerson(ALICE);","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"        assertTrue(database.hasPerson(editedAlice));","lastModifiedDate":"2022-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e database.getPersonList().remove(0));","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"     * A stub ReadOnlyDatabase whose persons list can violate interface constraints.","lastModifiedDate":"2022-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"    private static class DatabaseStub implements ReadOnlyDatabase {","lastModifiedDate":"2022-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"prit3010"},"content":"        DatabaseStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"kevinchangjk":13,"prit3010":24,"-":65}},{"path":"src/test/java/coydir/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.PersonMatchesKeywordsPredicate;","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"import coydir.testutil.DatabaseBuilder;","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"        assertEquals(new Database(), new Database(modelManager.getDatabase()));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"    public void setDatabaseFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDatabaseFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"    public void setDatabaseFilePath_validPath_setsDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"        modelManager.setDatabaseFilePath(path);","lastModifiedDate":"2022-10-13"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"        assertEquals(path, modelManager.getDatabaseFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"    public void hasPerson_personNotInDatabase_returnsFalse() {","lastModifiedDate":"2022-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"prit3010"},"content":"    public void hasPerson_personInDatabase_returnsTrue() {","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"        Database database \u003d new DatabaseBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2022-10-13"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"        Database differentDatabase \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"prit3010"},"content":"        modelManager \u003d new ModelManager(database, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":103,"author":{"gitId":"prit3010"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(database, userPrefs);","lastModifiedDate":"2022-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"prit3010"},"content":"        // different database -\u003e returns false","lastModifiedDate":"2022-10-13"},{"lineNumber":116,"author":{"gitId":"prit3010"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentDatabase, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"        String keyName \u003d ALICE.getName().fullName;","lastModifiedDate":"2022-10-25"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"        modelManager.updateFilteredPersonList(new PersonMatchesKeywordsPredicate(keyName, \"\", \"\"));","lastModifiedDate":"2022-10-25"},{"lineNumber":121,"author":{"gitId":"prit3010"},"content":"        assertFalse(modelManager.equals(new ModelManager(database, userPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"prit3010"},"content":"        differentUserPrefs.setDatabaseFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"prit3010"},"content":"        assertFalse(modelManager.equals(new ModelManager(database, differentUserPrefs)));","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kevinchangjk":9,"prit3010":20,"-":102}},{"path":"src/test/java/coydir/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"    public void setDatabaseFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDatabaseFilePath(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kevinchangjk":2,"prit3010":2,"-":17}},{"path":"src/test/java/coydir/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kevinchangjk":2,"-":34}},{"path":"src/test/java/coydir/model/person/DepartmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-24"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-24"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class DepartmentTest {","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Department(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    public void constructor_invalidDepartment_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        String invalidDepartment \u003d \"Invalid\";","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Department(invalidDepartment));","lastModifiedDate":"2022-10-24"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    public void isValidDepartment() {","lastModifiedDate":"2022-10-24"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        // null department","lastModifiedDate":"2022-10-24"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e Department.isValidDepartment(null));","lastModifiedDate":"2022-10-24"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        // invalid departments","lastModifiedDate":"2022-10-24"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(Department.isValidDepartment(\"\")); // empty string","lastModifiedDate":"2022-10-24"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(Department.isValidDepartment(\" \")); // spaces only","lastModifiedDate":"2022-10-24"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(Department.isValidDepartment(\"Not a Department\")); // not in list","lastModifiedDate":"2022-10-24"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(Department.isValidDepartment(\"Logistics\")); // not in list","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        // valid departments","lastModifiedDate":"2022-10-24"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Administration\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Board of Directors\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Customer Service\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Finance\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"General Management\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Human Resources\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Information Technology\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Legal\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Marketing\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":43,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Operations\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":44,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Product Management\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Production\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Quality Assurance\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Research and Development\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":48,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Sales\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Department.isValidDepartment(\"Technology\"));","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-24"}],"authorContributionMap":{"kevinchangjk":51}},{"path":"src/test/java/coydir/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kevinchangjk":2,"-":66}},{"path":"src/test/java/coydir/model/person/EmployeeIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-05"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-05"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-05"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"// import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-04"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-05"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class EmployeeIdTest {","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EmployeeId(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    public void constructor_invalidEmployeeId_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        String invalidEmployeeId \u003d \"abc\";","lastModifiedDate":"2022-10-05"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EmployeeId(invalidEmployeeId));","lastModifiedDate":"2022-10-05"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    public void isValidEmployeeId() {","lastModifiedDate":"2022-10-05"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"        // null id","lastModifiedDate":"2022-10-05"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e EmployeeId.isValidEmployeeId(null));","lastModifiedDate":"2022-10-05"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        // invalid ids","lastModifiedDate":"2022-10-05"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(EmployeeId.isValidEmployeeId(\"\")); // empty string","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(EmployeeId.isValidEmployeeId(\" \")); // spaces only","lastModifiedDate":"2022-10-05"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(EmployeeId.isValidEmployeeId(\"phone\")); // non-numeric","lastModifiedDate":"2022-10-05"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(EmployeeId.isValidEmployeeId(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2022-10-05"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(EmployeeId.isValidEmployeeId(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        // valid ids TODO: Redo the tests","lastModifiedDate":"2022-11-04"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        // assertTrue(EmployeeId.isValidEmployeeId(\"9\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        // assertTrue(EmployeeId.isValidEmployeeId(\"911\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        // assertTrue(EmployeeId.isValidEmployeeId(\"93121534\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"        // assertTrue(EmployeeId.isValidEmployeeId(\"124293842033123\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-05"}],"authorContributionMap":{"kevinchangjk":40}},{"path":"src/test/java/coydir/model/person/LeaveTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.model.person;","lastModifiedDate":"2022-11-01"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-11-01"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-11-01"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-11-01"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-11-01"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-11-01"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-11-01"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"public class LeaveTest {","lastModifiedDate":"2022-11-01"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"    private Leave leave1 \u003d new Leave(\"02-01-2022\", \"05-01-2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"    private Leave leave2 \u003d new Leave(\"04-01-2022\", \"08-01-2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"    private Leave leave3 \u003d new Leave(\"01-03-2022\", \"31-03-2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"    private Leave leave4 \u003d new Leave(\"01-03-2022\", \"01-04-2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"    private Leave leave5 \u003d new Leave(\"01-01-2022\", \"01-01-2023\");","lastModifiedDate":"2022-11-01"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"    private Leave leave6 \u003d new Leave(\"01-01-2022\", \"31-12-2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"    private Leave leave7 \u003d new Leave(\"05-01-2022\", \"08-01-2022\");","lastModifiedDate":"2022-11-01"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Leave(null, null));","lastModifiedDate":"2022-11-01"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"    public void constructor_invalidLeave_throwsDateTimeParseException() {","lastModifiedDate":"2022-11-01"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"        String invalidStartDate \u003d \"\";","lastModifiedDate":"2022-11-01"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"        String invalidEndDate \u003d \"\";","lastModifiedDate":"2022-11-01"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new Leave(invalidStartDate, invalidEndDate));","lastModifiedDate":"2022-11-01"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    public void test_isValidLeave() {","lastModifiedDate":"2022-11-01"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"        //startDate and endDate null","lastModifiedDate":"2022-11-01"},{"lineNumber":36,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e Leave.isValidLeave(null, null));","lastModifiedDate":"2022-11-01"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"        //startDate or endDate null","lastModifiedDate":"2022-11-01"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e Leave.isValidLeave(null, \"12-12-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e Leave.isValidLeave(\"12-12-2000\", null));","lastModifiedDate":"2022-11-01"},{"lineNumber":41,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":42,"author":{"gitId":"prit3010"},"content":"        // blank Leave","lastModifiedDate":"2022-11-01"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"\", \"\")); // empty string","lastModifiedDate":"2022-11-01"},{"lineNumber":44,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\" \", \" \")); // spaces only","lastModifiedDate":"2022-11-01"},{"lineNumber":45,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"        //Start Date and/or End Date nonsense values","lastModifiedDate":"2022-11-01"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"iojfkd\", \"jdnjfsnsd\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"12-12-2000\", \"jdnjfsnsd\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":49,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"jdnjfsnsd\", \"12-12-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"        //Start Date and/or End Date in wrong format","lastModifiedDate":"2022-11-01"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"12/12/2000\", \"13/12/2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":53,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"2000-12-12\", \"2000-12-13\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"1-1-2000\", \"2-1-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"        //Start Date and End Date are valid (following the calendar)","lastModifiedDate":"2022-11-01"},{"lineNumber":57,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"30-04-2000\", \"32-04-2000\")); //day more than 31","lastModifiedDate":"2022-11-01"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"30-12-2000\", \"32-13-2000\")); //month more than 12","lastModifiedDate":"2022-11-01"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"30-12-2000\", \"32-12-3000\")); //year more than 3000","lastModifiedDate":"2022-11-01"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"30-04-2000\", \"31-04-2000\")); //31st April does not exist","lastModifiedDate":"2022-11-01"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"27-02-2001\", \"29-02-2001\")); //non-leap year feb","lastModifiedDate":"2022-11-01"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"        //Start Date later than End Date","lastModifiedDate":"2022-11-01"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"31-04-2000\", \"30-04-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":65,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"30-12-2000\", \"30-11-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":66,"author":{"gitId":"prit3010"},"content":"        assertFalse(Leave.isValidLeave(\"30-12-2000\", \"30-12-1999\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":67,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"        //Valid Leaves","lastModifiedDate":"2022-11-01"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"01-01-2000\", \"03-01-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"12-01-2000\", \"15-01-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":71,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"18-01-2000\", \"30-03-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":72,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"20-02-2000\", \"30-10-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"20-02-2000\", \"30-10-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":74,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"20-01-2000\", \"30-12-2000\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"30-12-1900\", \"30-12-2999\"));","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"01-01-2000\", \"01-01-2000\")); //same day leave","lastModifiedDate":"2022-11-01"},{"lineNumber":77,"author":{"gitId":"prit3010"},"content":"        assertTrue(Leave.isValidLeave(\"27-02-2016\", \"29-02-2016\")); //Leap Year feb","lastModifiedDate":"2022-11-01"},{"lineNumber":78,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"    public void test_getTotalDays() {","lastModifiedDate":"2022-11-01"},{"lineNumber":82,"author":{"gitId":"prit3010"},"content":"        assertEquals(4, leave1.getTotalDays());","lastModifiedDate":"2022-11-01"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"        assertEquals(5, leave2.getTotalDays());","lastModifiedDate":"2022-11-01"},{"lineNumber":84,"author":{"gitId":"prit3010"},"content":"        assertEquals(31, leave3.getTotalDays());","lastModifiedDate":"2022-11-01"},{"lineNumber":85,"author":{"gitId":"prit3010"},"content":"        assertEquals(32, leave4.getTotalDays());","lastModifiedDate":"2022-11-01"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"        assertEquals(366, leave5.getTotalDays());","lastModifiedDate":"2022-11-01"},{"lineNumber":87,"author":{"gitId":"prit3010"},"content":"        assertEquals(365, leave6.getTotalDays());","lastModifiedDate":"2022-11-01"},{"lineNumber":88,"author":{"gitId":"prit3010"},"content":"        assertEquals(4, leave7.getTotalDays());","lastModifiedDate":"2022-11-01"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":90,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":91,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-01"},{"lineNumber":92,"author":{"gitId":"prit3010"},"content":"    public void test_isOverlapping() {","lastModifiedDate":"2022-11-01"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave1.isOverlapping(leave2));","lastModifiedDate":"2022-11-01"},{"lineNumber":94,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave2.isOverlapping(leave1));","lastModifiedDate":"2022-11-01"},{"lineNumber":95,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave1.isOverlapping(leave6));","lastModifiedDate":"2022-11-01"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave6.isOverlapping(leave1));","lastModifiedDate":"2022-11-01"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave1.isOverlapping(leave1));","lastModifiedDate":"2022-11-01"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave1.isOverlapping(leave7));","lastModifiedDate":"2022-11-01"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave7.isOverlapping(leave1));","lastModifiedDate":"2022-11-01"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave5.isOverlapping(leave6));","lastModifiedDate":"2022-11-01"},{"lineNumber":101,"author":{"gitId":"prit3010"},"content":"        assertTrue(leave6.isOverlapping(leave5));","lastModifiedDate":"2022-11-01"},{"lineNumber":102,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":103,"author":{"gitId":"prit3010"},"content":"        assertFalse(leave3.isOverlapping(leave1));","lastModifiedDate":"2022-11-01"},{"lineNumber":104,"author":{"gitId":"prit3010"},"content":"        assertFalse(leave1.isOverlapping(leave3));","lastModifiedDate":"2022-11-01"},{"lineNumber":105,"author":{"gitId":"prit3010"},"content":"        assertFalse(leave3.isOverlapping(leave2));","lastModifiedDate":"2022-11-01"},{"lineNumber":106,"author":{"gitId":"prit3010"},"content":"        assertFalse(leave2.isOverlapping(leave3));","lastModifiedDate":"2022-11-01"},{"lineNumber":107,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-01"},{"lineNumber":108,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-11-01"}],"authorContributionMap":{"prit3010":108}},{"path":"src/test/java/coydir/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kevinchangjk":2,"-":38}},{"path":"src/test/java/coydir/model/person/PersonMatchesKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-26"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"public class PersonMatchesKeywordsPredicateTest {","lastModifiedDate":"2022-10-25"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    private PersonMatchesKeywordsPredicate preparePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-25"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        while (keywords.size() \u003c 3) {","lastModifiedDate":"2022-10-25"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"            keywords.add(\"\");","lastModifiedDate":"2022-10-25"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"        }","lastModifiedDate":"2022-10-25"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"        return new PersonMatchesKeywordsPredicate(keywords.get(0), keywords.get(1), keywords.get(2));","lastModifiedDate":"2022-10-25"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d new ArrayList\u003c\u003e(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d new ArrayList\u003c\u003e(Arrays.asList(\"first\", \"second\", \"\"));","lastModifiedDate":"2022-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate firstPredicate \u003d preparePredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate secondPredicate \u003d preparePredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate firstPredicateCopy \u003d preparePredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate predicate \u003d preparePredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2022-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"kevinchangjk"},"content":"        // One keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        predicate \u003d preparePredicate(new ArrayList\u003c\u003e(Collections.singletonList(\"Alice\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        predicate \u003d preparePredicate(new ArrayList\u003c\u003e(Arrays.asList(\"Alice\", \"Software Engineer\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\")","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"                    .withPosition(\"Software Engineer\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"        predicate \u003d preparePredicate(new ArrayList\u003c\u003e(Arrays.asList(\"aLIce\", \"SOftWAre EngINeeR\", \"teCHnoLogy\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\")","lastModifiedDate":"2022-10-25"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"                    .withPosition(\"Software Engineer\").withDepartment(\"Technology\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"        PersonMatchesKeywordsPredicate predicate \u003d preparePredicate(new ArrayList\u003c\u003e(Arrays.asList(\"Carol\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-25"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"        predicate \u003d preparePredicate(new ArrayList\u003c\u003e(Arrays.asList(\"Bob\", \"Intern\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Carol\")","lastModifiedDate":"2022-10-25"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"                    .withPosition(\"Intern\").build()));","lastModifiedDate":"2022-10-25"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        predicate \u003d preparePredicate(new ArrayList\u003c\u003e(Arrays.asList(\"12345\", \"alice@email.com\", \"Main Street\")));","lastModifiedDate":"2022-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kevinchangjk":35,"-":51}},{"path":"src/test/java/coydir/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"kevinchangjk"},"content":"                .withPosition(VALID_POSITION_BOB).withDepartment(VALID_DEPARTMENT_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"        // different position -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPosition(VALID_POSITION_BOB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"        // different department -\u003e returns false","lastModifiedDate":"2022-10-24"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withDepartment(VALID_DEPARTMENT_BOB).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2022-10-24"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kevinchangjk":22,"-":80}},{"path":"src/test/java/coydir/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"chao890"},"content":"        assertFalse(Phone.isValidPhone(\"*()\u0026*\")); // non-alphanumeric","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kevinchangjk":2,"chao890":1,"-":38}},{"path":"src/test/java/coydir/model/person/PositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-10-04"},{"lineNumber":2,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-04"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-04"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-04"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-04"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"public class PositionTest {","lastModifiedDate":"2022-10-04"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Position(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"    public void constructor_invalidPosition_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"        String invalidPosition \u003d \"\";","lastModifiedDate":"2022-10-04"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Position(invalidPosition));","lastModifiedDate":"2022-10-04"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"    public void isValidPosition() {","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"chao890"},"content":"        // null position","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(NullPointerException.class, () -\u003e Position.isValidPosition(null));","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":27,"author":{"gitId":"chao890"},"content":"        // invalid positions","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(Position.isValidPosition(\"\")); // empty string","lastModifiedDate":"2022-10-04"},{"lineNumber":29,"author":{"gitId":"kevinchangjk"},"content":"        assertFalse(Position.isValidPosition(\" \")); // spaces only","lastModifiedDate":"2022-10-04"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"chao890"},"content":"        // valid positions","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Position.isValidPosition(\"Chief Executive Officer\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Position.isValidPosition(\"General\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Position.isValidPosition(\"UI/UX Designer\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"        assertTrue(Position.isValidPosition(\"Team 3 Lead\"));","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"}","lastModifiedDate":"2022-10-04"}],"authorContributionMap":{"kevinchangjk":34,"chao890":3}},{"path":"src/test/java/coydir/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.person;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.PersonBuilder;","lastModifiedDate":"2022-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kevinchangjk":9,"-":161}},{"path":"src/test/java/coydir/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.model.tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"kevinchangjk":2,"-":24}},{"path":"src/test/java/coydir/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import static coydir.storage.JsonAdaptedPerson.LEAVES_FIELD;","lastModifiedDate":"2022-11-03"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.PRITTAM;","lastModifiedDate":"2022-10-25"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-24"},{"lineNumber":19,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":20,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-05"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":22,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":24,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.TestUtil;","lastModifiedDate":"2022-11-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"kevinchangjk"},"content":"    private static final String INVALID_EMPLOYEE_ID \u003d \"abc\";","lastModifiedDate":"2022-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kevinchangjk"},"content":"    private static final String INVALID_POSITION \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":31,"author":{"gitId":"kevinchangjk"},"content":"    private static final String INVALID_DEPARTMENT \u003d \"Invalid\";","lastModifiedDate":"2022-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kevinchangjk"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2022-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"    private static final String INVALID_LEAVE_NUMBER \u003d \"a\";","lastModifiedDate":"2022-11-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"    private static final String VALID_POSITION \u003d BENSON.getPosition().toString();","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"    private static final String VALID_DEPARTMENT \u003d BENSON.getDepartment().toString();","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"    private static final String VALID_LEAVE_NUMBER \u003d \"14\";","lastModifiedDate":"2022-11-03"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"    private static final List\u003cJsonAdaptedLeave\u003e VALID_LEAVE \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"Kok-je"},"content":"    private static final String VALID_RATING \u003d BENSON.getRating().toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":49,"author":{"gitId":"Kok-je"},"content":"    private static final List\u003cJsonAdaptedRating\u003e VALID_PERFORMANCEHISTORY \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(Integer.parseInt(BENSON.getEmployeeId().value) + 1);","lastModifiedDate":"2022-11-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-10-25"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"    public void toModelType_validPersonDetailsNaValues_returnsPerson() throws IllegalValueException {","lastModifiedDate":"2022-10-25"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(Integer.parseInt(PRITTAM.getEmployeeId().value) + 1);","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(PRITTAM);","lastModifiedDate":"2022-10-25"},{"lineNumber":62,"author":{"gitId":"prit3010"},"content":"        assertEquals(PRITTAM, person.toModelType());","lastModifiedDate":"2022-10-25"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-25"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"                INVALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"                VALID_DEPARTMENT, VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS, VALID_LEAVE,","lastModifiedDate":"2022-11-03"},{"lineNumber":70,"author":{"gitId":"Kok-je"},"content":"                VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"                null, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_DEPARTMENT,","lastModifiedDate":"2022-11-02"},{"lineNumber":79,"author":{"gitId":"prit3010"},"content":"                VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-03"},{"lineNumber":80,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_stringEmployeeId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-02"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, INVALID_EMPLOYEE_ID, VALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_DEPARTMENT,","lastModifiedDate":"2022-10-24"},{"lineNumber":89,"author":{"gitId":"prit3010"},"content":"                VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-03"},{"lineNumber":90,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d EmployeeId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-05"},{"lineNumber":92,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":94,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":95,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-05"},{"lineNumber":96,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_nullEmployeeId_throwsIllegalValueException() {","lastModifiedDate":"2022-10-05"},{"lineNumber":97,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-05"},{"lineNumber":98,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, null, VALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_DEPARTMENT, VALID_ADDRESS,","lastModifiedDate":"2022-10-24"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-03"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":101,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EmployeeId.class.getSimpleName());","lastModifiedDate":"2022-10-05"},{"lineNumber":102,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-05"},{"lineNumber":103,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":104,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":105,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-11-02"},{"lineNumber":106,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_invalidEmployeeId_throwsIllegalValueException() {","lastModifiedDate":"2022-11-02"},{"lineNumber":107,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-11-02"},{"lineNumber":108,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, String.valueOf(TestUtil.getMaxEmployeeId()), VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-11-04"},{"lineNumber":109,"author":{"gitId":"kevinchangjk"},"content":"                VALID_POSITION, VALID_DEPARTMENT, VALID_ADDRESS, \"14\", \"14\", VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":110,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":111,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d EmployeeId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-11-02"},{"lineNumber":112,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-11-02"},{"lineNumber":113,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":114,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":118,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2022-11-04"},{"lineNumber":119,"author":{"gitId":"kevinchangjk"},"content":"                VALID_POSITION, VALID_DEPARTMENT, VALID_ADDRESS, VALID_LEAVE_NUMBER,","lastModifiedDate":"2022-11-04"},{"lineNumber":120,"author":{"gitId":"kevinchangjk"},"content":"                VALID_LEAVE_NUMBER, VALID_TAGS, VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":128,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), null, VALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":129,"author":{"gitId":"kevinchangjk"},"content":"                VALID_DEPARTMENT, VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":130,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":138,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, INVALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":139,"author":{"gitId":"kevinchangjk"},"content":"                VALID_DEPARTMENT, VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":140,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, null, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"                VALID_DEPARTMENT, VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":150,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_invalidPosition_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":157,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":158,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, INVALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":159,"author":{"gitId":"kevinchangjk"},"content":"                VALID_DEPARTMENT, VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":160,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":161,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d Position.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-04"},{"lineNumber":162,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":163,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":164,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":165,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-04"},{"lineNumber":166,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_nullPosition_throwsIllegalValueException() {","lastModifiedDate":"2022-10-04"},{"lineNumber":167,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":168,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, null, VALID_DEPARTMENT,","lastModifiedDate":"2022-11-04"},{"lineNumber":169,"author":{"gitId":"kevinchangjk"},"content":"                VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":170,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":171,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Position.class.getSimpleName());","lastModifiedDate":"2022-10-04"},{"lineNumber":172,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-04"},{"lineNumber":173,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":174,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_invalidDepartment_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":177,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-24"},{"lineNumber":178,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":179,"author":{"gitId":"kevinchangjk"},"content":"                INVALID_DEPARTMENT, VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":180,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":181,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d Department.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-24"},{"lineNumber":182,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":183,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":184,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":185,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":186,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_nullDepartment_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":187,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":188,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION, null,","lastModifiedDate":"2022-11-04"},{"lineNumber":189,"author":{"gitId":"kevinchangjk"},"content":"                VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":190,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":191,"author":{"gitId":"kevinchangjk"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Department.class.getSimpleName());","lastModifiedDate":"2022-10-24"},{"lineNumber":192,"author":{"gitId":"kevinchangjk"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-10-24"},{"lineNumber":193,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":194,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":195,"author":{"gitId":"kevinchangjk"},"content":"    @Test","lastModifiedDate":"2022-10-24"},{"lineNumber":196,"author":{"gitId":"kevinchangjk"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2022-10-24"},{"lineNumber":197,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-24"},{"lineNumber":198,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":199,"author":{"gitId":"kevinchangjk"},"content":"                VALID_DEPARTMENT, INVALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":200,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":207,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":208,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":209,"author":{"gitId":"kevinchangjk"},"content":"                VALID_DEPARTMENT, null, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-04"},{"lineNumber":210,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"kevinchangjk"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-10-04"},{"lineNumber":220,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_DEPARTMENT,","lastModifiedDate":"2022-11-02"},{"lineNumber":221,"author":{"gitId":"prit3010"},"content":"                VALID_ADDRESS, VALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, invalidTags,","lastModifiedDate":"2022-11-03"},{"lineNumber":222,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":225,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":226,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":227,"author":{"gitId":"prit3010"},"content":"    public void toModelType_invalidLeave_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":228,"author":{"gitId":"prit3010"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-11-03"},{"lineNumber":229,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION, VALID_DEPARTMENT,","lastModifiedDate":"2022-11-04"},{"lineNumber":230,"author":{"gitId":"prit3010"},"content":"                VALID_ADDRESS, INVALID_LEAVE_NUMBER, VALID_LEAVE_NUMBER, VALID_TAGS,","lastModifiedDate":"2022-11-03"},{"lineNumber":231,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":232,"author":{"gitId":"prit3010"},"content":"        String expectedMessage \u003d String.format(\"%s is not a valid integer\", INVALID_LEAVE_NUMBER);","lastModifiedDate":"2022-11-03"},{"lineNumber":233,"author":{"gitId":"prit3010"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":234,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":235,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":236,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":237,"author":{"gitId":"prit3010"},"content":"    public void toModelType_nullLeave_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":238,"author":{"gitId":"prit3010"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-11-03"},{"lineNumber":239,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":240,"author":{"gitId":"prit3010"},"content":"                VALID_DEPARTMENT, VALID_ADDRESS, null, null, VALID_TAGS,","lastModifiedDate":"2022-11-03"},{"lineNumber":241,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":242,"author":{"gitId":"prit3010"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LEAVES_FIELD);","lastModifiedDate":"2022-11-03"},{"lineNumber":243,"author":{"gitId":"prit3010"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":244,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":245,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-03"},{"lineNumber":246,"author":{"gitId":"prit3010"},"content":"    @Test","lastModifiedDate":"2022-11-03"},{"lineNumber":247,"author":{"gitId":"prit3010"},"content":"    public void toModelType_leaveLeftLargerThanTotalLeave_throwsIllegalValueException() {","lastModifiedDate":"2022-11-03"},{"lineNumber":248,"author":{"gitId":"prit3010"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2022-11-03"},{"lineNumber":249,"author":{"gitId":"kevinchangjk"},"content":"                VALID_NAME, TestUtil.getNextEmployeeId(), VALID_PHONE, VALID_EMAIL, VALID_POSITION,","lastModifiedDate":"2022-11-04"},{"lineNumber":250,"author":{"gitId":"prit3010"},"content":"                VALID_DEPARTMENT, VALID_ADDRESS, \"10\", \"50\", VALID_TAGS,","lastModifiedDate":"2022-11-03"},{"lineNumber":251,"author":{"gitId":"prit3010"},"content":"                VALID_LEAVE, VALID_RATING, VALID_PERFORMANCEHISTORY);","lastModifiedDate":"2022-11-03"},{"lineNumber":252,"author":{"gitId":"prit3010"},"content":"        String expectedMessage \u003d \"Leave left cannot be more than total leave\";","lastModifiedDate":"2022-11-03"},{"lineNumber":253,"author":{"gitId":"prit3010"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2022-11-03"},{"lineNumber":254,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Kok-je":3,"kevinchangjk":112,"prit3010":57,"-":83}},{"path":"src/test/java/coydir/storage/JsonDatabaseStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.HOON;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.TypicalPersons.IDA;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.TestUtil;","lastModifiedDate":"2022-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"public class JsonDatabaseStorageTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDatabaseStorageTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"    public void readDatabase_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDatabase(null));","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"    private java.util.Optional\u003cReadOnlyDatabase\u003e readDatabase(String filePath) throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":35,"author":{"gitId":"prit3010"},"content":"        return new JsonDatabaseStorage(Paths.get(filePath)).readDatabase(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"        assertFalse(readDatabase(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"prit3010"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDatabase(\"notJsonFormatDatabase.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"    public void readDatabase_invalidPersonDatabase_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDatabase(\"invalidPersonDatabase.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"prit3010"},"content":"    public void readDatabase_invalidAndValidPersonDatabase_throwDataConversionException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"        assertThrows(DataConversionException.class, () -\u003e readDatabase(\"invalidAndValidPersonDatabase.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"prit3010"},"content":"    public void readAndSaveDatabase_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":66,"author":{"gitId":"prit3010"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDatabase.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":67,"author":{"gitId":"prit3010"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"        int numOfTypicalPersons \u003d original.getPersonList().size();","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        JsonDatabaseStorage jsonDatabaseStorage \u003d new JsonDatabaseStorage(filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.setMaxEmployeeId(numOfTypicalPersons + 1);","lastModifiedDate":"2022-11-04"},{"lineNumber":73,"author":{"gitId":"prit3010"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(1);","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"prit3010"},"content":"        ReadOnlyDatabase readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":76,"author":{"gitId":"prit3010"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        original.addPerson(HOON); // Employee ID: 8","lastModifiedDate":"2022-11-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"        int hoonId \u003d Integer.parseInt(HOON.getEmployeeId().value);","lastModifiedDate":"2022-11-04"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.setMaxEmployeeId(hoonId + 1);","lastModifiedDate":"2022-11-04"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"        jsonDatabaseStorage.saveDatabase(original, filePath);","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(1);","lastModifiedDate":"2022-11-02"},{"lineNumber":85,"author":{"gitId":"prit3010"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase(filePath).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":86,"author":{"gitId":"prit3010"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"        original.addPerson(IDA); // Employee ID \u003d 9","lastModifiedDate":"2022-11-04"},{"lineNumber":90,"author":{"gitId":"kevinchangjk"},"content":"        int idaId \u003d Integer.parseInt(IDA.getEmployeeId().value);","lastModifiedDate":"2022-11-04"},{"lineNumber":91,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.setMaxEmployeeId(idaId + 1);","lastModifiedDate":"2022-11-04"},{"lineNumber":92,"author":{"gitId":"prit3010"},"content":"        jsonDatabaseStorage.saveDatabase(original); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":93,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(1);","lastModifiedDate":"2022-11-02"},{"lineNumber":94,"author":{"gitId":"prit3010"},"content":"        readBack \u003d jsonDatabaseStorage.readDatabase().get(); // file path not specified","lastModifiedDate":"2022-10-13"},{"lineNumber":95,"author":{"gitId":"prit3010"},"content":"        assertEquals(original, new Database(readBack));","lastModifiedDate":"2022-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"    public void saveDatabase_nullDatabase_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDatabase(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"prit3010"},"content":"     * Saves {@code database} at the specified {@code filePath}.","lastModifiedDate":"2022-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"prit3010"},"content":"    private void saveDatabase(ReadOnlyDatabase database, String filePath) {","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"prit3010"},"content":"            new JsonDatabaseStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"prit3010"},"content":"                    .saveDatabase(database, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"prit3010"},"content":"    public void saveDatabase_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-13"},{"lineNumber":117,"author":{"gitId":"prit3010"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDatabase(new Database(), null));","lastModifiedDate":"2022-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kevinchangjk":20,"prit3010":36,"-":63}},{"path":"src/test/java/coydir/storage/JsonSerializableDatabaseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.util.JsonUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.TestUtil;","lastModifiedDate":"2022-11-04"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.TypicalPersons;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"public class JsonSerializableDatabaseTest {","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDatabaseTest\");","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsDatabase.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonDatabase.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonDatabase.json\");","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"        int numOfTypicalPersons \u003d TypicalPersons.getTypicalPersons().size();","lastModifiedDate":"2022-11-04"},{"lineNumber":27,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(1);","lastModifiedDate":"2022-11-04"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"        Database databaseFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"        Database typicalPersonsDatabase \u003d TypicalPersons.getTypicalDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"        assertEquals(databaseFromFile, typicalPersonsDatabase);","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(1);","lastModifiedDate":"2022-11-04"},{"lineNumber":38,"author":{"gitId":"prit3010"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(1);","lastModifiedDate":"2022-11-04"},{"lineNumber":46,"author":{"gitId":"prit3010"},"content":"        JsonSerializableDatabase dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2022-10-13"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"                JsonSerializableDatabase.class).get();","lastModifiedDate":"2022-10-13"},{"lineNumber":48,"author":{"gitId":"prit3010"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDatabase.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2022-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kevinchangjk":11,"prit3010":16,"-":25}},{"path":"src/test/java/coydir/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"prit3010"},"content":"        userPrefs.setDatabaseFilePath(Paths.get(\"database.json\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kevinchangjk":5,"prit3010":1,"-":117}},{"path":"src/test/java/coydir/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.storage;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import static coydir.testutil.TypicalPersons.getTypicalDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.GuiSettings;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"import coydir.model.ReadOnlyDatabase;","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.UserPrefs;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.testutil.TestUtil;","lastModifiedDate":"2022-11-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"        JsonDatabaseStorage databaseStorage \u003d new JsonDatabaseStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"        storageManager \u003d new StorageManager(databaseStorage, userPrefsStorage);","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"prit3010"},"content":"    public void databaseReadSave() throws Exception {","lastModifiedDate":"2022-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"prit3010"},"content":"         * {@link JsonDatabaseStorage} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":56,"author":{"gitId":"prit3010"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDatabaseStorageTest} class.","lastModifiedDate":"2022-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"        Database original \u003d getTypicalDatabase();","lastModifiedDate":"2022-10-13"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"        int numOfPersons \u003d original.getPersonList().size();","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.setMaxEmployeeId(numOfPersons + 1);","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"prit3010"},"content":"        storageManager.saveDatabase(original);","lastModifiedDate":"2022-10-13"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"        TestUtil.restartEmployeeId(1);","lastModifiedDate":"2022-11-04"},{"lineNumber":63,"author":{"gitId":"prit3010"},"content":"        ReadOnlyDatabase retrieved \u003d storageManager.readDatabase().get();","lastModifiedDate":"2022-10-13"},{"lineNumber":64,"author":{"gitId":"prit3010"},"content":"        assertEquals(original, new Database(retrieved));","lastModifiedDate":"2022-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"prit3010"},"content":"    public void getDatabaseFilePath() {","lastModifiedDate":"2022-10-13"},{"lineNumber":69,"author":{"gitId":"prit3010"},"content":"        assertNotNull(storageManager.getDatabaseFilePath());","lastModifiedDate":"2022-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":7,"prit3010":14,"-":51}},{"path":"src/test/java/coydir/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"kevinchangjk":1,"-":33}},{"path":"src/test/java/coydir/testutil/DatabaseBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"prit3010"},"content":"package coydir.testutil;","lastModifiedDate":"2022-10-13"},{"lineNumber":2,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":3,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":4,"author":{"gitId":"prit3010"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-10-13"},{"lineNumber":5,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":6,"author":{"gitId":"prit3010"},"content":"/**","lastModifiedDate":"2022-10-13"},{"lineNumber":7,"author":{"gitId":"prit3010"},"content":" * A utility class to help with building database objects.","lastModifiedDate":"2022-10-13"},{"lineNumber":8,"author":{"gitId":"prit3010"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-13"},{"lineNumber":9,"author":{"gitId":"prit3010"},"content":" *     {@code Database ab \u003d new DatabaseBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-13"},{"lineNumber":10,"author":{"gitId":"prit3010"},"content":" */","lastModifiedDate":"2022-10-13"},{"lineNumber":11,"author":{"gitId":"prit3010"},"content":"public class DatabaseBuilder {","lastModifiedDate":"2022-10-13"},{"lineNumber":12,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":13,"author":{"gitId":"prit3010"},"content":"    private Database database;","lastModifiedDate":"2022-10-13"},{"lineNumber":14,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":15,"author":{"gitId":"prit3010"},"content":"    public DatabaseBuilder() {","lastModifiedDate":"2022-10-13"},{"lineNumber":16,"author":{"gitId":"prit3010"},"content":"        database \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":17,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":18,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":19,"author":{"gitId":"prit3010"},"content":"    public DatabaseBuilder(Database database) {","lastModifiedDate":"2022-10-13"},{"lineNumber":20,"author":{"gitId":"prit3010"},"content":"        this.database \u003d database;","lastModifiedDate":"2022-10-13"},{"lineNumber":21,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":24,"author":{"gitId":"prit3010"},"content":"     * Adds a new {@code Person} to the {@code database} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":25,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":26,"author":{"gitId":"prit3010"},"content":"    public DatabaseBuilder withPerson(Person person) {","lastModifiedDate":"2022-10-13"},{"lineNumber":27,"author":{"gitId":"prit3010"},"content":"        database.addPerson(person);","lastModifiedDate":"2022-10-13"},{"lineNumber":28,"author":{"gitId":"prit3010"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":30,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":31,"author":{"gitId":"prit3010"},"content":"    public Database build() {","lastModifiedDate":"2022-10-13"},{"lineNumber":32,"author":{"gitId":"prit3010"},"content":"        return database;","lastModifiedDate":"2022-10-13"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":34,"author":{"gitId":"prit3010"},"content":"}","lastModifiedDate":"2022-10-13"}],"authorContributionMap":{"prit3010":34}},{"path":"src/test/java/coydir/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-24"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        descriptor.setPosition(person.getPosition());","lastModifiedDate":"2022-10-04"},{"lineNumber":41,"author":{"gitId":"kevinchangjk"},"content":"        descriptor.setDepartment(person.getDepartment());","lastModifiedDate":"2022-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"prit3010"},"content":"        descriptor.setLeaves(person.getTotalNumberOfLeaves());","lastModifiedDate":"2022-11-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"     * Sets the {@code Position} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    public EditPersonDescriptorBuilder withPosition(String position) {","lastModifiedDate":"2022-10-04"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"        descriptor.setPosition(new Position(position));","lastModifiedDate":"2022-10-04"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"     * Sets the {@code Department} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":81,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"    public EditPersonDescriptorBuilder withDepartment(String department) {","lastModifiedDate":"2022-10-24"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"        descriptor.setDepartment(new Department(department));","lastModifiedDate":"2022-10-24"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"     * Sets the {@code Leave} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2022-11-02"},{"lineNumber":97,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":98,"author":{"gitId":"prit3010"},"content":"    public EditPersonDescriptorBuilder withLeave(int leaves) {","lastModifiedDate":"2022-11-02"},{"lineNumber":99,"author":{"gitId":"prit3010"},"content":"        descriptor.setLeaves(leaves);","lastModifiedDate":"2022-11-02"},{"lineNumber":100,"author":{"gitId":"prit3010"},"content":"        return this;","lastModifiedDate":"2022-11-02"},{"lineNumber":101,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":102,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kevinchangjk":28,"prit3010":9,"-":79}},{"path":"src/test/java/coydir/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Address;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Department;","lastModifiedDate":"2022-10-24"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Email;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-05"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Name;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Phone;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Position;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"Kok-je"},"content":"import coydir.model.person.Rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.util.SampleDataUtil;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"kevinchangjk"},"content":"    public static final String DEFAULT_POSITION \u003d \"Software Engineer\";","lastModifiedDate":"2022-10-04"},{"lineNumber":26,"author":{"gitId":"kevinchangjk"},"content":"    public static final String DEFAULT_DEPARTMENT \u003d \"Information Technology\";","lastModifiedDate":"2022-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"prit3010"},"content":"    public static final int DEFAULT_LEAVE \u003d 14;","lastModifiedDate":"2022-11-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"    private EmployeeId employeeId;","lastModifiedDate":"2022-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"kevinchangjk"},"content":"    private Position position;","lastModifiedDate":"2022-10-04"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"    private Department department;","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"Kok-je"},"content":"    private Rating rating;","lastModifiedDate":"2022-10-26"},{"lineNumber":39,"author":{"gitId":"prit3010"},"content":"    private int totalLeave;","lastModifiedDate":"2022-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"kevinchangjk"},"content":"        employeeId \u003d new EmployeeId();","lastModifiedDate":"2022-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"kevinchangjk"},"content":"        position \u003d new Position(DEFAULT_POSITION);","lastModifiedDate":"2022-10-04"},{"lineNumber":51,"author":{"gitId":"kevinchangjk"},"content":"        department \u003d new Department(DEFAULT_DEPARTMENT);","lastModifiedDate":"2022-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"kevinchangjk"},"content":"        rating \u003d Rating.getNullRating();","lastModifiedDate":"2022-10-31"},{"lineNumber":54,"author":{"gitId":"prit3010"},"content":"        totalLeave \u003d DEFAULT_LEAVE;","lastModifiedDate":"2022-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"        employeeId \u003d personToCopy.getEmployeeId();","lastModifiedDate":"2022-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        position \u003d personToCopy.getPosition();","lastModifiedDate":"2022-10-04"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"        department \u003d personToCopy.getDepartment();","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"Kok-je"},"content":"        rating \u003d personToCopy.getRating();","lastModifiedDate":"2022-10-26"},{"lineNumber":70,"author":{"gitId":"prit3010"},"content":"        totalLeave \u003d personToCopy.getTotalNumberOfLeaves();","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-05"},{"lineNumber":83,"author":{"gitId":"kevinchangjk"},"content":"     * Sets the {@code EmployeeId} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-05"},{"lineNumber":84,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-05"},{"lineNumber":85,"author":{"gitId":"kevinchangjk"},"content":"    public PersonBuilder withEmployeeId(String employeeId) {","lastModifiedDate":"2022-10-05"},{"lineNumber":86,"author":{"gitId":"kevinchangjk"},"content":"        this.employeeId \u003d new EmployeeId(employeeId);","lastModifiedDate":"2022-10-05"},{"lineNumber":87,"author":{"gitId":"kevinchangjk"},"content":"        return this;","lastModifiedDate":"2022-10-05"},{"lineNumber":88,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-05"},{"lineNumber":89,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":107,"author":{"gitId":"Kok-je"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":108,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":109,"author":{"gitId":"Kok-je"},"content":"    public PersonBuilder withEmptyAddress() {","lastModifiedDate":"2022-10-13"},{"lineNumber":110,"author":{"gitId":"Kok-je"},"content":"        this.address \u003d new Address();","lastModifiedDate":"2022-10-13"},{"lineNumber":111,"author":{"gitId":"Kok-je"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":112,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":113,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":123,"author":{"gitId":"Kok-je"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":124,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":125,"author":{"gitId":"Kok-je"},"content":"    public PersonBuilder withEmptyPhone() {","lastModifiedDate":"2022-10-13"},{"lineNumber":126,"author":{"gitId":"Kok-je"},"content":"        this.phone \u003d new Phone();","lastModifiedDate":"2022-10-13"},{"lineNumber":127,"author":{"gitId":"Kok-je"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":128,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":129,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-13"},{"lineNumber":139,"author":{"gitId":"Kok-je"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-13"},{"lineNumber":140,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-13"},{"lineNumber":141,"author":{"gitId":"Kok-je"},"content":"    public PersonBuilder withEmptyEmail() {","lastModifiedDate":"2022-10-13"},{"lineNumber":142,"author":{"gitId":"Kok-je"},"content":"        this.email \u003d new Email();","lastModifiedDate":"2022-10-13"},{"lineNumber":143,"author":{"gitId":"Kok-je"},"content":"        return this;","lastModifiedDate":"2022-10-13"},{"lineNumber":144,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-13"},{"lineNumber":145,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-13"},{"lineNumber":146,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-04"},{"lineNumber":147,"author":{"gitId":"kevinchangjk"},"content":"     * Sets the {@code Position} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-04"},{"lineNumber":148,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-04"},{"lineNumber":149,"author":{"gitId":"kevinchangjk"},"content":"    public PersonBuilder withPosition(String position) {","lastModifiedDate":"2022-10-04"},{"lineNumber":150,"author":{"gitId":"kevinchangjk"},"content":"        this.position \u003d new Position(position);","lastModifiedDate":"2022-10-04"},{"lineNumber":151,"author":{"gitId":"kevinchangjk"},"content":"        return this;","lastModifiedDate":"2022-10-04"},{"lineNumber":152,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-04"},{"lineNumber":153,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-04"},{"lineNumber":154,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-24"},{"lineNumber":155,"author":{"gitId":"kevinchangjk"},"content":"     * Sets the {@code Department} of the {@code Person} that we are building.","lastModifiedDate":"2022-10-24"},{"lineNumber":156,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-24"},{"lineNumber":157,"author":{"gitId":"kevinchangjk"},"content":"    public PersonBuilder withDepartment(String department) {","lastModifiedDate":"2022-10-24"},{"lineNumber":158,"author":{"gitId":"kevinchangjk"},"content":"        this.department \u003d new Department(department);","lastModifiedDate":"2022-10-24"},{"lineNumber":159,"author":{"gitId":"kevinchangjk"},"content":"        return this;","lastModifiedDate":"2022-10-24"},{"lineNumber":160,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-24"},{"lineNumber":161,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-24"},{"lineNumber":162,"author":{"gitId":"Kok-je"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":163,"author":{"gitId":"prit3010"},"content":"     * Sets the {@code Rating} of the {@code Person} that we are building.","lastModifiedDate":"2022-11-02"},{"lineNumber":164,"author":{"gitId":"Kok-je"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":165,"author":{"gitId":"Kok-je"},"content":"    public PersonBuilder withRating(String rating) {","lastModifiedDate":"2022-10-26"},{"lineNumber":166,"author":{"gitId":"Kok-je"},"content":"        this.rating \u003d new Rating(rating);","lastModifiedDate":"2022-10-26"},{"lineNumber":167,"author":{"gitId":"Kok-je"},"content":"        return this;","lastModifiedDate":"2022-10-26"},{"lineNumber":168,"author":{"gitId":"Kok-je"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":169,"author":{"gitId":"Kok-je"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":170,"author":{"gitId":"prit3010"},"content":"    /**","lastModifiedDate":"2022-11-02"},{"lineNumber":171,"author":{"gitId":"prit3010"},"content":"     * Sets the {@code Leave} of the {@code Person} that we are building.","lastModifiedDate":"2022-11-02"},{"lineNumber":172,"author":{"gitId":"prit3010"},"content":"     */","lastModifiedDate":"2022-11-02"},{"lineNumber":173,"author":{"gitId":"prit3010"},"content":"    public PersonBuilder withTotalLeave(int totalLeave) {","lastModifiedDate":"2022-11-02"},{"lineNumber":174,"author":{"gitId":"prit3010"},"content":"        this.totalLeave \u003d totalLeave;","lastModifiedDate":"2022-11-02"},{"lineNumber":175,"author":{"gitId":"prit3010"},"content":"        return this;","lastModifiedDate":"2022-11-02"},{"lineNumber":176,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":177,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":179,"author":{"gitId":"prit3010"},"content":"        return new Person(name, employeeId, phone, email, position, department, address, tags, totalLeave, rating);","lastModifiedDate":"2022-11-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Kok-je":34,"kevinchangjk":47,"prit3010":14,"-":87}},{"path":"src/test/java/coydir/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_DEPARTMENT;","lastModifiedDate":"2022-10-24"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2022-09-29"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2022-09-29"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_POSITION;","lastModifiedDate":"2022-10-04"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import java.util.List;","lastModifiedDate":"2022-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.AddCommand;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import coydir.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.tag.Tag;","lastModifiedDate":"2022-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"        sb.append(PREFIX_POSITION + person.getPosition().value + \" \");","lastModifiedDate":"2022-10-04"},{"lineNumber":40,"author":{"gitId":"kevinchangjk"},"content":"        sb.append(PREFIX_DEPARTMENT + person.getDepartment().value + \" \");","lastModifiedDate":"2022-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"        descriptor.getPosition().ifPresent(position -\u003e sb.append(PREFIX_POSITION).append(position.value).append(\" \"));","lastModifiedDate":"2022-10-04"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"        descriptor.getDepartment().ifPresent(","lastModifiedDate":"2022-10-24"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"                department -\u003e sb.append(PREFIX_DEPARTMENT).append(department.value).append(\" \"));","lastModifiedDate":"2022-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-10-26"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"    /**","lastModifiedDate":"2022-10-26"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"     * Returns the part of command string for the given keywords for the {@code FindCommand}.","lastModifiedDate":"2022-10-26"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"     */","lastModifiedDate":"2022-10-26"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"    public static String getFindCommand(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-26"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-26"},{"lineNumber":76,"author":{"gitId":"kevinchangjk"},"content":"        sb.append(String.format(\"n/%s \", keywords.get(0)));","lastModifiedDate":"2022-10-26"},{"lineNumber":77,"author":{"gitId":"kevinchangjk"},"content":"        sb.append(String.format(\"j/%s \", keywords.get(1)));","lastModifiedDate":"2022-10-26"},{"lineNumber":78,"author":{"gitId":"kevinchangjk"},"content":"        sb.append(String.format(\"d/%s \", keywords.get(2)));","lastModifiedDate":"2022-10-26"},{"lineNumber":79,"author":{"gitId":"kevinchangjk"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-26"},{"lineNumber":80,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kevinchangjk":29,"-":52}},{"path":"src/test/java/coydir/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":1,"-":71}},{"path":"src/test/java/coydir/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.Model;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-11-02"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"    public static int getMaxEmployeeId() {","lastModifiedDate":"2022-11-04"},{"lineNumber":58,"author":{"gitId":"kevinchangjk"},"content":"        return EmployeeId.getCount();","lastModifiedDate":"2022-11-04"},{"lineNumber":59,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-04"},{"lineNumber":60,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-04"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"    public static void setMaxEmployeeId(int count) {","lastModifiedDate":"2022-11-02"},{"lineNumber":62,"author":{"gitId":"kevinchangjk"},"content":"        EmployeeId.setCount(count);","lastModifiedDate":"2022-11-02"},{"lineNumber":63,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":64,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"    public static void restartEmployeeId(int count) {","lastModifiedDate":"2022-11-02"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"        EmployeeId.restart(count);","lastModifiedDate":"2022-11-04"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"    public static String getNextEmployeeId() {","lastModifiedDate":"2022-11-02"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"        int count \u003d EmployeeId.getCount();","lastModifiedDate":"2022-11-02"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"        setMaxEmployeeId(count + 1);","lastModifiedDate":"2022-11-02"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"        return String.valueOf(count);","lastModifiedDate":"2022-11-02"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"    }","lastModifiedDate":"2022-11-02"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kevinchangjk":24,"-":51}},{"path":"src/test/java/coydir/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import coydir.commons.core.index.Index;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"chao890"},"content":"import coydir.model.person.EmployeeId;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"chao890"},"content":"    public static final EmployeeId ID_FIRST_EMPLOYEE \u003d new EmployeeId(\"1\");","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"chao890"},"content":"    public static final EmployeeId ID_SECOND_EMPLOYEE \u003d new EmployeeId(\"2\");","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kevinchangjk":2,"chao890":3,"-":10}},{"path":"src/test/java/coydir/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.testutil;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":5,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_DEPARTMENT_AMY;","lastModifiedDate":"2022-10-24"},{"lineNumber":6,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_DEPARTMENT_BOB;","lastModifiedDate":"2022-10-24"},{"lineNumber":7,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":8,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":9,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":10,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":11,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-09-29"},{"lineNumber":12,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-09-29"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_POSITION_AMY;","lastModifiedDate":"2022-10-04"},{"lineNumber":14,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_POSITION_BOB;","lastModifiedDate":"2022-10-04"},{"lineNumber":15,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-09-29"},{"lineNumber":16,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"prit3010"},"content":"import coydir.model.Database;","lastModifiedDate":"2022-10-13"},{"lineNumber":23,"author":{"gitId":"kevinchangjk"},"content":"import coydir.model.person.Person;","lastModifiedDate":"2022-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"kevinchangjk"},"content":"            .withPosition(\"Software Engineer\").withDepartment(\"Information Technology\")","lastModifiedDate":"2022-10-24"},{"lineNumber":33,"author":{"gitId":"prit3010"},"content":"            .withPhone(\"94351253\").withRating(\"3\").withTags(\"friends\").withTotalLeave(15).build();","lastModifiedDate":"2022-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"johnd@example.com\").withPosition(\"Product Manager\").withDepartment(\"Product Management\")","lastModifiedDate":"2022-10-24"},{"lineNumber":37,"author":{"gitId":"prit3010"},"content":"            .withPhone(\"98765432\").withRating(\"3\").withTags(\"owesMoney\", \"friends\").withTotalLeave(20).build();","lastModifiedDate":"2022-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"heinz@example.com\").withPosition(\"Fire Support Officer\").withDepartment(\"Operations\")","lastModifiedDate":"2022-10-24"},{"lineNumber":40,"author":{"gitId":"prit3010"},"content":"            .withAddress(\"wall street\").withRating(\"3\").withTotalLeave(10).build();","lastModifiedDate":"2022-11-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"cornelia@example.com\").withPosition(\"Junior Research Analyst\")","lastModifiedDate":"2022-10-04"},{"lineNumber":43,"author":{"gitId":"Kok-je"},"content":"            .withDepartment(\"Research and Development\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2022-10-26"},{"lineNumber":44,"author":{"gitId":"Kok-je"},"content":"            .withRating(\"3\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"werner@example.com\").withPosition(\"Coffee Maker\").withDepartment(\"Operations\")","lastModifiedDate":"2022-10-24"},{"lineNumber":47,"author":{"gitId":"prit3010"},"content":"            .withAddress(\"michegan ave\").withRating(\"3\").withTotalLeave(10).build();","lastModifiedDate":"2022-11-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"lydia@example.com\").withPosition(\"DevOps Lead\").withDepartment(\"Technology\")","lastModifiedDate":"2022-10-24"},{"lineNumber":50,"author":{"gitId":"prit3010"},"content":"            .withAddress(\"little tokyo\").withRating(\"3\").withTotalLeave(12).build();","lastModifiedDate":"2022-11-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"anna@example.com\").withPosition(\"Senior Consultant Specialist\")","lastModifiedDate":"2022-10-04"},{"lineNumber":53,"author":{"gitId":"Kok-je"},"content":"            .withDepartment(\"Customer Service\").withAddress(\"4th street\").withRating(\"3\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"stefan@example.com\").withPosition(\"Frontend Engineer\")","lastModifiedDate":"2022-10-04"},{"lineNumber":58,"author":{"gitId":"prit3010"},"content":"            .withDepartment(\"Information Technology\").withAddress(\"little india\")","lastModifiedDate":"2022-11-02"},{"lineNumber":59,"author":{"gitId":"prit3010"},"content":"            .withRating(\"3\").withTotalLeave(18).build();","lastModifiedDate":"2022-11-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"kevinchangjk"},"content":"            .withEmail(\"hans@example.com\").withPosition(\"Intern\").withDepartment(\"Marketing\")","lastModifiedDate":"2022-10-24"},{"lineNumber":62,"author":{"gitId":"Kok-je"},"content":"            .withAddress(\"chicago ave\").withRating(\"3\").build();","lastModifiedDate":"2022-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"kevinchangjk"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2022-11-04"},{"lineNumber":66,"author":{"gitId":"kevinchangjk"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withPosition(VALID_POSITION_AMY)","lastModifiedDate":"2022-10-05"},{"lineNumber":67,"author":{"gitId":"kevinchangjk"},"content":"            .withDepartment(VALID_DEPARTMENT_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":68,"author":{"gitId":"kevinchangjk"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2022-11-04"},{"lineNumber":69,"author":{"gitId":"kevinchangjk"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withPosition(VALID_POSITION_BOB)","lastModifiedDate":"2022-10-05"},{"lineNumber":70,"author":{"gitId":"kevinchangjk"},"content":"            .withDepartment(VALID_DEPARTMENT_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2022-10-24"},{"lineNumber":71,"author":{"gitId":"kevinchangjk"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2022-10-24"},{"lineNumber":72,"author":{"gitId":"kevinchangjk"},"content":"    public static final Person PRITTAM \u003d new PersonBuilder().withName(\"Prittam Kok\")","lastModifiedDate":"2022-11-01"},{"lineNumber":73,"author":{"gitId":"kevinchangjk"},"content":"            .withEmptyPhone().withEmptyEmail().withPosition(\"Intern\").withDepartment(\"Board of Directors\")","lastModifiedDate":"2022-11-04"},{"lineNumber":74,"author":{"gitId":"kevinchangjk"},"content":"            .withEmptyAddress().build();","lastModifiedDate":"2022-11-01"},{"lineNumber":75,"author":{"gitId":"kevinchangjk"},"content":"","lastModifiedDate":"2022-11-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"prit3010"},"content":"     * Returns an {@code database} with all the typical persons.","lastModifiedDate":"2022-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"prit3010"},"content":"    public static Database getTypicalDatabase() {","lastModifiedDate":"2022-10-13"},{"lineNumber":84,"author":{"gitId":"prit3010"},"content":"        Database ab \u003d new Database();","lastModifiedDate":"2022-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"prit3010"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":94,"author":{"gitId":"prit3010"},"content":"    public static List\u003cPerson\u003e getRestPersons() {","lastModifiedDate":"2022-10-16"},{"lineNumber":95,"author":{"gitId":"prit3010"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(HOON, IDA));","lastModifiedDate":"2022-10-16"},{"lineNumber":96,"author":{"gitId":"prit3010"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Kok-je":4,"kevinchangjk":36,"prit3010":15,"-":42}},{"path":"src/test/java/coydir/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kevinchangjk":1,"-":34}},{"path":"src/test/java/coydir/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kevinchangjk"},"content":"package coydir.ui;","lastModifiedDate":"2022-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"import static coydir.testutil.Assert.assertThrows;","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"kevinchangjk"},"content":"import coydir.MainApp;","lastModifiedDate":"2022-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kevinchangjk":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"\u003c?import coydir.ui.TestFxmlObject?\u003e","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kevinchangjk":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"kevinchangjk"},"content":"\u003cfx:root type\u003d\"coydir.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2022-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kevinchangjk":1,"-":5}}]
