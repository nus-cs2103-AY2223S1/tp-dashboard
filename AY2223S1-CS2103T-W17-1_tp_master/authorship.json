[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Cjun1039"},"content":"[![CI Status](https://github.com/AY2223S1-CS2103T-W17-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S1-CS2103T-W17-1/tp/actions)","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"# Travelr","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":"This is a **travel planner** desktop application.","lastModifiedDate":"2022-09-27"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":"* Organize your travel plans.","lastModifiedDate":"2022-09-27"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"* Add to your bucket list.","lastModifiedDate":"2022-09-27"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"* Schedule your busy travels.","lastModifiedDate":"2022-09-27"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"Benefits:","lastModifiedDate":"2022-09-27"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"* Simple to use GUI","lastModifiedDate":"2022-09-27"},{"lineNumber":16,"author":{"gitId":"Cjun1039"},"content":"* Free","lastModifiedDate":"2022-09-27"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":"This desktop application can be downloaded by following the Quick Start instructions below. The application is keyboard based and requires the user to type in commands within the GUI. For more information on the commands, see the [User Guide](https://github.com/AY2223S1-CS2103T-W17-1/tp/blob/master/docs/UserGuide.md).","lastModifiedDate":"2022-09-27"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"## Quick start","lastModifiedDate":"2022-09-27"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":22,"author":{"gitId":"Cjun1039"},"content":"1.  Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"2.  Download the latest `Travelr.jar` from [here](https://github.com/AY2223S1-CS2103T-W17-1/tp/releases).","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":"3.  Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"4.  Double-click the file to start the app.","lastModifiedDate":"2022-09-27"},{"lineNumber":29,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":30,"author":{"gitId":"Cjun1039"},"content":"Find more information in the [User Guide](https://github.com/AY2223S1-CS2103T-W17-1/tp/blob/master/docs/UserGuide.md)","lastModifiedDate":"2022-09-27"},{"lineNumber":31,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"**This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).**","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Cjun1039":28,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"mainClassName \u003d \u0027seedu.travelr.Main\u0027","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"seanmanik"},"content":"    archiveFileName \u003d \u0027Travelr.jar\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CeereeC":1,"-":70,"seanmanik":1}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Cjun1039"},"content":"      \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2022-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"Cjun1039"},"content":"      \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"Cjun1039"},"content":"      \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":63,"author":{"gitId":"Cjun1039"},"content":"      \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2022-10-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2022-10-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2022-10-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2022-10-06"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":311,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2022-10-06"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2022-10-06"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":342,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":343,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":363,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":367,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all block-tags are ordered correctly. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Javadoc block tags appear only at the beginning of the line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that for block tags, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*)\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Cjun1039":4,"-":425}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"### Sean Spencer Manik","lastModifiedDate":"2022-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"\u003cimg src\u003d\"images/seanmanik.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"[[github](http://github.com/seanmanik)] [[portfolio](team/seanmanik.md)]","lastModifiedDate":"2022-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"### Su Peigeng","lastModifiedDate":"2022-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"\u003cimg src\u003d\"images/bacon-strips.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"[[github](http://github.com/bacon-strips)] [[portfolio](team/bacon-strips.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"### Stevan Gerard Gunawan","lastModifiedDate":"2022-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"\u003cimg src\u003d\"images/gerardstevan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"[[github](http://github.com/gerardstevan)]","lastModifiedDate":"2022-09-27"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"[[portfolio](team/gerardstevan.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"### Ling Guan Ming","lastModifiedDate":"2022-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"\u003cimg src\u003d\"images/ceereec.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"[[github](http://github.com/ceereec)]","lastModifiedDate":"2022-09-27"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"[[portfolio](team/ceereec.md)]","lastModifiedDate":"2022-09-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":51,"author":{"gitId":"Cjun1039"},"content":"### Cheng Jun Tey","lastModifiedDate":"2022-09-26"},{"lineNumber":52,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":53,"author":{"gitId":"Cjun1039"},"content":"\u003cimg src\u003d\"images/cjun1039.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2022-09-26"},{"lineNumber":54,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":55,"author":{"gitId":"Cjun1039"},"content":"[[github](http://github.com/cjun1039)]","lastModifiedDate":"2022-09-26"},{"lineNumber":56,"author":{"gitId":"Cjun1039"},"content":"[[portfolio](team/cjun1039.md)]","lastModifiedDate":"2022-09-26"},{"lineNumber":57,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-09-26"},{"lineNumber":58,"author":{"gitId":"Cjun1039"},"content":"* Role: Developer","lastModifiedDate":"2022-09-26"},{"lineNumber":59,"author":{"gitId":"Cjun1039"},"content":"* Responsibilities: Dev Ops","lastModifiedDate":"2022-09-26"}],"authorContributionMap":{"Cjun1039":10,"CeereeC":4,"-":35,"seanmanik":3,"Bacon-Strips":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"Cjun1039"},"content":"* defines its *API* in an `interface` with the same title as the Component.","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"Cjun1039"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command title e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2022-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"* stores the Travelr data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2022-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"seanmanik"},"content":"### \\[Proposed\\] Display trip\u0027s events","lastModifiedDate":"2022-10-18"},{"lineNumber":238,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":239,"author":{"gitId":"seanmanik"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-18"},{"lineNumber":240,"author":{"gitId":"seanmanik"},"content":"The proposed display trip\u0027s events mechanism is facilitated by the use of `EventInItineraryPredicate`. ","lastModifiedDate":"2022-10-18"},{"lineNumber":241,"author":{"gitId":"seanmanik"},"content":"It extends `Predicate` with a test that checks if an event is part of the given Itinerary, which is stored","lastModifiedDate":"2022-10-20"},{"lineNumber":242,"author":{"gitId":"seanmanik"},"content":"interally as an `Itinerary`. This predicate is then set as the predicate of the `filteredEventList`, which","lastModifiedDate":"2022-10-18"},{"lineNumber":243,"author":{"gitId":"seanmanik"},"content":"contains all events added to Travelr.","lastModifiedDate":"2022-10-18"},{"lineNumber":244,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":245,"author":{"gitId":"seanmanik"},"content":"Given below is an example usage scenario of how the display trip\u0027s events mechanism behaves at each step.","lastModifiedDate":"2022-10-18"},{"lineNumber":246,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":247,"author":{"gitId":"seanmanik"},"content":"Step 1. The user launches the application for the first time. The `TravelrBook` will be initialised with the","lastModifiedDate":"2022-10-18"},{"lineNumber":248,"author":{"gitId":"seanmanik"},"content":"initial Travelr book state, with no trips and events added.","lastModifiedDate":"2022-10-18"},{"lineNumber":249,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":250,"author":{"gitId":"seanmanik"},"content":"Step 2. The user executes `add n/Trip to Japan ...` to add a new trip, and also executes `add-e n/Try Takoyakis ...` ","lastModifiedDate":"2022-10-18"},{"lineNumber":251,"author":{"gitId":"seanmanik"},"content":"to add a new event to Travelr.","lastModifiedDate":"2022-10-18"},{"lineNumber":252,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":253,"author":{"gitId":"seanmanik"},"content":"Step 3. The user adds the `Event` \u0027Try Takoyakis\u0027 to the `Trip` titled \u0027Trip to Japan\u0027, which results in \u0027Try Takoyakis\u0027","lastModifiedDate":"2022-10-18"},{"lineNumber":254,"author":{"gitId":"seanmanik"},"content":"being in its `Itinerary`.","lastModifiedDate":"2022-10-18"},{"lineNumber":255,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":256,"author":{"gitId":"seanmanik"},"content":"Step 4. The user executes the `select 1` command to display the 1st trip\u0027s events.","lastModifiedDate":"2022-10-18"},{"lineNumber":257,"author":{"gitId":"seanmanik"},"content":"A new `EventInItineraryPredicate` will be created, with an internal `Itinerary` pointer that points to the `Itinerary`","lastModifiedDate":"2022-10-18"},{"lineNumber":258,"author":{"gitId":"seanmanik"},"content":"of the selected `Trip`. `Model#updateFileredEvents` will then be called with the predicate supplied as an argument,","lastModifiedDate":"2022-10-18"},{"lineNumber":259,"author":{"gitId":"seanmanik"},"content":"which will update the list of displayed events to be those that are part of the selected trip\u0027s itinerary.","lastModifiedDate":"2022-10-18"},{"lineNumber":260,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":261,"author":{"gitId":"seanmanik"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the selected  fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2022-10-18"},{"lineNumber":262,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":263,"author":{"gitId":"seanmanik"},"content":"\u003c/div\u003e","lastModifiedDate":"2022-10-18"},{"lineNumber":264,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":265,"author":{"gitId":"seanmanik"},"content":"The following sequence diagram shows how the select operation works:","lastModifiedDate":"2022-10-18"},{"lineNumber":266,"author":{"gitId":"seanmanik"},"content":"![SelectSequenceDiagram](images/SelectSequenceDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":267,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":268,"author":{"gitId":"seanmanik"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2022-10-18"},{"lineNumber":269,"author":{"gitId":"seanmanik"},"content":"![SelectActivityDiagram](images/SelectActivityDiagram.png)","lastModifiedDate":"2022-10-18"},{"lineNumber":270,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":271,"author":{"gitId":"seanmanik"},"content":"#### Design considerations:","lastModifiedDate":"2022-10-18"},{"lineNumber":272,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":273,"author":{"gitId":"seanmanik"},"content":"**Aspect: How select executes:**","lastModifiedDate":"2022-10-18"},{"lineNumber":274,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":275,"author":{"gitId":"seanmanik"},"content":"{more aspects and alternatives to be added}","lastModifiedDate":"2022-10-18"},{"lineNumber":276,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":277,"author":{"gitId":"seanmanik"},"content":"### \\[Proposed\\] Display completed trips and events","lastModifiedDate":"2022-10-20"},{"lineNumber":278,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":279,"author":{"gitId":"seanmanik"},"content":"#### Proposed Implementation","lastModifiedDate":"2022-10-20"},{"lineNumber":280,"author":{"gitId":"seanmanik"},"content":"The proposed display completed trips and events mechanism is facilitated by the use of `EventCompletedPredicate`","lastModifiedDate":"2022-10-20"},{"lineNumber":281,"author":{"gitId":"seanmanik"},"content":"and `TripCompletedPredicate`. `TripCompletedPredicate` and `EventCompletedPredicate` extends `Predicate` with","lastModifiedDate":"2022-10-20"},{"lineNumber":282,"author":{"gitId":"seanmanik"},"content":"a test that checks if an event is part of a list of itineararies belonging to completed trips. ","lastModifiedDate":"2022-10-20"},{"lineNumber":283,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":284,"author":{"gitId":"seanmanik"},"content":"These predicates","lastModifiedDate":"2022-10-20"},{"lineNumber":285,"author":{"gitId":"seanmanik"},"content":"are then set as the predicate of the `filteredTripList` and `filteredEventList` respectively, which will result","lastModifiedDate":"2022-10-20"},{"lineNumber":286,"author":{"gitId":"seanmanik"},"content":"in the display of completed trips and events.","lastModifiedDate":"2022-10-20"},{"lineNumber":287,"author":{"gitId":"seanmanik"},"content":"The proposed display trip\u0027s events mechanism is facilitated by the use of `EventInItineraryPredicate`. ","lastModifiedDate":"2022-10-20"},{"lineNumber":288,"author":{"gitId":"seanmanik"},"content":"It extends the `Predicate` with a test that checks if an event is part of the given Itinerary, which is stored","lastModifiedDate":"2022-10-20"},{"lineNumber":289,"author":{"gitId":"seanmanik"},"content":"interally as an `Itinerary`. This predicate is then set as the predicate of the `filteredEventList`, which","lastModifiedDate":"2022-10-20"},{"lineNumber":290,"author":{"gitId":"seanmanik"},"content":"contains all events added to Travelr.","lastModifiedDate":"2022-10-20"},{"lineNumber":291,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":292,"author":{"gitId":"seanmanik"},"content":"Given below is an example usage scenario of how the display trip\u0027s events mechanism behaves at each step.","lastModifiedDate":"2022-10-20"},{"lineNumber":293,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":294,"author":{"gitId":"seanmanik"},"content":"Step 1. The user launches the application for the first time. The `TravelrBook` will be initialised with the","lastModifiedDate":"2022-10-20"},{"lineNumber":295,"author":{"gitId":"seanmanik"},"content":"initial Travelr book state, with no trips and events added.","lastModifiedDate":"2022-10-20"},{"lineNumber":296,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":297,"author":{"gitId":"seanmanik"},"content":"Step 2. The user executes `add n/Trip to Japan ...` to add a new trip, and also executes `add-e n/Try Takoyakis ...` ","lastModifiedDate":"2022-10-20"},{"lineNumber":298,"author":{"gitId":"seanmanik"},"content":"to add a new event to Travelr.","lastModifiedDate":"2022-10-20"},{"lineNumber":299,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":300,"author":{"gitId":"seanmanik"},"content":"Step 3. The user adds the `Event` \u0027Try Takoyakis\u0027 to the `Trip` titled \u0027Trip to Japan\u0027, which results in \u0027Try Takoyakis\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":301,"author":{"gitId":"seanmanik"},"content":"being in its `Itinerary`.","lastModifiedDate":"2022-10-20"},{"lineNumber":302,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":303,"author":{"gitId":"seanmanik"},"content":"Step 4. The user executes `mark 1`, which marks the first trip as well as the events in its itinerary as completed.","lastModifiedDate":"2022-10-20"},{"lineNumber":304,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":305,"author":{"gitId":"seanmanik"},"content":"Step 5. The user executes `completed`, which displays all completed trips and events, which includes both \u0027Trip to Japan\u0027","lastModifiedDate":"2022-10-20"},{"lineNumber":306,"author":{"gitId":"seanmanik"},"content":"and \u0027Try Takoyakis\u0027.","lastModifiedDate":"2022-10-20"},{"lineNumber":307,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"gerardstevan"},"content":"* has a need to keep track of their bucket lists","lastModifiedDate":"2022-09-28"},{"lineNumber":332,"author":{"gitId":"gerardstevan"},"content":"* wants to manage travel itineraries, bookings, and costs efficiently","lastModifiedDate":"2022-09-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"gerardstevan"},"content":"**Value proposition**: manage trips itineraries, bookings, and costs faster than a typical mouse/GUI driven app.","lastModifiedDate":"2022-09-28"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"| Priority | As a …​                            | I want to …​                    | So that I can…​                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"gerardstevan"},"content":"|----------|------------------------------------|---------------------------------|---------------------------------------------------------|","lastModifiedDate":"2022-09-28"},{"lineNumber":347,"author":{"gitId":"gerardstevan"},"content":"| `* * *`  | user                               | add events and trips            | keep track of what I want to do                         |","lastModifiedDate":"2022-09-28"},{"lineNumber":348,"author":{"gitId":"gerardstevan"},"content":"| `* * *`  | user                               | view all the events in the list | refer to it whenever I want                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":349,"author":{"gitId":"gerardstevan"},"content":"| `* * *`  | user                               | save events into local storage  | access the data whenever I want                         |","lastModifiedDate":"2022-09-28"},{"lineNumber":350,"author":{"gitId":"gerardstevan"},"content":"| `* * *`  | user                               | delete events and trips         | remove the unwanted event and trips                     |","lastModifiedDate":"2022-09-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"| `* *`    | user                               | hide private contact details    | minimize chance of someone else seeing them by accident |","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"gerardstevan"},"content":"| `* *`    | user who often change his/her mind | update the details              | easily change things                                    |","lastModifiedDate":"2022-09-28"},{"lineNumber":353,"author":{"gitId":"gerardstevan"},"content":"| `* *`    | user                               | categorize my events            | keep track of each category                             |","lastModifiedDate":"2022-09-28"},{"lineNumber":354,"author":{"gitId":"gerardstevan"},"content":"| `*`      | user                               | reuse past itineraries          | use it when I want to                                   |","lastModifiedDate":"2022-09-28"},{"lineNumber":355,"author":{"gitId":"gerardstevan"},"content":"| `*`      | user                               | view the total budget needed    | keep track of the budget                                |","lastModifiedDate":"2022-09-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"gerardstevan"},"content":"### Use Cases","lastModifiedDate":"2022-09-27"},{"lineNumber":360,"author":{"gitId":"CeereeC"},"content":"Software System: Travelr","lastModifiedDate":"2022-09-28"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":362,"author":{"gitId":"gerardstevan"},"content":"**Use case: UC01 Delete a Trip**","lastModifiedDate":"2022-09-28"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":364,"author":{"gitId":"gerardstevan"},"content":"**Actor: User**","lastModifiedDate":"2022-09-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":366,"author":{"gitId":"gerardstevan"},"content":"**MSS :**","lastModifiedDate":"2022-09-28"},{"lineNumber":367,"author":{"gitId":"gerardstevan"},"content":"1. User request the list of trips","lastModifiedDate":"2022-09-27"},{"lineNumber":368,"author":{"gitId":"CeereeC"},"content":"2. Travelr lists the trips.","lastModifiedDate":"2022-09-28"},{"lineNumber":369,"author":{"gitId":"gerardstevan"},"content":"3. User requests to delete a certain trip.","lastModifiedDate":"2022-09-27"},{"lineNumber":370,"author":{"gitId":"Cjun1039"},"content":"4. Travelr deletes the specified trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":372,"author":{"gitId":"Cjun1039"},"content":"   Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":374,"author":{"gitId":"Cjun1039"},"content":"**Extensions:**","lastModifiedDate":"2022-10-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":376,"author":{"gitId":"Cjun1039"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-10-18"},{"lineNumber":377,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":378,"author":{"gitId":"Cjun1039"},"content":"  Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":379,"author":{"gitId":"Cjun1039"},"content":"* 3a. The requested trip doesn\u0027t exist","lastModifiedDate":"2022-10-18"},{"lineNumber":380,"author":{"gitId":"Cjun1039"},"content":"    * 3a1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":381,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":382,"author":{"gitId":"Cjun1039"},"content":"      Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":383,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":384,"author":{"gitId":"Cjun1039"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-10-18"},{"lineNumber":385,"author":{"gitId":"Cjun1039"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":386,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":387,"author":{"gitId":"Cjun1039"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-18"},{"lineNumber":388,"author":{"gitId":"Cjun1039"},"content":"      ","lastModifiedDate":"2022-10-18"},{"lineNumber":389,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":390,"author":{"gitId":"Cjun1039"},"content":"Software System: Travelr","lastModifiedDate":"2022-10-18"},{"lineNumber":391,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":392,"author":{"gitId":"Cjun1039"},"content":"**Use case: UC02 Select a Trip**","lastModifiedDate":"2022-10-18"},{"lineNumber":393,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":394,"author":{"gitId":"Cjun1039"},"content":"**Actor: User**","lastModifiedDate":"2022-10-18"},{"lineNumber":395,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":396,"author":{"gitId":"Cjun1039"},"content":"**MSS :**","lastModifiedDate":"2022-10-18"},{"lineNumber":397,"author":{"gitId":"Cjun1039"},"content":"1. User request the list of trips","lastModifiedDate":"2022-10-18"},{"lineNumber":398,"author":{"gitId":"Cjun1039"},"content":"2. Travelr lists the trips.","lastModifiedDate":"2022-10-18"},{"lineNumber":399,"author":{"gitId":"Cjun1039"},"content":"3. User requests to select a certain trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":400,"author":{"gitId":"Cjun1039"},"content":"4. Travelr selects the specified trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":401,"author":{"gitId":"Cjun1039"},"content":"5. Travelr lists the events contained in the trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":402,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":403,"author":{"gitId":"gerardstevan"},"content":"   Use case ends","lastModifiedDate":"2022-09-27"},{"lineNumber":404,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":405,"author":{"gitId":"gerardstevan"},"content":"**Extensions:**","lastModifiedDate":"2022-09-28"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2022-09-28"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-28"},{"lineNumber":409,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2022-09-28"},{"lineNumber":410,"author":{"gitId":"gerardstevan"},"content":"* 3a. The requested trip doesn\u0027t exist","lastModifiedDate":"2022-09-28"},{"lineNumber":411,"author":{"gitId":"CeereeC"},"content":"    * 3a1. Travelr shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":413,"author":{"gitId":"gerardstevan"},"content":"      Use case ends","lastModifiedDate":"2022-09-27"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":415,"author":{"gitId":"gerardstevan"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-09-28"},{"lineNumber":416,"author":{"gitId":"CeereeC"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-09-28"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":418,"author":{"gitId":"gerardstevan"},"content":"      Use Case Ends","lastModifiedDate":"2022-09-27"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":420,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":421,"author":{"gitId":"gerardstevan"},"content":"**Use case: UC03 Assign an Event to a Trip**","lastModifiedDate":"2022-10-18"},{"lineNumber":422,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":423,"author":{"gitId":"gerardstevan"},"content":"**Actor: User**","lastModifiedDate":"2022-10-18"},{"lineNumber":424,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":425,"author":{"gitId":"gerardstevan"},"content":"**MSS :**","lastModifiedDate":"2022-10-18"},{"lineNumber":426,"author":{"gitId":"gerardstevan"},"content":"1. User request the list of trips and bucketList events","lastModifiedDate":"2022-10-18"},{"lineNumber":427,"author":{"gitId":"gerardstevan"},"content":"2. Travelr lists the trips and events.","lastModifiedDate":"2022-10-18"},{"lineNumber":428,"author":{"gitId":"gerardstevan"},"content":"3. User requests to move the specified event to the specified trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":429,"author":{"gitId":"gerardstevan"},"content":"4. Travelr move the specified event to the trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":430,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":431,"author":{"gitId":"gerardstevan"},"content":"   Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":432,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":433,"author":{"gitId":"gerardstevan"},"content":"**Extensions:**","lastModifiedDate":"2022-10-18"},{"lineNumber":434,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":435,"author":{"gitId":"gerardstevan"},"content":"* 2a. The list or bucketList is empty.","lastModifiedDate":"2022-10-18"},{"lineNumber":436,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":437,"author":{"gitId":"gerardstevan"},"content":"  Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":438,"author":{"gitId":"gerardstevan"},"content":"* 3a. The requested trip doesn\u0027t exist","lastModifiedDate":"2022-10-18"},{"lineNumber":439,"author":{"gitId":"gerardstevan"},"content":"    * 3a1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":440,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":441,"author":{"gitId":"gerardstevan"},"content":"      Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":442,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":443,"author":{"gitId":"gerardstevan"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-10-18"},{"lineNumber":444,"author":{"gitId":"gerardstevan"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":445,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":446,"author":{"gitId":"gerardstevan"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-18"},{"lineNumber":447,"author":{"gitId":"gerardstevan"},"content":"* 3c. The requested event doesn\u0027t exist","lastModifiedDate":"2022-10-18"},{"lineNumber":448,"author":{"gitId":"gerardstevan"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":449,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":450,"author":{"gitId":"gerardstevan"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-18"},{"lineNumber":451,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":452,"author":{"gitId":"gerardstevan"},"content":"**Use case: UC04 Remove an Event from a Trip**","lastModifiedDate":"2022-10-18"},{"lineNumber":453,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":454,"author":{"gitId":"gerardstevan"},"content":"**Actor: User**","lastModifiedDate":"2022-10-18"},{"lineNumber":455,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":456,"author":{"gitId":"gerardstevan"},"content":"**MSS :**","lastModifiedDate":"2022-10-18"},{"lineNumber":457,"author":{"gitId":"gerardstevan"},"content":"1. User request the list of events in a trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":458,"author":{"gitId":"gerardstevan"},"content":"2. Travelr lists the events in the trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":459,"author":{"gitId":"gerardstevan"},"content":"3. User requests to move the specified event from the specified trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":460,"author":{"gitId":"gerardstevan"},"content":"4. Travelr move the specified event from the trip to the bucketList.","lastModifiedDate":"2022-10-18"},{"lineNumber":461,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":462,"author":{"gitId":"gerardstevan"},"content":"   Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":463,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":464,"author":{"gitId":"gerardstevan"},"content":"**Extensions:**","lastModifiedDate":"2022-10-18"},{"lineNumber":465,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":466,"author":{"gitId":"gerardstevan"},"content":"* 2a. There is no events in the trip.","lastModifiedDate":"2022-10-18"},{"lineNumber":467,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":468,"author":{"gitId":"gerardstevan"},"content":"  Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":469,"author":{"gitId":"gerardstevan"},"content":"* 3a. The requested trip doesn\u0027t exist","lastModifiedDate":"2022-10-18"},{"lineNumber":470,"author":{"gitId":"gerardstevan"},"content":"    * 3a1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":471,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":472,"author":{"gitId":"gerardstevan"},"content":"      Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":473,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":474,"author":{"gitId":"gerardstevan"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-10-18"},{"lineNumber":475,"author":{"gitId":"gerardstevan"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":476,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":477,"author":{"gitId":"gerardstevan"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-18"},{"lineNumber":478,"author":{"gitId":"gerardstevan"},"content":"* 3c. The requested event doesn\u0027t exist","lastModifiedDate":"2022-10-18"},{"lineNumber":479,"author":{"gitId":"gerardstevan"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":480,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":481,"author":{"gitId":"gerardstevan"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-18"},{"lineNumber":482,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":483,"author":{"gitId":"gerardstevan"},"content":"**Use case: UC05 Mark a trip as done**","lastModifiedDate":"2022-10-18"},{"lineNumber":484,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":485,"author":{"gitId":"gerardstevan"},"content":"**Actor: User**","lastModifiedDate":"2022-10-18"},{"lineNumber":486,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":487,"author":{"gitId":"gerardstevan"},"content":"**MSS :**","lastModifiedDate":"2022-10-18"},{"lineNumber":488,"author":{"gitId":"gerardstevan"},"content":"1. User request the list of trips.","lastModifiedDate":"2022-10-18"},{"lineNumber":489,"author":{"gitId":"gerardstevan"},"content":"2. Travelr lists trips.","lastModifiedDate":"2022-10-18"},{"lineNumber":490,"author":{"gitId":"gerardstevan"},"content":"3. User requests mark a trip as done.","lastModifiedDate":"2022-10-18"},{"lineNumber":491,"author":{"gitId":"gerardstevan"},"content":"4. Travelr marks the trip as done.","lastModifiedDate":"2022-10-18"},{"lineNumber":492,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":493,"author":{"gitId":"gerardstevan"},"content":"   Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":494,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":495,"author":{"gitId":"gerardstevan"},"content":"**Extensions:**","lastModifiedDate":"2022-10-18"},{"lineNumber":496,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":497,"author":{"gitId":"gerardstevan"},"content":"* 2a. There is trip list is empty.","lastModifiedDate":"2022-10-18"},{"lineNumber":498,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":499,"author":{"gitId":"gerardstevan"},"content":"  Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":500,"author":{"gitId":"gerardstevan"},"content":"* 3a. The requested trip doesn\u0027t exist","lastModifiedDate":"2022-10-18"},{"lineNumber":501,"author":{"gitId":"gerardstevan"},"content":"    * 3a1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":502,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":503,"author":{"gitId":"gerardstevan"},"content":"      Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":504,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":505,"author":{"gitId":"gerardstevan"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-10-18"},{"lineNumber":506,"author":{"gitId":"gerardstevan"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":507,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":508,"author":{"gitId":"gerardstevan"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-18"},{"lineNumber":509,"author":{"gitId":"gerardstevan"},"content":"* 4a. The trip is already marked as done.","lastModifiedDate":"2022-10-18"},{"lineNumber":510,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":511,"author":{"gitId":"gerardstevan"},"content":"  Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":512,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":513,"author":{"gitId":"gerardstevan"},"content":"**Use case: UC06 Mark a trip as done**","lastModifiedDate":"2022-10-18"},{"lineNumber":514,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":515,"author":{"gitId":"gerardstevan"},"content":"**Actor: User**","lastModifiedDate":"2022-10-18"},{"lineNumber":516,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":517,"author":{"gitId":"gerardstevan"},"content":"**MSS :**","lastModifiedDate":"2022-10-18"},{"lineNumber":518,"author":{"gitId":"gerardstevan"},"content":"1. User request the list of trips.","lastModifiedDate":"2022-10-18"},{"lineNumber":519,"author":{"gitId":"gerardstevan"},"content":"2. Travelr lists trips.","lastModifiedDate":"2022-10-18"},{"lineNumber":520,"author":{"gitId":"gerardstevan"},"content":"3. User requests to mark a trip as not done.","lastModifiedDate":"2022-10-18"},{"lineNumber":521,"author":{"gitId":"gerardstevan"},"content":"4. Travelr marks the trip as not done.","lastModifiedDate":"2022-10-18"},{"lineNumber":522,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":523,"author":{"gitId":"gerardstevan"},"content":"   Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":524,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":525,"author":{"gitId":"gerardstevan"},"content":"**Extensions:**","lastModifiedDate":"2022-10-18"},{"lineNumber":526,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":527,"author":{"gitId":"gerardstevan"},"content":"* 2a. There is trip list is empty.","lastModifiedDate":"2022-10-18"},{"lineNumber":528,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":529,"author":{"gitId":"gerardstevan"},"content":"  Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":530,"author":{"gitId":"gerardstevan"},"content":"* 3a. The requested trip doesn\u0027t exist","lastModifiedDate":"2022-10-18"},{"lineNumber":531,"author":{"gitId":"gerardstevan"},"content":"    * 3a1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":532,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":533,"author":{"gitId":"gerardstevan"},"content":"      Use case ends","lastModifiedDate":"2022-10-18"},{"lineNumber":534,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":535,"author":{"gitId":"gerardstevan"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-10-18"},{"lineNumber":536,"author":{"gitId":"gerardstevan"},"content":"    * 3b1. Travelr shows an error message.","lastModifiedDate":"2022-10-18"},{"lineNumber":537,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":538,"author":{"gitId":"gerardstevan"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-18"},{"lineNumber":539,"author":{"gitId":"gerardstevan"},"content":"* 4a. The trip is already marked as not done.","lastModifiedDate":"2022-10-18"},{"lineNumber":540,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":541,"author":{"gitId":"gerardstevan"},"content":"  Use case ends.","lastModifiedDate":"2022-10-18"},{"lineNumber":542,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":543,"author":{"gitId":"CeereeC"},"content":"**Use case: UC07 Delete event**","lastModifiedDate":"2022-10-19"},{"lineNumber":544,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":545,"author":{"gitId":"CeereeC"},"content":"**Actor: User**","lastModifiedDate":"2022-10-19"},{"lineNumber":546,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":547,"author":{"gitId":"CeereeC"},"content":"**MSS :**","lastModifiedDate":"2022-10-19"},{"lineNumber":548,"author":{"gitId":"CeereeC"},"content":"1. User request the list of events in bucket list.","lastModifiedDate":"2022-10-19"},{"lineNumber":549,"author":{"gitId":"CeereeC"},"content":"2. Travelr lists events in bucket list. ","lastModifiedDate":"2022-10-19"},{"lineNumber":550,"author":{"gitId":"CeereeC"},"content":"3. User request to delete an event from the bucket list.","lastModifiedDate":"2022-10-19"},{"lineNumber":551,"author":{"gitId":"CeereeC"},"content":"4. Travelr deletes the event.","lastModifiedDate":"2022-10-19"},{"lineNumber":552,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":553,"author":{"gitId":"CeereeC"},"content":"   Use case ends","lastModifiedDate":"2022-10-19"},{"lineNumber":554,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":555,"author":{"gitId":"CeereeC"},"content":"**Extensions:**","lastModifiedDate":"2022-10-19"},{"lineNumber":556,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":557,"author":{"gitId":"CeereeC"},"content":"* 2a. Bucket list is empty.  ","lastModifiedDate":"2022-10-19"},{"lineNumber":558,"author":{"gitId":"CeereeC"},"content":"  Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":559,"author":{"gitId":"CeereeC"},"content":"  ","lastModifiedDate":"2022-10-19"},{"lineNumber":560,"author":{"gitId":"CeereeC"},"content":"* 3a. The requested event doesn\u0027t exist","lastModifiedDate":"2022-10-19"},{"lineNumber":561,"author":{"gitId":"CeereeC"},"content":"  ","lastModifiedDate":"2022-10-19"},{"lineNumber":562,"author":{"gitId":"CeereeC"},"content":"    * 3a1. Travelr shows an error message.  ","lastModifiedDate":"2022-10-19"},{"lineNumber":563,"author":{"gitId":"CeereeC"},"content":"      Use case ends","lastModifiedDate":"2022-10-19"},{"lineNumber":564,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":565,"author":{"gitId":"CeereeC"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-10-19"},{"lineNumber":566,"author":{"gitId":"CeereeC"},"content":"    * 3b1. Travelr shows an error message.  ","lastModifiedDate":"2022-10-19"},{"lineNumber":567,"author":{"gitId":"CeereeC"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-19"},{"lineNumber":568,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":569,"author":{"gitId":"Bacon-Strips"},"content":"**Use case: UC08 Sort trips**","lastModifiedDate":"2022-10-19"},{"lineNumber":570,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":571,"author":{"gitId":"Bacon-Strips"},"content":"**Actor: User**","lastModifiedDate":"2022-10-19"},{"lineNumber":572,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":573,"author":{"gitId":"Bacon-Strips"},"content":"**MSS :**","lastModifiedDate":"2022-10-19"},{"lineNumber":574,"author":{"gitId":"Bacon-Strips"},"content":"1. User request the list of trips.","lastModifiedDate":"2022-10-19"},{"lineNumber":575,"author":{"gitId":"Bacon-Strips"},"content":"2. Travelr lists trips in UniqueTripList. ","lastModifiedDate":"2022-10-19"},{"lineNumber":576,"author":{"gitId":"Bacon-Strips"},"content":"3. User request to sort the list of trips.","lastModifiedDate":"2022-10-19"},{"lineNumber":577,"author":{"gitId":"Bacon-Strips"},"content":"4. Travelr sorts the trips according to the user\u0027s request.","lastModifiedDate":"2022-10-19"},{"lineNumber":578,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":579,"author":{"gitId":"Bacon-Strips"},"content":"   Use case ends","lastModifiedDate":"2022-10-19"},{"lineNumber":580,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":581,"author":{"gitId":"Bacon-Strips"},"content":"**Extensions:**","lastModifiedDate":"2022-10-19"},{"lineNumber":582,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":583,"author":{"gitId":"Bacon-Strips"},"content":"* 2a. UniqueTripList is empty.  ","lastModifiedDate":"2022-10-19"},{"lineNumber":584,"author":{"gitId":"Bacon-Strips"},"content":"  Use case ends.","lastModifiedDate":"2022-10-19"},{"lineNumber":585,"author":{"gitId":"Bacon-Strips"},"content":"  ","lastModifiedDate":"2022-10-19"},{"lineNumber":586,"author":{"gitId":"Bacon-Strips"},"content":"* 3a. The requested sorting factor does not exist","lastModifiedDate":"2022-10-19"},{"lineNumber":587,"author":{"gitId":"Bacon-Strips"},"content":"  ","lastModifiedDate":"2022-10-19"},{"lineNumber":588,"author":{"gitId":"Bacon-Strips"},"content":"    * 3a1. Travelr shows an error message.  ","lastModifiedDate":"2022-10-19"},{"lineNumber":589,"author":{"gitId":"Bacon-Strips"},"content":"      Use case ends","lastModifiedDate":"2022-10-19"},{"lineNumber":590,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":591,"author":{"gitId":"Bacon-Strips"},"content":"* 3b. Invalid input","lastModifiedDate":"2022-10-19"},{"lineNumber":592,"author":{"gitId":"Bacon-Strips"},"content":"    * 3b1. Travelr shows an error message.  ","lastModifiedDate":"2022-10-19"},{"lineNumber":593,"author":{"gitId":"Bacon-Strips"},"content":"      Use Case Ends","lastModifiedDate":"2022-10-19"},{"lineNumber":594,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":595,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":596,"author":{"gitId":"gerardstevan"},"content":"*{More TBA}*","lastModifiedDate":"2022-09-28"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":598,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"CeereeC"},"content":"2.  Should be able to hold up to 2000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2022-09-24"},{"lineNumber":602,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"CeereeC"},"content":"4.  The UI should be resizable as users will likely be referencing other tabs while using this product.","lastModifiedDate":"2022-09-24"},{"lineNumber":604,"author":{"gitId":"CeereeC"},"content":"5.  Should respond immediately to user input, as user will likely be using multiple commands.","lastModifiedDate":"2022-09-24"},{"lineNumber":605,"author":{"gitId":"CeereeC"},"content":"6.  Should be usable by novice travelers that have never planned a trip.","lastModifiedDate":"2022-09-24"},{"lineNumber":606,"author":{"gitId":"CeereeC"},"content":"7.  Should be able to work offline","lastModifiedDate":"2022-09-24"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"CeereeC"},"content":"* **UI**: The User Interface that users will see when they use the product.","lastModifiedDate":"2022-09-24"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Cjun1039":30,"CeereeC":38,"gerardstevan":151,"-":348,"seanmanik":71,"Bacon-Strips":26}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2022-09-23"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"Travelr is a desktop app for managing trips and events, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Travelr can get your trip management tasks done faster than traditional GUI apps.","lastModifiedDate":"2022-09-29"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2022-09-25"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"- [Features](#features)","lastModifiedDate":"2022-09-25"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"  * [Adding events: `add-e n/TITLE d/DESCRIPTION`](#adding-events-add-e-ntitle-ddescription)","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"  * [Deleting events: `delete -e`](#deleting-events-delete--e)","lastModifiedDate":"2022-09-25"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"  * [Viewing events list: `list-e`](#viewing-events-list-list-e)","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"  * [Adding trips: `add n/TITLE d/DESCRIPTION`](#adding-trips-add-ntitle-ddescription)","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"  * [Viewing trips list: `list`](#viewing-trips-list-list)","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"  * [Adding events to trips: `add-et n/EVENT NAME T/TRIP NAME`](#adding-events-to-trips-add-et-nevent-name-ttrip-name)","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"  * [Saving data](#saving-data)","lastModifiedDate":"2022-09-25"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"  * [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2022-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"2. Download the latest `travelr.jar` from [here](https://github.com/AY2223S1-CS2103T-W17-1/tp/releases).","lastModifiedDate":"2022-09-28"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Travelr.","lastModifiedDate":"2022-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2022-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list-e`** : Lists all events.","lastModifiedDate":"2022-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * **`add`**`-e Sightseeing/20-06-2030/Portugal/Visit Mountains` : Adds an event with the respective date, location, and activity into your event list.","lastModifiedDate":"2022-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete -e`**`3` : Deletes the 3rd event shown in the current event list.","lastModifiedDate":"2022-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`bye`** : Exits the app.","lastModifiedDate":"2022-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2022-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Notes about the command format:**","lastModifiedDate":"2022-09-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2022-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"e.g. in `add -t TITLE`, TITLE is a parameter which can be used as `add -t Switzerland Trip`.","lastModifiedDate":"2022-09-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Items in square brackets are optional.","lastModifiedDate":"2022-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"e.g NAME [TAG] can be used as John Doe/Friend or as John Doe.","lastModifiedDate":"2022-09-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"The relevant prefixes must be used to separate parameters supplied by the user.","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"E.g. in `add-e n/TITLE d/DESCRIPTION`, ‘n/’  and \u0027d/\u0027 are two designated used to separate the two parameters supplied which can be used as `add -e n/Sightseeing d/Visit mountains`.","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Extraneous parameters for commands that do not take in parameters (such as bye) will be ignored.","lastModifiedDate":"2022-09-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"e.g. if the command specifies `bye 123`, it will be interpreted as `bye`.","lastModifiedDate":"2022-09-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"seanmanik"},"content":"### Adding events: `add-e n/TITLE d/DESCRIPTION`","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Adds an event to the events list.","lastModifiedDate":"2022-09-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"Format: `add-e n/TITLE d/DESCRIPTION`","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"- `add-e n/Skydiving d/Skydiving with crew`","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"- `add-e n/Sailing d/Sail in the Danube River`","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"### Deleting events: `delete -e`","lastModifiedDate":"2022-09-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Deletes the specified person from the events list.","lastModifiedDate":"2022-09-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Format: `delete -e INDEX`","lastModifiedDate":"2022-09-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"- Deletes the person at the specified INDEX.","lastModifiedDate":"2022-09-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"- The index refers to the index number shown in the events list.","lastModifiedDate":"2022-09-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"- The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2022-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"- `list -e` followed by `delete 2` deletes the 2nd event in the events list.","lastModifiedDate":"2022-09-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing events list: `list-e`","lastModifiedDate":"2022-09-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Shows a list of all events added.","lastModifiedDate":"2022-09-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `list-e`","lastModifiedDate":"2022-09-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"seanmanik"},"content":"### Adding trips: `add n/TITLE d/DESCRIPTION`","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Adds a trip to the trip list.","lastModifiedDate":"2022-09-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `add -t TITLE`","lastModifiedDate":"2022-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"- `add -t Trip to Iceland`","lastModifiedDate":"2022-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":85,"author":{"gitId":"seanmanik"},"content":"### Viewing trips list: `list`","lastModifiedDate":"2022-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Shows a list of all trips added.","lastModifiedDate":"2022-09-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":88,"author":{"gitId":"seanmanik"},"content":"Format: `list`","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-23"},{"lineNumber":90,"author":{"gitId":"seanmanik"},"content":"### Adding events to trips: `add-et n/EVENT NAME T/TRIP NAME`","lastModifiedDate":"2022-10-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Adds the specified event to the specified trip.","lastModifiedDate":"2022-09-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-25"},{"lineNumber":93,"author":{"gitId":"seanmanik"},"content":"Format: `add-et n/EVENT NAME T/TRIP NAME`","lastModifiedDate":"2022-10-14"},{"lineNumber":94,"author":{"gitId":"seanmanik"},"content":"- Adds the event with the specified EVENT NAME","lastModifiedDate":"2022-10-14"},{"lineNumber":95,"author":{"gitId":"seanmanik"},"content":"- Event is added to the trip at the specified TRIP NAME","lastModifiedDate":"2022-10-14"},{"lineNumber":96,"author":{"gitId":"seanmanik"},"content":"- The TRIP NAME must exist in the trips list.","lastModifiedDate":"2022-10-14"},{"lineNumber":97,"author":{"gitId":"seanmanik"},"content":"- The EVENT NAME must exist in the events list.","lastModifiedDate":"2022-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"- `add -et 2 3` adds the 2nd event in the events list to the 3rd trip in the trips list.","lastModifiedDate":"2022-09-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2022-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Travelr data are saved locally automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2022-09-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2022-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Format: `bye`","lastModifiedDate":"2022-09-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CeereeC":2,"-":78,"seanmanik":27}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"Cjun1039"},"content":"  * Replaces the top navigation menu with the project title when printing","lastModifiedDate":"2022-10-06"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    content: \"AB-3\";","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Cjun1039":1,"-":294}},{"path":"docs/team/bacon-strips.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"# Su Peigeng\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"## Project: Travelr","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Bacon-Strips":7}},{"path":"docs/team/ceereec.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"# Ling Guan Ming\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"## Project: Travelr","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Bacon-Strips":7}},{"path":"docs/team/cjun1039.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"# Tey Cheng Jun\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"## Project: Travelr","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Bacon-Strips":7}},{"path":"docs/team/gerardstevan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"# Gerard Stevan\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"## Project: Travelr","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Bacon-Strips":7}},{"path":"docs/team/seanmanik.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"# Sean Manik\u0027s Project Portfolio Page","lastModifiedDate":"2022-09-27"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"## Project: Travelr","lastModifiedDate":"2022-09-27"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-09-27"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"## Contributions","lastModifiedDate":"2022-09-27"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"`to be added soon`","lastModifiedDate":"2022-09-27"}],"authorContributionMap":{"Bacon-Strips":7}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"Cjun1039"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s title). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2022-10-06"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"Cjun1039"},"content":"Following convention, let’s change the title of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2022-10-06"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Cjun1039":2,"-":399}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"Cjun1039"},"content":"    \"title\": \"Person with invalid title field: Ha!ns Mu@ster\",","lastModifiedDate":"2022-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Cjun1039":1,"-":111}},{"path":"src/main/java/seedu/travelr/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.FileUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":3,"-":61}},{"path":"src/main/java/seedu/travelr/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":24}},{"path":"src/main/java/seedu/travelr/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.Config;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.Version;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.ConfigUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.StringUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.Logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.LogicManager;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.util.SampleDataUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.storage.AddressBookStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.storage.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.storage.StorageManager;","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.storage.UserPrefsStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.ui.Ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.ui.UiManager;","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"Cjun1039"},"content":"        // Storage works here -- initial data contains the events","lastModifiedDate":"2022-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"Cjun1039"},"content":"            // if loading does not work, this works for demo: initialData \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":2,"CeereeC":24,"-":159}},{"path":"src/main/java/seedu/travelr/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.core;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":62}},{"path":"src/main/java/seedu/travelr/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.core;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":78}},{"path":"src/main/java/seedu/travelr/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.core;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":111}},{"path":"src/main/java/seedu/travelr/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.core;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":" * Container for user visible messages.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"public class Messages {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_INVALID_TRIP_DISPLAYED_INDEX \u003d \"The trip index provided is invalid\";","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_TRIPS_LISTED_OVERVIEW \u003d \"%1$d trips listed!\";","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_INVALID_DELETE_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":13}},{"path":"src/main/java/seedu/travelr/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.core;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":115}},{"path":"src/main/java/seedu/travelr/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.core.index;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":53}},{"path":"src/main/java/seedu/travelr/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.exceptions;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":10}},{"path":"src/main/java/seedu/travelr/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.exceptions;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":20}},{"path":"src/main/java/seedu/travelr/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.MainApp;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":40}},{"path":"src/main/java/seedu/travelr/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":34}},{"path":"src/main/java/seedu/travelr/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.Config;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":3,"-":20}},{"path":"src/main/java/seedu/travelr/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":82}},{"path":"src/main/java/seedu/travelr/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":3,"-":140}},{"path":"src/main/java/seedu/travelr/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":66}},{"path":"src/main/java/seedu/travelr/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.CommandResult;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.trip.ObservableTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"    ObservableTrip getSelectedTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"    ObservableList\u003cTrip\u003e getFilteredTripList();","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":3,"CeereeC":11,"-":41,"seanmanik":3}},{"path":"src/main/java/seedu/travelr/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.Command;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.CommandResult;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.AddressBookParser;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.trip.ObservableTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.storage.Storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"    public ObservableList\u003cTrip\u003e getFilteredTripList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"        return model.getFilteredTripList();","lastModifiedDate":"2022-10-02"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"Cjun1039"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"Cjun1039"},"content":"    public ObservableTrip getSelectedTrip() {","lastModifiedDate":"2022-10-19"},{"lineNumber":76,"author":{"gitId":"Cjun1039"},"content":"        return model.getSelectedTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":4,"CeereeC":16,"gerardstevan":3,"-":67,"seanmanik":3}},{"path":"src/main/java/seedu/travelr/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":" * Adds a Trip to Travelr.","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a trip to Travelr. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Cjun1039"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"            + PREFIX_DESC + \"DESCRIPTION \"","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"            + PREFIX_DATE + \"{dd-mm-yyyy} \\n\"","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"            + PREFIX_TITLE + \"Honeymoon \"","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"            + PREFIX_DESC + \"Going on a honeymoon with my prof \"","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"            + PREFIX_LOCATION + \"Jeju Island \"","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"            + PREFIX_DATE + \"26-12-2023\";","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New trip added: %1$s\";","lastModifiedDate":"2022-10-02"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"    public static final String MESSAGE_DUPLICATE_TRIP \u003d \"This trip already exists in Travelr\";","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"    private final Trip toAdd;","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Cjun1039"},"content":"     * Creates an AddCommand to add the specified {@code Trip}","lastModifiedDate":"2022-10-03"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"    public AddCommand(Trip trip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"        toAdd \u003d trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"        if (model.hasTrip(toAdd)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-02"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"        model.addTrip(toAdd);","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":9,"CeereeC":54}},{"path":"src/main/java/seedu/travelr/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventCommand. Extends the Command class","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"    public static final String COMMAND_WORD \u003d \"add-e\";","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to Travelr. \"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"            + PREFIX_DESC + \"DESCRIPTION \"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"            + PREFIX_TITLE + \"Honeymoon \"","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"            + PREFIX_DESC + \"Going on a honeymoon with my prof.\"","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_DUPLICATE_TRIP \u003d \"This event already exists in Travelr\";","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"    private final Event toAdd;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"     * Creates an AddCommand to add the specified {@code Trip}","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"        toAdd \u003d event;","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"seanmanik"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"seanmanik"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd));","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gerardstevan":8,"seanmanik":54}},{"path":"src/main/java/seedu/travelr/logic/commands/AddEventToTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TRIP;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventToTripCommand. Extends the Command class.","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"public class AddEventToTripCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"    public static final String COMMAND_WORD \u003d \"add-et\";","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to specified trip. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TITLE + \"Event TITLE \"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TRIP + \"TRIP \"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TITLE + \"Swim \"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TRIP + \"Honeymoon \";","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Event added to trip: %1$s\";","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_DUPLICATE_TRIP \u003d \"This event already exists in the specified trip\";","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    private final Title eventToAdd;","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"    private final Title tripToAddInto;","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"     * Creates an AddCommand to add the specified {@code Trip}","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"    public AddEventToTripCommand(Title event, Title trip) {","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(trip);","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"        eventToAdd \u003d event;","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        tripToAddInto \u003d trip;","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"        if (!model.hasEvent(new Event(eventToAdd))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"            throw new CommandException(\"Please enter a valid event\");","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"        if (!model.hasTrip(new Trip(tripToAddInto, new Description(\"random\"), new HashSet\u003c\u003e()))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"            throw new CommandException(\"Please enter a valid Trip\");","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"        Event event \u003d model.getEvent(new Event(eventToAdd));","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"        Trip toAddInto \u003d model.getTrip(new Trip(tripToAddInto, new Description(\"random\"), new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"        model.removeFromBucketList(event);","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"        toAddInto.addEvent(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, event));","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"                || (other instanceof AddEventToTripCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 eventToAdd.equals(((AddEventToTripCommand) other).eventToAdd)","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 tripToAddInto.equals(((AddEventToTripCommand) other).tripToAddInto));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Cjun1039":3,"CeereeC":1,"gerardstevan":70}},{"path":"src/main/java/seedu/travelr/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":" * Clears Travelr.","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Travelr has been cleared!\";","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":2,"CeereeC":3,"-":18}},{"path":"src/main/java/seedu/travelr/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":3,"-":17}},{"path":"src/main/java/seedu/travelr/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":70}},{"path":"src/main/java/seedu/travelr/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":" * Deletes a trip identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"            + \": Deletes the trip identified by the index number used in the displayed trip list.\\n\"","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_DELETE_TRIP_SUCCESS \u003d \"Deleted Trip: %1$s\";","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"        List\u003cTrip\u003e lastShownList \u003d model.getFilteredTripList();","lastModifiedDate":"2022-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"        Trip tripToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"        model.deleteTrip(tripToDelete);","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TRIP_SUCCESS, tripToDelete));","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":1,"CeereeC":13,"-":39}},{"path":"src/main/java/seedu/travelr/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import java.util.List;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"    public static final String COMMAND_WORD \u003d \"delete-e\";","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"    private final Index targetIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2022-10-14"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2022-10-14"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-14"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DELETE_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-14"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-14"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2022-10-14"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"                || (other instanceof DeleteEventCommand // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteEventCommand) other).targetIndex)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"CeereeC":52}},{"path":"src/main/java/seedu/travelr/logic/commands/DeleteEventFromTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TRIP;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":" * Represents the DeleteEventFromTripCommand.","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"public class DeleteEventFromTripCommand extends Command {","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"    public static final String COMMAND_WORD \u003d \"delete-et\";","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to specified trip. \"","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TITLE + \"Event TITLE \"","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TRIP + \"TRIP \"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TITLE + \"Swim \"","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"            + PREFIX_TRIP + \"Honeymoon \";","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Event removed to trip: %1$s\\nThe specified event has been returned\"","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"to the bucket list. Current bucket list:\";","lastModifiedDate":"2022-10-16"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_DUPLICATE_TRIP \u003d \"This event doesn\u0027t exists in the specified trip\";","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"    private Title eventToDelete;","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    private Title tripToDeleteFrom;","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"     * Creates an AddCommand to add the specified {@code Trip}","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"    public DeleteEventFromTripCommand(Title event, Title trip) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(trip);","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"        eventToDelete \u003d event;","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"        tripToDeleteFrom \u003d trip;","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-10"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-10"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"        if (!model.hasTrip(new Trip(tripToDeleteFrom, new Description(\"random\"), new HashSet\u003c\u003e()))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"            throw new CommandException(\"Please enter a valid Trip\");","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"        Trip toDeleteFrom \u003d model.getTrip(new Trip(tripToDeleteFrom, new Description(\"random\"), new HashSet\u003c\u003e()));","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"        if (!toDeleteFrom.contains(new Event((eventToDelete)))) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"            throw new CommandException(\"Please enter a valid Event\");","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"        Event event \u003d toDeleteFrom.getEvent(new Event(eventToDelete));","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"        toDeleteFrom.removeEvent(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"seanmanik"},"content":"        model.returnToBucketList(event);","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"seanmanik"},"content":"        model.updateFilteredEventList(model.getBucketPredicate());","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, event));","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"gerardstevan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"                || (other instanceof DeleteEventFromTripCommand // instanceof handles nulls","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 eventToDelete.equals(((DeleteEventFromTripCommand) other).eventToDelete)","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 tripToDeleteFrom.equals(((DeleteEventFromTripCommand) other).tripToDeleteFrom));","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":82,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Cjun1039":3,"gerardstevan":74,"-":2,"seanmanik":3}},{"path":"src/main/java/seedu/travelr/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.model.Model.PREDICATE_SHOW_ALL_TRIPS;","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.CollectionUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":" * Edits the details of a Trip in Travelr.","lastModifiedDate":"2022-10-03"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the Trip identified \"","lastModifiedDate":"2022-10-03"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"            + \"by the index number used in the displayed trip list. \"","lastModifiedDate":"2022-10-03"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Cjun1039"},"content":"            + \"[\" + PREFIX_TITLE + \"TITLE] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Cjun1039"},"content":"            + \"[\" + PREFIX_DESC + \"DESCRIPTION] \"","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"Cjun1039"},"content":"            + PREFIX_DESC + \"Consectetur adipiscing elit.\";","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_EDIT_TRIP_SUCCESS \u003d \"Edited Trip: %1$s\";","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_DUPLICATE_TRIP \u003d \"This trip already exists in the address book.\";","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    private final Index index;","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"    private final EditTripDescriptor editTripDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Cjun1039"},"content":"     * @param index              of the person in the filtered trip list to edit","lastModifiedDate":"2022-10-03"},{"lineNumber":51,"author":{"gitId":"Cjun1039"},"content":"     * @param editTripDescriptor details to edit the trip with","lastModifiedDate":"2022-10-03"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"    public EditCommand(Index index, EditTripDescriptor editTripDescriptor) {","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(editTripDescriptor);","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"        this.editTripDescriptor \u003d new EditTripDescriptor(editTripDescriptor);","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"        List\u003cTrip\u003e lastShownList \u003d model.getFilteredTripList();","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"        Trip tripToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2022-10-02"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"        Trip editedTrip \u003d createEditedTrip(tripToEdit, editTripDescriptor);","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"        if (!tripToEdit.isSameTrip(editedTrip) \u0026\u0026 model.hasTrip(editedTrip)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-02"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"CeereeC"},"content":"        model.setTrip(tripToEdit, editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":78,"author":{"gitId":"CeereeC"},"content":"        model.updateFilteredTripList(PREDICATE_SHOW_ALL_TRIPS);","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"CeereeC"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TRIP_SUCCESS, editedTrip));","lastModifiedDate":"2022-10-02"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"Cjun1039"},"content":"     * Creates and returns a {@code Trip} with the details of {@code tripToEdit}","lastModifiedDate":"2022-10-03"},{"lineNumber":84,"author":{"gitId":"Cjun1039"},"content":"     * edited with {@code editTripDescriptor}.","lastModifiedDate":"2022-10-03"},{"lineNumber":85,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"CeereeC"},"content":"    private static Trip createEditedTrip(Trip tripToEdit, EditTripDescriptor editTripDescriptor) {","lastModifiedDate":"2022-10-02"},{"lineNumber":87,"author":{"gitId":"CeereeC"},"content":"        assert tripToEdit !\u003d null;","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"        Title updatedTitle \u003d editTripDescriptor.getTitle().orElse(tripToEdit.getTitle());","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Cjun1039"},"content":"        Description updatedDescription \u003d editTripDescriptor.getDescription().orElse(tripToEdit.getDescription());","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"        Set\u003cEvent\u003e updatedEvents \u003d editTripDescriptor.getEvents().orElse(tripToEdit.getEvents());","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"        return new Trip(updatedTitle, updatedDescription, updatedEvents);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"CeereeC"},"content":"        // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"CeereeC"},"content":"        // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"CeereeC"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"CeereeC"},"content":"        return index.equals(e.index)","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 editTripDescriptor.equals(e.editTripDescriptor);","lastModifiedDate":"2022-10-02"},{"lineNumber":112,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"CeereeC"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"CeereeC"},"content":"    public static class EditTripDescriptor {","lastModifiedDate":"2022-10-02"},{"lineNumber":119,"author":{"gitId":"Cjun1039"},"content":"        private Title title;","lastModifiedDate":"2022-10-06"},{"lineNumber":120,"author":{"gitId":"Cjun1039"},"content":"        private Description description;","lastModifiedDate":"2022-10-06"},{"lineNumber":121,"author":{"gitId":"Bacon-Strips"},"content":"        private Set\u003cEvent\u003e events;","lastModifiedDate":"2022-10-07"},{"lineNumber":122,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"CeereeC"},"content":"        public EditTripDescriptor() {","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-02"},{"lineNumber":125,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"CeereeC"},"content":"        /**","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"CeereeC"},"content":"         * Copy constructor.","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"CeereeC"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"CeereeC"},"content":"         */","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"CeereeC"},"content":"        public EditTripDescriptor(EditTripDescriptor toCopy) {","lastModifiedDate":"2022-10-02"},{"lineNumber":131,"author":{"gitId":"Bacon-Strips"},"content":"            setTitle(toCopy.title);","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Cjun1039"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2022-10-06"},{"lineNumber":133,"author":{"gitId":"Bacon-Strips"},"content":"            setEvents(toCopy.events);","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"CeereeC"},"content":"        /**","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"CeereeC"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"CeereeC"},"content":"         */","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"CeereeC"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"Bacon-Strips"},"content":"            return CollectionUtil.isAnyNonNull(title, description, events);","lastModifiedDate":"2022-10-07"},{"lineNumber":141,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"Bacon-Strips"},"content":"        public void setTitle(Title title) {","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Cjun1039"},"content":"            this.title \u003d title;","lastModifiedDate":"2022-10-06"},{"lineNumber":145,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"Bacon-Strips"},"content":"        public Optional\u003cTitle\u003e getTitle() {","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"Cjun1039"},"content":"            return Optional.ofNullable(title);","lastModifiedDate":"2022-10-06"},{"lineNumber":149,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"Cjun1039"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2022-10-06"},{"lineNumber":152,"author":{"gitId":"Cjun1039"},"content":"            this.description \u003d description;","lastModifiedDate":"2022-10-06"},{"lineNumber":153,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"Cjun1039"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"Cjun1039"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"CeereeC"},"content":"        /**","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"CeereeC"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"CeereeC"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"CeereeC"},"content":"         */","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"Bacon-Strips"},"content":"        public void setEvents(Set\u003cEvent\u003e tags) {","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"Bacon-Strips"},"content":"            this.events \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2022-10-07"},{"lineNumber":165,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"CeereeC"},"content":"        /**","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"CeereeC"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"CeereeC"},"content":"         * if modification is attempted.","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"CeereeC"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"CeereeC"},"content":"         */","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"Bacon-Strips"},"content":"        public Optional\u003cSet\u003cEvent\u003e\u003e getEvents() {","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"Bacon-Strips"},"content":"            return (events !\u003d null) ? Optional.of(Collections.unmodifiableSet(events)) : Optional.empty();","lastModifiedDate":"2022-10-07"},{"lineNumber":174,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"CeereeC"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"CeereeC"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"CeereeC"},"content":"            // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"CeereeC"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"CeereeC"},"content":"                return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"CeereeC"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"CeereeC"},"content":"            // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"CeereeC"},"content":"            if (!(other instanceof EditTripDescriptor)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":185,"author":{"gitId":"CeereeC"},"content":"                return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"CeereeC"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":188,"author":{"gitId":"CeereeC"},"content":"            // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"CeereeC"},"content":"            EditTripDescriptor e \u003d (EditTripDescriptor) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":190,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"Bacon-Strips"},"content":"            return getTitle().equals(e.getTitle())","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"Cjun1039"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2022-10-06"},{"lineNumber":193,"author":{"gitId":"Bacon-Strips"},"content":"                    \u0026\u0026 getEvents().equals(e.getEvents());","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":25,"CeereeC":155,"Bacon-Strips":16}},{"path":"src/main/java/seedu/travelr/logic/commands/EventListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.AllInBucketListPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":" * Represents the EventListCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"public class EventListCommand extends Command {","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"    public static final String COMMAND_WORD \u003d \"list-e\";","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events in Bucket list\";","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"        AllInBucketListPredicate predicate \u003d model.getBucketPredicate();","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"        model.resetSelectedTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Cjun1039":1,"CeereeC":1,"gerardstevan":5,"seanmanik":19}},{"path":"src/main/java/seedu/travelr/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":17}},{"path":"src/main/java/seedu/travelr/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":" * Finds and lists all trips in address book whose name contains any of the argument keywords.","lastModifiedDate":"2022-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all trips whose title contain any of \"","lastModifiedDate":"2022-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    private final TitleContainsKeywordsPredicate predicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    public FindCommand(TitleContainsKeywordsPredicate predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"        model.updateFilteredTripList(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"                String.format(Messages.MESSAGE_TRIPS_LISTED_OVERVIEW, model.getFilteredTripList().size()));","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":2,"CeereeC":5,"-":32,"Bacon-Strips":3}},{"path":"src/main/java/seedu/travelr/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":19}},{"path":"src/main/java/seedu/travelr/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.model.Model.PREDICATE_SHOW_ALL_TRIPS;","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":" * Lists all trips in Travelr to the user.","lastModifiedDate":"2022-10-03"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all trips\";","lastModifiedDate":"2022-10-03"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"        model.updateFilteredTripList(PREDICATE_SHOW_ALL_TRIPS);","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":2,"CeereeC":22}},{"path":"src/main/java/seedu/travelr/logic/commands/MarkTripDoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventToTripCommand. Extends the Command class.","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"public class MarkTripDoneCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks a trip as done. \"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"            + \"Index Number (Must be a positive integer) \"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"            + \"1 \";","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Trip marked as done: %1$s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_ALREADY_MARKED_DONE \u003d \"This trip already marked as done\";","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"    //private final Title eventToAdd;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"    private final Index index;","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"     * Creates an AddCommand to add the specified {@code Trip}","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"    public MarkTripDoneCommand(Index index) {","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"        List\u003cTrip\u003e list \u003d model.getFilteredTripList();","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"        if (index.getZeroBased() \u003e\u003d list.size()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"        Trip tripToMarkDone \u003d list.get(index.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"        if (tripToMarkDone.isDone()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"            throw new CommandException(MESSAGE_ALREADY_MARKED_DONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"        tripToMarkDone.markDone();","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tripToMarkDone.getTitle().toString()));","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"                || (other instanceof MarkTripDoneCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 index.equals(((MarkTripDoneCommand) other).index));","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"gerardstevan":67}},{"path":"src/main/java/seedu/travelr/logic/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.travelr.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.EventInItineraryPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.list.Itineraries;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Selects a trip in Travelr and display it to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed the itinerary for the trip: %1$s\";","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"            + \": Displays the itinerary of the specified trip.\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"    private EventInItineraryPredicate predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"    public SelectCommand(EventInItineraryPredicate predicate) {","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"        Index targetIndex \u003d predicate.getIndex();","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"        List\u003cTrip\u003e lastShownList \u003d model.getFilteredTripList();","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"        Trip tripToDisplay \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"        Itineraries tripItinerary \u003d tripToDisplay.getItinerary();","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"        predicate.setItinerary(tripItinerary);","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"Cjun1039"},"content":"        model.updateSelectedTrip(tripToDisplay);","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tripToDisplay.getTitle().toString()));","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"seanmanik"},"content":"    private FilteredList\u003cEvent\u003e retrieveItinerariesAsList(Itineraries itinerary) {","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"seanmanik"},"content":"        return itinerary.asUnmodifiableObservableList().filtered(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof SelectCommand // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 predicate.equals(((SelectCommand) other).predicate)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Cjun1039":1,"-":8,"seanmanik":55}},{"path":"src/main/java/seedu/travelr/logic/commands/SortTripsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_REVERSE_ORDER;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_SORTBY;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":" * Sorts the trips within Travelr.","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"public class SortTripsCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts trips within Travelr.\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"            + \"Parameters (Optional): \"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"            + PREFIX_SORTBY + \"FACTOR \" + PREFIX_REVERSE_ORDER + \"\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"            + \"By default this command will sort by titles \\nalphabetically if there\u0027s no given factor.\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"            + \"Available factors: \" + \"title\" + \"\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_SORTBY + \"title \" + PREFIX_REVERSE_ORDER;","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String SORT_SUCCESS \u003d \"Trips have been sorted.\";","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    private final Comparator\u003cTrip\u003e comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    public SortTripsCommand(Comparator\u003cTrip\u003e comparator) {","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        model.sortTripsByComparator(comparator);","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        return new CommandResult(SORT_SUCCESS);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"Bacon-Strips":39}},{"path":"src/main/java/seedu/travelr/logic/commands/UnmarkDoneTripCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventToTripCommand. Extends the Command class.","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"public class UnmarkDoneTripCommand extends Command {","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Unmarks done trip. \"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"            + \"Index Number (Must be a positive integer) \"","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"            + \"\\n\"","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"            + \"1 \";","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Trip marked as not done: %1$s\";","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    public static final String MESSAGE_ALREADY_MARKED_NOT_DONE \u003d \"This trip already marked as not done\";","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    //private final Title eventToAdd;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"    private final Index index;","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"     * Creates an AddCommand to add the specified {@code Trip}","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"    public UnmarkDoneTripCommand(Index index) {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        List\u003cTrip\u003e list \u003d model.getFilteredTripList();","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"        if (index.getZeroBased() \u003e\u003d list.size()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"        Trip tripToUnmark \u003d list.get(index.getZeroBased());","lastModifiedDate":"2022-10-18"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"        if (!tripToUnmark.isDone()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"            throw new CommandException(MESSAGE_ALREADY_MARKED_NOT_DONE);","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"        tripToUnmark.markNotDone();","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, tripToUnmark.getTitle().toString()));","lastModifiedDate":"2022-10-18"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"                || (other instanceof UnmarkDoneTripCommand // instanceof handles nulls","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 index.equals(((UnmarkDoneTripCommand) other).index));","lastModifiedDate":"2022-10-18"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"gerardstevan":66}},{"path":"src/main/java/seedu/travelr/logic/commands/ViewAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import static seedu.travelr.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"import static seedu.travelr.model.Model.PREDICATE_SHOW_ALL_TRIPS;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Displays all added trips and events in Travelr to the user.","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"public class ViewAllCommand extends Command {","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all trips and events\";","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"        model.updateFilteredTripList(PREDICATE_SHOW_ALL_TRIPS);","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"        model.resetSelectedTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"Cjun1039":1,"-":5,"seanmanik":21}},{"path":"src/main/java/seedu/travelr/logic/commands/ViewCompletedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import static seedu.travelr.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.EventCompletedPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.list.Itineraries;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.trip.TripCompletedPredicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":" * Displays all completed trips and events in Travelr to the user.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"public class ViewCompletedCommand extends Command {","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"    public static final String COMMAND_WORD \u003d \"completed\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed completed trips and events\";","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"            + \": Displays completed trips and events.\\n\";","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"    public ViewCompletedCommand() {","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(model);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"        model.updateFilteredTripList(new TripCompletedPredicate());","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"        ObservableList\u003cTrip\u003e trips \u003d model.getFilteredTripList();","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"        FilteredList\u003cTrip\u003e completedTrips \u003d trips.filtered(new TripCompletedPredicate());","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"        //Does not change.","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"        model.updateFilteredEventList(new EventCompletedPredicate(completedTrips));","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"    private FilteredList\u003cEvent\u003e retrieveItinerariesAsList(Itineraries itinerary) {","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"        return itinerary.asUnmodifiableObservableList().filtered(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof ViewCompletedCommand); // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"seanmanik":50}},{"path":"src/main/java/seedu/travelr/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.commands.exceptions;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":16}},{"path":"src/main/java/seedu/travelr/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.AddCommand;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.DateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESC, PREFIX_TAG, PREFIX_LOCATION, PREFIX_DATE);","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"        // Location and DateField is optional","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"Cjun1039"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_DESC)","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"Cjun1039"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2022-10-14"},{"lineNumber":44,"author":{"gitId":"Cjun1039"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESC).get());","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"        Set\u003cEvent\u003e eventList \u003d ParserUtil.parseEvents(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION)","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"                .orElse(Location.getDefaultValue()));","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"        DateField dateField \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE)","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"                .orElse(DateField.getDefaultValue()));","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"        Trip trip \u003d new Trip(title, description, eventList, location, dateField);","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"        return new AddCommand(trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":8,"CeereeC":55,"seanmanik":1}},{"path":"src/main/java/seedu/travelr/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.AddEventCommand;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventCommandParser.","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESC);","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_DESC) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-14"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESC).get());","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"        Event event \u003d new Event(title, description);","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Cjun1039":2,"CeereeC":1,"gerardstevan":11,"seanmanik":36}},{"path":"src/main/java/seedu/travelr/logic/parser/AddEventToTripCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TRIP;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.AddEventToTripCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventToTripCommandParser.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"public class AddEventToTripCommandParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"    public AddEventToTripCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_TRIP);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_TRIP)","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"                    AddEventToTripCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-10"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"        Title trip \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TRIP).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        return new AddEventToTripCommand(title, trip);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Cjun1039":1,"gerardstevan":46}},{"path":"src/main/java/seedu/travelr/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.AddCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.AddEventCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.AddEventToTripCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.Command;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.DeleteEventCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.DeleteEventFromTripCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.EditCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.EventListCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.FindCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.ListCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.MarkTripDoneCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.SelectCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.SortTripsCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.UnmarkDoneTripCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.ViewAllCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.ViewCompletedCommand;","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":" * Parses user input.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"public class AddressBookParser {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"     * @param userInput full user input string","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"     * @return the command based on the user input","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"        switch (commandWord) {","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"        case UnmarkDoneTripCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"            return new UnmarkDoneTripCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"        case MarkTripDoneCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"            return new MarkTripDoneCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"        case DeleteEventFromTripCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"            return new DeleteEventFromTripCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"        case AddEventToTripCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-10"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"            return new AddEventToTripCommandParser().parse(arguments);","lastModifiedDate":"2022-10-10"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":70,"author":{"gitId":"seanmanik"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"seanmanik"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"CeereeC"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"CeereeC"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"CeereeC"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2022-10-14"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":82,"author":{"gitId":"CeereeC"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"CeereeC"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"CeereeC"},"content":"            return new ClearCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"CeereeC"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"seanmanik"},"content":"        case EventListCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-08"},{"lineNumber":92,"author":{"gitId":"seanmanik"},"content":"            return new EventListCommand();","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"seanmanik"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"seanmanik"},"content":"            return new SelectCommandParser().parse(arguments);","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"CeereeC"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"CeereeC"},"content":"            return new ListCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"            return new ExitCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"            return new HelpCommand();","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"seanmanik"},"content":"        case ViewAllCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"seanmanik"},"content":"            return new ViewAllCommand();","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"seanmanik"},"content":"        case ViewCompletedCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"seanmanik"},"content":"            return new ViewCompletedCommand();","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"        case SortTripsCommand.COMMAND_WORD:","lastModifiedDate":"2022-10-18"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"            return new SortTripsCommandParser().parse(arguments);","lastModifiedDate":"2022-10-18"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"        default:","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":70,"gerardstevan":12,"seanmanik":35,"Bacon-Strips":3}},{"path":"src/main/java/seedu/travelr/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":59}},{"path":"src/main/java/seedu/travelr/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":147}},{"path":"src/main/java/seedu/travelr/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"public class CliSyntax {","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"    /* Prefix definitions */","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"n/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    public static final Prefix PREFIX_TRIP \u003d new Prefix(\"T/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"    public static final Prefix PREFIX_DESC \u003d new Prefix(\"d/\");","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"D/\");","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"E/\");","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Prefix PREFIX_SORTBY \u003d new Prefix(\"by/\");","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Prefix PREFIX_REVERSE_ORDER \u003d new Prefix(\"r/\");","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":2,"CeereeC":13,"gerardstevan":2,"Bacon-Strips":4}},{"path":"src/main/java/seedu/travelr/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.DeleteCommand;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":5,"-":24}},{"path":"src/main/java/seedu/travelr/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-14"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-14"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.DeleteEventCommand;","lastModifiedDate":"2022-10-14"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-10-14"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-14"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-14"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"        try {","lastModifiedDate":"2022-10-14"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-14"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2022-10-14"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-14"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-14"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-10-14"}],"authorContributionMap":{"CeereeC":29}},{"path":"src/main/java/seedu/travelr/logic/parser/DeleteEventFromTripCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TRIP;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.DeleteEventFromTripCommand;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":" * Represents the DeleteEventFromTripCommandParser.","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"public class DeleteEventFromTripCommandParser {","lastModifiedDate":"2022-10-10"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"    public DeleteEventFromTripCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_TRIP);","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_TRIP)","lastModifiedDate":"2022-10-10"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2022-10-10"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"                    DeleteEventFromTripCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"        Title trip \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_TRIP).get());","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        return new DeleteEventFromTripCommand(title, trip);","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-10"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-10"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-10"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-10"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Cjun1039":1,"CeereeC":1,"gerardstevan":45}},{"path":"src/main/java/seedu/travelr/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import java.util.Collection;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.EditCommand;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.EditCommand.EditTripDescriptor;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-07"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(args);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_DESC, PREFIX_TAG);","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"        Index index;","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"        EditTripDescriptor editTripDescriptor \u003d new EditTripDescriptor();","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"Cjun1039"},"content":"        if (argMultimap.getValue(PREFIX_TITLE).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"            editTripDescriptor.setTitle(ParserUtil.parseName(argMultimap.getValue(PREFIX_TITLE).get()));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Cjun1039"},"content":"        if (argMultimap.getValue(PREFIX_DESC).isPresent()) {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Cjun1039"},"content":"            editTripDescriptor.setDescription(ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESC).get()));","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editTripDescriptor::setEvents);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"        if (!editTripDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"        return new EditCommand(index, editTripDescriptor);","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"seanmanik"},"content":"    private Optional\u003cSet\u003cEvent\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e events) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"seanmanik"},"content":"        assert events !\u003d null;","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"seanmanik"},"content":"        if (events.isEmpty()) {","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"seanmanik"},"content":"        Collection\u003cString\u003e eventSet \u003d events.size() \u003d\u003d 1 \u0026\u0026 events.contains(\"\") ? Collections.emptySet() : events;","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"seanmanik"},"content":"        return Optional.of(ParserUtil.parseEvents(eventSet));","lastModifiedDate":"2022-10-08"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":6,"CeereeC":60,"seanmanik":5,"Bacon-Strips":3}},{"path":"src/main/java/seedu/travelr/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.FindCommand;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        return new FindCommand(new TitleContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":4,"-":27,"Bacon-Strips":2}},{"path":"src/main/java/seedu/travelr/logic/parser/MarkTripDoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.MarkTripDoneCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventToTripCommandParser.","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"public class MarkTripDoneCommandParser {","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"    public MarkTripDoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"            return new MarkTripDoneCommand(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTripDoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"gerardstevan":39}},{"path":"src/main/java/seedu/travelr/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.Command;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":3,"-":13}},{"path":"src/main/java/seedu/travelr/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import java.util.Collection;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.StringUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.DateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Email;","lastModifiedDate":"2022-10-02"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"public class ParserUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"    public static final String EVENT_DESCRIPTION_PLACEHOLDER \u003d","lastModifiedDate":"2022-10-10"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"            \"This is a placeholder text for the event description, located in ParserUtil class.\";","lastModifiedDate":"2022-10-10"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"     * trimmed.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Cjun1039"},"content":"    public static Title parseName(String name) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(name);","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Cjun1039"},"content":"        if (!Title.isValidTitle(trimmedName)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":51,"author":{"gitId":"Cjun1039"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"Cjun1039"},"content":"        return new Title(trimmedName);","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"seanmanik"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"seanmanik"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"seanmanik"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"seanmanik"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"seanmanik"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"seanmanik"},"content":"        return new Title(trimmedTitle);","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":70,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":71,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":72,"author":{"gitId":"Cjun1039"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2022-10-06"},{"lineNumber":73,"author":{"gitId":"Cjun1039"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-06"},{"lineNumber":74,"author":{"gitId":"Cjun1039"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":75,"author":{"gitId":"Cjun1039"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2022-10-06"},{"lineNumber":76,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"Cjun1039"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2022-10-06"},{"lineNumber":78,"author":{"gitId":"Cjun1039"},"content":"        requireNonNull(description);","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"Cjun1039"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"Cjun1039"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"Cjun1039"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2022-10-06"},{"lineNumber":84,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":85,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"CeereeC"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2022-10-20"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":91,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"CeereeC"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"CeereeC"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"CeereeC"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"CeereeC"},"content":"    public static DateField parseDate(String date) throws ParseException {","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"CeereeC"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"CeereeC"},"content":"        if (!DateField.isValidDate(trimmedDate)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(DateField.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"        return new DateField(trimmedDate);","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"CeereeC"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"CeereeC"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"CeereeC"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"CeereeC"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"CeereeC"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"CeereeC"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"seanmanik"},"content":"     * Parses a {@code String event} into a {@code Event}.","lastModifiedDate":"2022-10-08"},{"lineNumber":133,"author":{"gitId":"CeereeC"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"CeereeC"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"seanmanik"},"content":"    public static Event parseEvent(String event) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"seanmanik"},"content":"        String trimmedTag \u003d event.trim();","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"seanmanik"},"content":"        if (!Event.isValidEventTitle(trimmedTag)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"Bacon-Strips"},"content":"            throw new ParseException(Event.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":142,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"seanmanik"},"content":"        return new Event(new Title(trimmedTag), new Description(EVENT_DESCRIPTION_PLACEHOLDER));","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"CeereeC"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"seanmanik"},"content":"    public static Set\u003cEvent\u003e parseEvents(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(tags);","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"Bacon-Strips"},"content":"        final Set\u003cEvent\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":153,"author":{"gitId":"CeereeC"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"Bacon-Strips"},"content":"            tagSet.add(parseEvent(tagName));","lastModifiedDate":"2022-10-07"},{"lineNumber":155,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"CeereeC"},"content":"        return tagSet;","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":20,"CeereeC":108,"gerardstevan":2,"seanmanik":23,"Bacon-Strips":5}},{"path":"src/main/java/seedu/travelr/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":38}},{"path":"src/main/java/seedu/travelr/logic/parser/SelectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.commands.SelectCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.EventInItineraryPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new SelectCommand object","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"public class SelectCommandParser implements Parser\u003cSelectCommand\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectCommand","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a SelectCommand object for execution.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    public SelectCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"        try {","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"            return new SelectCommand(new EventInItineraryPredicate(index));","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"-":11,"seanmanik":18}},{"path":"src/main/java/seedu/travelr/logic/parser/SortTripsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_REVERSE_ORDER;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_SORTBY;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.model.trip.TripComparators.COMPARE_BY_TITLE;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.SortTripsCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":" * Parses input arguments and creates a new SortTripsCommand object","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"public class SortTripsCommandParser implements Parser\u003cSortTripsCommand\u003e {","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"     * Parses the given {@code String} of arguments in the context of the SortTripsCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"     * and returns an SortTripsCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"    public SortTripsCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORTBY, PREFIX_REVERSE_ORDER);","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        String sortBy \u003d argMultimap.getValue(PREFIX_SORTBY).orElse(\"\").toLowerCase();","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"        boolean reverse \u003d argMultimap.getValue(PREFIX_REVERSE_ORDER).map(x -\u003e true).orElse(false);","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        Comparator\u003cTrip\u003e comp \u003d COMPARE_BY_TITLE;","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        switch (sortBy) {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        case \"\":","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"        case \"title\":","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"            break;","lastModifiedDate":"2022-10-18"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"        default:","lastModifiedDate":"2022-10-18"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortTripsCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        final Comparator\u003cTrip\u003e originalComp \u003d comp;","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        comp \u003d reverse ? (x, y) -\u003e -1 * originalComp.compare(x, y) : comp;","lastModifiedDate":"2022-10-18"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"        return new SortTripsCommand(comp);","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"Bacon-Strips":50}},{"path":"src/main/java/seedu/travelr/logic/parser/UnmarkDoneTripCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.UnmarkDoneTripCommand;","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":" * Represents the AddEventToTripCommandParser.","lastModifiedDate":"2022-10-18"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"public class UnmarkDoneTripCommandParser {","lastModifiedDate":"2022-10-18"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2022-10-18"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2022-10-18"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-10-18"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2022-10-18"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"    public UnmarkDoneTripCommand parse(String args) throws ParseException {","lastModifiedDate":"2022-10-18"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"        try {","lastModifiedDate":"2022-10-18"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2022-10-18"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"            return new UnmarkDoneTripCommand(index);","lastModifiedDate":"2022-10-18"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"            throw new ParseException(","lastModifiedDate":"2022-10-18"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkDoneTripCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2022-10-18"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2022-10-18"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2022-10-18"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-18"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"gerardstevan":39}},{"path":"src/main/java/seedu/travelr/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.logic.parser.exceptions;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":15}},{"path":"src/main/java/seedu/travelr/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.list.BucketList;","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.list.UniqueEventList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.UniqueTripList;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"    private final BucketList bucketList;","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"    private final UniqueEventList allEventsList;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"    private final UniqueTripList trips;","lastModifiedDate":"2022-10-11"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    /*","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"     *   among constructors.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"    {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"        trips \u003d new UniqueTripList();","lastModifiedDate":"2022-10-02"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"        bucketList \u003d new BucketList();","lastModifiedDate":"2022-10-10"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"        allEventsList \u003d new UniqueEventList();","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"    public AddressBook() {}","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"        this();","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"    //// list overwrite operations","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"    public void setTrips(List\u003cTrip\u003e trips) {","lastModifiedDate":"2022-10-02"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"        this.trips.setTrips(trips);","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Cjun1039"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Cjun1039"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Cjun1039"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Cjun1039"},"content":"        this.bucketList.setEvents(events);","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"    public void setAllEventsList(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-16"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"        this.allEventsList.setEvents(events);","lastModifiedDate":"2022-10-16"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(newData);","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"Cjun1039"},"content":"        assert !newData.getTripList().isEmpty();","lastModifiedDate":"2022-10-06"},{"lineNumber":77,"author":{"gitId":"CeereeC"},"content":"        setAllEventsList(newData.getAllEventList());","lastModifiedDate":"2022-10-16"},{"lineNumber":78,"author":{"gitId":"CeereeC"},"content":"        setTrips(newData.getTripList());","lastModifiedDate":"2022-10-02"},{"lineNumber":79,"author":{"gitId":"Cjun1039"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"CeereeC"},"content":"    //// person-level operations","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"CeereeC"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"CeereeC"},"content":"    public boolean hasTrip(Trip trip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":89,"author":{"gitId":"CeereeC"},"content":"        return trips.contains(trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":93,"author":{"gitId":"seanmanik"},"content":"     * Returns true if this event already exists in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":94,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":95,"author":{"gitId":"seanmanik"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-10-08"},{"lineNumber":96,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"gerardstevan"},"content":"        return bucketList.contains(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"    public void addTrip(Trip p) {","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"        trips.add(p);","lastModifiedDate":"2022-10-02"},{"lineNumber":106,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"seanmanik"},"content":"     * Adds an event to Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"CeereeC"},"content":"    public void addEventToBucketListAndAllEventsList(Event e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"gerardstevan"},"content":"        bucketList.add(e);","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"        addEventToAllEventsList(e);","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"CeereeC"},"content":"    public void addEventToAllEventsList(Event e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":117,"author":{"gitId":"seanmanik"},"content":"        allEventsList.add(e);","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"seanmanik"},"content":"     * Adds an event back into the bucket list after deleting it from a trip.","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"seanmanik"},"content":"    public void returnToBucketList(Event e) {","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"seanmanik"},"content":"        bucketList.add(e);","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":128,"author":{"gitId":"CeereeC"},"content":"     * Removes an event from bucket list before adding it to trip.","lastModifiedDate":"2022-10-16"},{"lineNumber":129,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"CeereeC"},"content":"    public void removeFromBucketList(Event e) {","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"CeereeC"},"content":"        bucketList.remove(e);","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"CeereeC"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"CeereeC"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"CeereeC"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"CeereeC"},"content":"    public void setTrip(Trip target, Trip editedTrip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":140,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":141,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"CeereeC"},"content":"        trips.setTrip(target, editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":146,"author":{"gitId":"seanmanik"},"content":"     * Replaces the given {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2022-10-08"},{"lineNumber":147,"author":{"gitId":"seanmanik"},"content":"     * {@code target} must exist in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":148,"author":{"gitId":"seanmanik"},"content":"     * The new event must not be the same as another existing event in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":149,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":150,"author":{"gitId":"seanmanik"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"gerardstevan"},"content":"        bucketList.setEvent(target, editedEvent);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":155,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"CeereeC"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"CeereeC"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"CeereeC"},"content":"    public void removeTrip(Trip key) {","lastModifiedDate":"2022-10-02"},{"lineNumber":160,"author":{"gitId":"CeereeC"},"content":"        trips.remove(key);","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"gerardstevan"},"content":"     * Gets the desired Event","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"gerardstevan"},"content":"     * {@code key} must exist in the bucketList.","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"gerardstevan"},"content":"    public Event getEvent(Event key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"gerardstevan"},"content":"        return bucketList.getEvent(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"gerardstevan"},"content":"     * Gets the desired Trip","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"gerardstevan"},"content":"     * {@code key} must exist in the trips.","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"gerardstevan"},"content":"    public Trip getTrip(Trip key) {","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"gerardstevan"},"content":"        return trips.getTrip(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":181,"author":{"gitId":"seanmanik"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2022-10-08"},{"lineNumber":182,"author":{"gitId":"seanmanik"},"content":"     * {@code key} must exist in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":183,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":184,"author":{"gitId":"seanmanik"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2022-10-08"},{"lineNumber":185,"author":{"gitId":"gerardstevan"},"content":"        bucketList.remove(key);","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"CeereeC"},"content":"        allEventsList.remove(key);","lastModifiedDate":"2022-10-16"},{"lineNumber":187,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":188,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":189,"author":{"gitId":"Bacon-Strips"},"content":"    public void sortTrips(Comparator\u003cTrip\u003e comp) {","lastModifiedDate":"2022-10-18"},{"lineNumber":190,"author":{"gitId":"Bacon-Strips"},"content":"        trips.sort(comp);","lastModifiedDate":"2022-10-18"},{"lineNumber":191,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":192,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":193,"author":{"gitId":"CeereeC"},"content":"    //// util methods","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":195,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"CeereeC"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"CeereeC"},"content":"        return trips.asUnmodifiableObservableList().size() + \" trips\";","lastModifiedDate":"2022-10-02"},{"lineNumber":198,"author":{"gitId":"CeereeC"},"content":"        // TODO: refine later","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"CeereeC"},"content":"    public ObservableList\u003cTrip\u003e getTripList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":203,"author":{"gitId":"CeereeC"},"content":"        return trips.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-02"},{"lineNumber":204,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":207,"author":{"gitId":"seanmanik"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":208,"author":{"gitId":"gerardstevan"},"content":"        return bucketList.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-11"},{"lineNumber":209,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":210,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":211,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public ObservableList\u003cEvent\u003e getAllEventList() {","lastModifiedDate":"2022-10-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return allEventsList.asUnmodifiableObservableList();","lastModifiedDate":"2022-10-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":215,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":216,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":217,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":218,"author":{"gitId":"CeereeC"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":219,"author":{"gitId":"CeereeC"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":220,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 trips.equals(((AddressBook) other).trips) \u0026\u0026 bucketList.equals(((AddressBook) other).bucketList));","lastModifiedDate":"2022-10-11"},{"lineNumber":221,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":222,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":223,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":224,"author":{"gitId":"CeereeC"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":225,"author":{"gitId":"CeereeC"},"content":"        return trips.hashCode();","lastModifiedDate":"2022-10-02"},{"lineNumber":226,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":227,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":228,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":11,"CeereeC":135,"gerardstevan":26,"-":4,"seanmanik":47,"Bacon-Strips":5}},{"path":"src/main/java/seedu/travelr/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.AllInBucketListPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.trip.ObservableTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":" * The API of the Model component.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"public interface Model {","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"    Predicate\u003cTrip\u003e PREDICATE_SHOW_ALL_TRIPS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"     * Returns the user prefs.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"     * Returns the AddressBook","lastModifiedDate":"2022-10-02"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"    boolean hasTrip(Trip trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":74,"author":{"gitId":"seanmanik"},"content":"     * Returns true if the event already exists in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":75,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"seanmanik"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"CeereeC"},"content":"     * Deletes the given person.","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"CeereeC"},"content":"    void deleteTrip(Trip target);","lastModifiedDate":"2022-10-02"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"seanmanik"},"content":"     * Deletes the given event.","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"seanmanik"},"content":"     * The event must exist in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":87,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":88,"author":{"gitId":"seanmanik"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2022-10-08"},{"lineNumber":89,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":90,"author":{"gitId":"gerardstevan"},"content":"    Event getEvent(Event event);","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"gerardstevan"},"content":"    Trip getTrip(Trip trip);","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"CeereeC"},"content":"     * Adds the given person.","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"CeereeC"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"CeereeC"},"content":"    void addTrip(Trip trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"seanmanik"},"content":"     * Adds the given event.","lastModifiedDate":"2022-10-08"},{"lineNumber":102,"author":{"gitId":"seanmanik"},"content":"     * The event must not already exist in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":103,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":104,"author":{"gitId":"seanmanik"},"content":"    void addEvent(Event event);","lastModifiedDate":"2022-10-08"},{"lineNumber":105,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":106,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"seanmanik"},"content":"     * Returns the given event to the bucket list.","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"seanmanik"},"content":"    void returnToBucketList(Event event);","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":111,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":112,"author":{"gitId":"CeereeC"},"content":"     * Removes the given event from the bucket list.","lastModifiedDate":"2022-10-16"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":114,"author":{"gitId":"CeereeC"},"content":"    void removeFromBucketList(Event event);","lastModifiedDate":"2022-10-16"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":116,"author":{"gitId":"Cjun1039"},"content":"    void updateSelectedTrip(Trip trip);","lastModifiedDate":"2022-10-19"},{"lineNumber":117,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":118,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"CeereeC"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"CeereeC"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"CeereeC"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"CeereeC"},"content":"    void setTrip(Trip target, Trip editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":126,"author":{"gitId":"seanmanik"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2022-10-08"},{"lineNumber":127,"author":{"gitId":"seanmanik"},"content":"     * {@code target} must exist in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"seanmanik"},"content":"     * The event must not already exist in Travelr.","lastModifiedDate":"2022-10-08"},{"lineNumber":129,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"seanmanik"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2022-10-08"},{"lineNumber":131,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":132,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-02"},{"lineNumber":133,"author":{"gitId":"CeereeC"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2022-10-02"},{"lineNumber":134,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-02"},{"lineNumber":135,"author":{"gitId":"CeereeC"},"content":"    ObservableList\u003cTrip\u003e getFilteredTripList();","lastModifiedDate":"2022-10-02"},{"lineNumber":136,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"seanmanik"},"content":"    AllInBucketListPredicate getBucketPredicate();","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":139,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"seanmanik"},"content":"     * Returns an unmodifiable view of the filtered events list","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"seanmanik"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2022-10-08"},{"lineNumber":143,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":144,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"CeereeC"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":147,"author":{"gitId":"CeereeC"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"CeereeC"},"content":"    void updateFilteredTripList(Predicate\u003cTrip\u003e predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":150,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":151,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":152,"author":{"gitId":"seanmanik"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2022-10-08"},{"lineNumber":153,"author":{"gitId":"seanmanik"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":154,"author":{"gitId":"seanmanik"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2022-10-08"},{"lineNumber":155,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":156,"author":{"gitId":"seanmanik"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":157,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"Cjun1039"},"content":"    ObservableTrip getSelectedTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":159,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"Cjun1039"},"content":"    void resetSelectedTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"Bacon-Strips"},"content":"    void sortTripsByComparator(Comparator\u003cTrip\u003e comp);","lastModifiedDate":"2022-10-18"},{"lineNumber":163,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":8,"CeereeC":102,"gerardstevan":4,"seanmanik":47,"Bacon-Strips":2}},{"path":"src/main/java/seedu/travelr/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.AllInBucketListPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.trip.ObservableTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"    private final FilteredList\u003cTrip\u003e filteredTrips;","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"Cjun1039"},"content":"    private ObservableTrip selectedTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cEvent\u003e bucketList;","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"        filteredTrips \u003d new FilteredList\u003c\u003e(this.addressBook.getTripList());","lastModifiedDate":"2022-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getAllEventList());","lastModifiedDate":"2022-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        bucketList \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2022-10-16"},{"lineNumber":47,"author":{"gitId":"Cjun1039"},"content":"        selectedTrip \u003d new ObservableTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"    public ModelManager() {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"        return userPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"CeereeC"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"CeereeC"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"CeereeC"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"CeereeC"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"CeereeC"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"CeereeC"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"CeereeC"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"CeereeC"},"content":"        return addressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"    public boolean hasTrip(Trip trip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"        return addressBook.hasTrip(trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":108,"author":{"gitId":"seanmanik"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2022-10-08"},{"lineNumber":109,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(event);","lastModifiedDate":"2022-10-08"},{"lineNumber":110,"author":{"gitId":"seanmanik"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2022-10-08"},{"lineNumber":111,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":112,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"CeereeC"},"content":"    public void deleteTrip(Trip target) {","lastModifiedDate":"2022-10-02"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"        addressBook.removeTrip(target);","lastModifiedDate":"2022-10-02"},{"lineNumber":116,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":119,"author":{"gitId":"seanmanik"},"content":"    public void deleteEvent(Event e) {","lastModifiedDate":"2022-10-08"},{"lineNumber":120,"author":{"gitId":"seanmanik"},"content":"        addressBook.removeEvent(e);","lastModifiedDate":"2022-10-08"},{"lineNumber":121,"author":{"gitId":"seanmanik"},"content":"        updateFilteredEventList(getBucketPredicate());","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":123,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"CeereeC"},"content":"    public void addTrip(Trip trip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"CeereeC"},"content":"        addressBook.addTrip(trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":127,"author":{"gitId":"CeereeC"},"content":"        updateFilteredTripList(PREDICATE_SHOW_ALL_TRIPS);","lastModifiedDate":"2022-10-02"},{"lineNumber":128,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"CeereeC"},"content":"     * This is when we create a new event","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-16"},{"lineNumber":133,"author":{"gitId":"CeereeC"},"content":"     * @param event","lastModifiedDate":"2022-10-16"},{"lineNumber":134,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":135,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":136,"author":{"gitId":"seanmanik"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"CeereeC"},"content":"        addressBook.addEventToBucketListAndAllEventsList(event);","lastModifiedDate":"2022-10-16"},{"lineNumber":138,"author":{"gitId":"seanmanik"},"content":"        //update filtered trip list??","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"seanmanik"},"content":"    public void returnToBucketList(Event event) {","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"seanmanik"},"content":"        addressBook.returnToBucketList(event);","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-16"},{"lineNumber":147,"author":{"gitId":"CeereeC"},"content":"    public void removeFromBucketList(Event event) {","lastModifiedDate":"2022-10-16"},{"lineNumber":148,"author":{"gitId":"CeereeC"},"content":"        addressBook.removeFromBucketList(event);","lastModifiedDate":"2022-10-16"},{"lineNumber":149,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":150,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":151,"author":{"gitId":"gerardstevan"},"content":"    public Event getEvent(Event event) {","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"gerardstevan"},"content":"        return addressBook.getEvent(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"gerardstevan"},"content":"    public Trip getTrip(Trip trip) {","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"gerardstevan"},"content":"        return addressBook.getTrip(trip);","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"Cjun1039"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":160,"author":{"gitId":"Cjun1039"},"content":"    public ObservableTrip getSelectedTrip() {","lastModifiedDate":"2022-10-19"},{"lineNumber":161,"author":{"gitId":"Cjun1039"},"content":"        return selectedTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":162,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"Cjun1039"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":165,"author":{"gitId":"Cjun1039"},"content":"    public void updateSelectedTrip(Trip trip) {","lastModifiedDate":"2022-10-19"},{"lineNumber":166,"author":{"gitId":"Cjun1039"},"content":"        selectedTrip.setTrip(trip);","lastModifiedDate":"2022-10-19"},{"lineNumber":167,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":168,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":169,"author":{"gitId":"Cjun1039"},"content":"    @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"Cjun1039"},"content":"    public void resetSelectedTrip() {","lastModifiedDate":"2022-10-19"},{"lineNumber":171,"author":{"gitId":"Cjun1039"},"content":"        selectedTrip.resetTrip();","lastModifiedDate":"2022-10-19"},{"lineNumber":172,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":173,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":174,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"CeereeC"},"content":"    public void setTrip(Trip target, Trip editedTrip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":176,"author":{"gitId":"CeereeC"},"content":"        requireAllNonNull(target, editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":177,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"CeereeC"},"content":"        addressBook.setTrip(target, editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":179,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":182,"author":{"gitId":"seanmanik"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-08"},{"lineNumber":183,"author":{"gitId":"seanmanik"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-10-08"},{"lineNumber":184,"author":{"gitId":"seanmanik"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2022-10-08"},{"lineNumber":185,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":186,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":187,"author":{"gitId":"CeereeC"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Trip List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":188,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":189,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":190,"author":{"gitId":"CeereeC"},"content":"     * Returns an unmodifiable view of the list of {@code Trip} backed by the internal list of","lastModifiedDate":"2022-10-02"},{"lineNumber":191,"author":{"gitId":"CeereeC"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":193,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":194,"author":{"gitId":"CeereeC"},"content":"    public ObservableList\u003cTrip\u003e getFilteredTripList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":195,"author":{"gitId":"CeereeC"},"content":"        return filteredTrips;","lastModifiedDate":"2022-10-02"},{"lineNumber":196,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"seanmanik"},"content":"    public AllInBucketListPredicate getBucketPredicate() {","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new AllInBucketListPredicate(bucketList);","lastModifiedDate":"2022-10-16"},{"lineNumber":201,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":203,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":204,"author":{"gitId":"seanmanik"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-10-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return filteredEvents;","lastModifiedDate":"2022-10-16"},{"lineNumber":206,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":207,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":208,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":209,"author":{"gitId":"CeereeC"},"content":"    public void updateFilteredTripList(Predicate\u003cTrip\u003e predicate) {","lastModifiedDate":"2022-10-02"},{"lineNumber":210,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-09-30"},{"lineNumber":211,"author":{"gitId":"CeereeC"},"content":"        filteredTrips.setPredicate(predicate);","lastModifiedDate":"2022-10-02"},{"lineNumber":212,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":213,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":214,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":215,"author":{"gitId":"seanmanik"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2022-10-08"},{"lineNumber":216,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2022-10-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2022-10-16"},{"lineNumber":218,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":219,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":220,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":221,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2022-09-30"},{"lineNumber":222,"author":{"gitId":"CeereeC"},"content":"        // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":223,"author":{"gitId":"CeereeC"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":224,"author":{"gitId":"CeereeC"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":225,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":226,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":227,"author":{"gitId":"CeereeC"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":228,"author":{"gitId":"CeereeC"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":229,"author":{"gitId":"CeereeC"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":230,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":231,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":232,"author":{"gitId":"CeereeC"},"content":"        // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":233,"author":{"gitId":"CeereeC"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2022-09-30"},{"lineNumber":234,"author":{"gitId":"CeereeC"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2022-09-30"},{"lineNumber":235,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2022-09-30"},{"lineNumber":236,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 filteredTrips.equals(other.filteredTrips);","lastModifiedDate":"2022-10-02"},{"lineNumber":237,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":238,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":239,"author":{"gitId":"Bacon-Strips"},"content":"    @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":240,"author":{"gitId":"Bacon-Strips"},"content":"    public void sortTripsByComparator(Comparator\u003cTrip\u003e comp) {","lastModifiedDate":"2022-10-18"},{"lineNumber":241,"author":{"gitId":"Bacon-Strips"},"content":"        addressBook.sortTrips(comp);","lastModifiedDate":"2022-10-18"},{"lineNumber":242,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":243,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":244,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":18,"CeereeC":161,"gerardstevan":8,"-":6,"seanmanik":45,"Bacon-Strips":6}},{"path":"src/main/java/seedu/travelr/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"    ObservableList\u003cTrip\u003e getTripList();","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    ObservableList\u003cEvent\u003e getAllEventList();","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":4,"-":14,"seanmanik":4}},{"path":"src/main/java/seedu/travelr/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":14}},{"path":"src/main/java/seedu/travelr/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":85}},{"path":"src/main/java/seedu/travelr/model/component/DateField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.component;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.time.LocalDate;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":" * Represents a Trip\u0027s date in the address book.","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"public class DateField {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"            \"Date should follow the format dd-mm-yyyy, and it should not be blank\";","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"    // Formatter has to be initialised before DEFAULT_DATE_FIELD","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"    private static final DateTimeFormatter df \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\");","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"    private static final String DEFAULT_DATE_VALUE \u003d \"01-01-0000\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"    public final LocalDate dateValue;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"     * @param date A valid name.","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    public DateField(String date) {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(date);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"        dateValue \u003d LocalDate.parse(date, df);","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"        try {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"            LocalDate date \u003d LocalDate.parse(test, df);","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"            return false;","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"        return true;","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"    public static String getDefaultValue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"        return DEFAULT_DATE_VALUE;","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"    public static DateField getDefaultDateField() {","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"        return new DateField(DEFAULT_DATE_VALUE);","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"    public boolean isDefaultValue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"        return this.equals(getDefaultDateField());","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"        return dateValue.format(df);","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"                || (other instanceof DateField // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 dateValue.equals(((DateField) other).dateValue)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"        return dateValue.hashCode();","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":77,"author":{"gitId":"CeereeC"},"content":"    public int compareTo(DateField dateField) {","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"CeereeC"},"content":"        return dateValue.compareTo(dateField.dateValue);","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"CeereeC":81}},{"path":"src/main/java/seedu/travelr/model/component/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cjun1039"},"content":"package seedu.travelr.model.component;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":3,"author":{"gitId":"Cjun1039"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-06"},{"lineNumber":4,"author":{"gitId":"Cjun1039"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-06"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":6,"author":{"gitId":"Cjun1039"},"content":"/**","lastModifiedDate":"2022-10-06"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":" * Represents a Trip\u0027s title in the address book.","lastModifiedDate":"2022-10-06"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2022-10-06"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":" */","lastModifiedDate":"2022-10-06"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":"public class Description {","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-06"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"            \"Description should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"    /*","lastModifiedDate":"2022-10-06"},{"lineNumber":16,"author":{"gitId":"Cjun1039"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-10-06"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"    public final String value;","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"Cjun1039"},"content":"     *","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":"     * @param value A valid name.","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"    public Description(String value) {","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Cjun1039"},"content":"        requireNonNull(value);","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"Cjun1039"},"content":"        checkArgument(isValidDescription(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Cjun1039"},"content":"        this.value \u003d value;","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"Cjun1039"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2022-10-06"},{"lineNumber":36,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"Cjun1039"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Cjun1039"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":40,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":41,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":42,"author":{"gitId":"Cjun1039"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":43,"author":{"gitId":"Cjun1039"},"content":"    public String toString() {","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Cjun1039"},"content":"        return value;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":46,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":47,"author":{"gitId":"Cjun1039"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Cjun1039"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Cjun1039"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-06"},{"lineNumber":50,"author":{"gitId":"Cjun1039"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2022-10-14"},{"lineNumber":51,"author":{"gitId":"Cjun1039"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":53,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":54,"author":{"gitId":"Cjun1039"},"content":"    @Override","lastModifiedDate":"2022-10-06"},{"lineNumber":55,"author":{"gitId":"Cjun1039"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-06"},{"lineNumber":56,"author":{"gitId":"Cjun1039"},"content":"        return value.hashCode();","lastModifiedDate":"2022-10-06"},{"lineNumber":57,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"Cjun1039"},"content":"}","lastModifiedDate":"2022-10-06"}],"authorContributionMap":{"Cjun1039":58,"CeereeC":1}},{"path":"src/main/java/seedu/travelr/model/component/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.component;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":" * Represents a Trip\u0027s location in the address book.","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"public class Location {","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"            \"Locations should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"    /*","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"    private static final String DEFAULT_LOCATION_NAME \u003d \"Default\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"    public final String locationName;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"     * @param location A valid name.","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    public Location(String location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"        this.locationName \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"    public static String getDefaultValue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"        return DEFAULT_LOCATION_NAME;","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"    public static Location getDefaultLocation() {","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"        return new Location(DEFAULT_LOCATION_NAME);","lastModifiedDate":"2022-10-20"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"    public boolean isDefaultValue() {","lastModifiedDate":"2022-10-20"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"        return this.equals(getDefaultLocation());","lastModifiedDate":"2022-10-20"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"    public String toString() {","lastModifiedDate":"2022-10-20"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"        return locationName;","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 locationName.equals(((Location) other).locationName)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"        return locationName.hashCode();","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"    public int compareTo(Location location) {","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"        return locationName.compareToIgnoreCase(location.locationName);","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"CeereeC":76}},{"path":"src/main/java/seedu/travelr/model/component/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cjun1039"},"content":"package seedu.travelr.model.component;","lastModifiedDate":"2022-10-14"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":" * Represents a Trip\u0027s title in the address book.","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"public class Title {","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"            \"Titles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"    /*","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"     * The first character of the trip must not be a whitespace,","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"    public final String fullTitle;","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"     * @param title A valid name.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"    public Title(String title) {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(title);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"        fullTitle \u003d title;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"    public String toString() {","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"        return fullTitle;","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 fullTitle.equals(((Title) other).fullTitle)); // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"        return fullTitle.hashCode();","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"    public int compareTo(Title title) {","lastModifiedDate":"2022-10-18"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        return fullTitle.compareToIgnoreCase(title.fullTitle);","lastModifiedDate":"2022-10-18"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":63,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"Cjun1039":1,"seanmanik":58,"Bacon-Strips":4}},{"path":"src/main/java/seedu/travelr/model/event/AllInBucketListPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.model.event;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Tests that an {@code Event}\u0027s is found in Travelr\u0027s bucket list.","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"public class AllInBucketListPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private FilteredList\u003cEvent\u003e bucketList;","lastModifiedDate":"2022-10-16"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"    public AllInBucketListPredicate(FilteredList\u003cEvent\u003e bucketList) {","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"        this.bucketList \u003d bucketList;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"        return bucketList.contains(event);","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof AllInBucketListPredicate); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"-":6,"seanmanik":21}},{"path":"src/main/java/seedu/travelr/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.event;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.ParserUtil.EVENT_DESCRIPTION_PLACEHOLDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidEventTitle(String)}","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"public class Event {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    public final Title title;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    public final Description description;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"     * Constructs an {@code Event}.","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"     * @param title A valid title.","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"     * @param description A valid description.","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"    public Event(Title title, Description description) {","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"        requireAllNonNull(title, description);","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        //checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"     * Constructs an {@code Event}.","lastModifiedDate":"2022-10-10"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-10-10"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"     * @param eventName A valid title.","lastModifiedDate":"2022-10-10"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"    public Event(Title eventName) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        this.title \u003d eventName;","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"        this.description \u003d new Description(EVENT_DESCRIPTION_PLACEHOLDER);","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"    public static boolean isValidEventTitle(String test) {","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"seanmanik"},"content":"    public Title getTitle() {","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"seanmanik"},"content":"        return title;","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"        return description;","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"Cjun1039"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"Cjun1039"},"content":"            return true;","lastModifiedDate":"2022-10-14"},{"lineNumber":65,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":66,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Cjun1039"},"content":"        if (other instanceof Event) {","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Cjun1039"},"content":"            Event otherEvent \u003d (Event) other;","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Cjun1039"},"content":"            return otherEvent.title.equals(this.title);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":72,"author":{"gitId":"Cjun1039"},"content":"        return false;","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":76,"author":{"gitId":"seanmanik"},"content":"     * Returns true if both events have the same title.","lastModifiedDate":"2022-10-08"},{"lineNumber":77,"author":{"gitId":"seanmanik"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-10-08"},{"lineNumber":78,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":79,"author":{"gitId":"Cjun1039"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2022-10-14"},{"lineNumber":80,"author":{"gitId":"seanmanik"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":81,"author":{"gitId":"seanmanik"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":82,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":83,"author":{"gitId":"seanmanik"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2022-10-08"},{"lineNumber":84,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 otherEvent.getTitle().equals(getTitle());","lastModifiedDate":"2022-10-08"},{"lineNumber":85,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":86,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"        return title.hashCode();","lastModifiedDate":"2022-10-07"},{"lineNumber":90,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"CeereeC"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"CeereeC"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"seanmanik"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-10-08"},{"lineNumber":97,"author":{"gitId":"seanmanik"},"content":"        builder.append(getTitle())","lastModifiedDate":"2022-10-08"},{"lineNumber":98,"author":{"gitId":"seanmanik"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-08"},{"lineNumber":99,"author":{"gitId":"seanmanik"},"content":"                .append(getDescription());","lastModifiedDate":"2022-10-08"},{"lineNumber":100,"author":{"gitId":"seanmanik"},"content":"        return builder.toString();","lastModifiedDate":"2022-10-08"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":15,"CeereeC":35,"gerardstevan":8,"seanmanik":36,"Bacon-Strips":9}},{"path":"src/main/java/seedu/travelr/model/event/EventCompletedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.model.event;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import java.util.List;","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.list.Itineraries;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":" * Tests that an {@code Event}\u0027s is completed.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"public class EventCompletedPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"    private FilteredList\u003cTrip\u003e completedTrips;","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"    private List\u003cEvent\u003e completedEvents;","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"     * Creates a new EventInItineraryPredicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"    public EventCompletedPredicate(FilteredList\u003cTrip\u003e completedTrips) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"        this.completedTrips \u003d completedTrips;","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"        completedEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"        for (Trip t : completedTrips) {","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"            Itineraries currItinerary \u003d t.getItinerary();","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"            for (Event e : currItinerary) {","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"                completedEvents.add(e);","lastModifiedDate":"2022-10-20"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"            }","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"        return completedEvents.contains(event);","lastModifiedDate":"2022-10-20"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof EventCompletedPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 completedEvents.equals(((EventCompletedPredicate) other).completedEvents)); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"seanmanik":45}},{"path":"src/main/java/seedu/travelr/model/event/EventInItineraryPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.model.event;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.list.Itineraries;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that an {@code Event}\u0027s is found in the given trip\u0027s itinerary.","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"public class EventInItineraryPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"    private final Index index;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"    private Itineraries itinerary;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Creates a new EventInItineraryPredicate.","lastModifiedDate":"2022-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    public EventInItineraryPredicate(Index index) {","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"        this.index \u003d index;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"        this.itinerary \u003d null;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Sets the itinerary for this predicate.","lastModifiedDate":"2022-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"    public void setItinerary(Itineraries itinerary) {","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"        this.itinerary \u003d itinerary;","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the Index of this Predicate.","lastModifiedDate":"2022-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-16"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"    public Index getIndex() {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"        return index;","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"        return itinerary.contains(event);","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof EventInItineraryPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 index.equals(((EventInItineraryPredicate) other).index)); // state check","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"-":14,"seanmanik":35}},{"path":"src/main/java/seedu/travelr/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.model.event.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":" * identity).","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2022-10-10"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"        super(\"Operation would result in duplicate trips\");","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"gerardstevan":11}},{"path":"src/main/java/seedu/travelr/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.model.event.exceptions;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"gerardstevan":6}},{"path":"src/main/java/seedu/travelr/model/list/BucketList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.model.list;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":" * Represents the BucketList class.","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"public class BucketList extends EventList {","lastModifiedDate":"2022-10-11"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"    private final Set\u003cEvent\u003e events \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if the list contains an Event with the given title.","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"     * @param title the title to be searched","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"    public boolean contains(String title) {","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"gerardstevan"},"content":"        Event temp \u003d new Event(new Title(title));","lastModifiedDate":"2022-10-11"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"        return events.contains(temp);","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if the list contains an equivalent Event as the given argument.","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"     *","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"     * @param toCheck the event desired","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"Cjun1039"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"     * Returns the internalList","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"     * @return","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"    protected ObservableList\u003cEvent\u003e getInternalList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"        return this.internalList;","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"        addEvent(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":75,"author":{"gitId":"Cjun1039"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"Cjun1039"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"gerardstevan"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":83,"author":{"gitId":"Cjun1039"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":84,"author":{"gitId":"gerardstevan"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":87,"author":{"gitId":"Cjun1039"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":88,"author":{"gitId":"gerardstevan"},"content":"        removeEvent(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":89,"author":{"gitId":"Cjun1039"},"content":"        addEvent(editedEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":90,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"gerardstevan"},"content":"     * Sets the internalList","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"gerardstevan"},"content":"    public void setInternalList(Set\u003cEvent\u003e collections) {","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"gerardstevan"},"content":"        addEvents(collections);","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"gerardstevan"},"content":"        internalList.setAll(collections);","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"gerardstevan"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"gerardstevan"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"gerardstevan"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"gerardstevan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"gerardstevan"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"gerardstevan"},"content":"        removeEvent(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"gerardstevan"},"content":"    public void setEvents(EventList replacement) {","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"gerardstevan"},"content":"        internalList.setAll(replacement.getInternalList());","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"gerardstevan"},"content":"     * Replaces the contents of this list with {@code trips}.","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"gerardstevan"},"content":"     * {@code trips} must not contain duplicate trips.","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"gerardstevan"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"gerardstevan"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"gerardstevan"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"gerardstevan"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"gerardstevan"},"content":"        internalList.setAll(events);","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"Cjun1039"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-10-14"},{"lineNumber":130,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"gerardstevan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"gerardstevan"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"gerardstevan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"gerardstevan"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"gerardstevan"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-11"},{"lineNumber":142,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":143,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":144,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":145,"author":{"gitId":"gerardstevan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"gerardstevan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"gerardstevan"},"content":"                || (other instanceof EventList // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 internalList.equals(((EventList) other).getInternalList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"gerardstevan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"gerardstevan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if {@code trips} contains only unique trips.","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"gerardstevan"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"gerardstevan"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":161,"author":{"gitId":"gerardstevan"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"Cjun1039"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2022-10-14"},{"lineNumber":163,"author":{"gitId":"gerardstevan"},"content":"                    return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"gerardstevan"},"content":"        return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"CeereeC"},"content":"    private void addEvent(Event event) {","lastModifiedDate":"2022-10-16"},{"lineNumber":171,"author":{"gitId":"gerardstevan"},"content":"        events.add(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":172,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":173,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":174,"author":{"gitId":"CeereeC"},"content":"    private void addEvents(Set\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-16"},{"lineNumber":175,"author":{"gitId":"gerardstevan"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-10-10"},{"lineNumber":176,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":177,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":178,"author":{"gitId":"CeereeC"},"content":"    private void removeEvent(Event event) {","lastModifiedDate":"2022-10-16"},{"lineNumber":179,"author":{"gitId":"gerardstevan"},"content":"        events.remove(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":180,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":181,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":182,"author":{"gitId":"CeereeC"},"content":"    private void removeEvent(int i) {","lastModifiedDate":"2022-10-16"},{"lineNumber":183,"author":{"gitId":"gerardstevan"},"content":"        events.remove(events.toArray()[i - 1]);","lastModifiedDate":"2022-10-10"},{"lineNumber":184,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":185,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":186,"author":{"gitId":"gerardstevan"},"content":"    public Event getEvent(int i) {","lastModifiedDate":"2022-10-10"},{"lineNumber":187,"author":{"gitId":"gerardstevan"},"content":"        Object temp \u003d events.toArray()[i - 1];","lastModifiedDate":"2022-10-10"},{"lineNumber":188,"author":{"gitId":"gerardstevan"},"content":"        Event event \u003d (Event) temp;","lastModifiedDate":"2022-10-10"},{"lineNumber":189,"author":{"gitId":"gerardstevan"},"content":"        return event;","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"gerardstevan"},"content":"    public Event getEvent(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"gerardstevan"},"content":"        Object[] temp \u003d events.toArray();","lastModifiedDate":"2022-10-11"},{"lineNumber":194,"author":{"gitId":"Cjun1039"},"content":"        for (Object o : temp) {","lastModifiedDate":"2022-10-14"},{"lineNumber":195,"author":{"gitId":"Cjun1039"},"content":"            if (o.equals(event)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":196,"author":{"gitId":"Cjun1039"},"content":"                return (Event) o;","lastModifiedDate":"2022-10-14"},{"lineNumber":197,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":198,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":199,"author":{"gitId":"gerardstevan"},"content":"        return null;","lastModifiedDate":"2022-10-11"},{"lineNumber":200,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Cjun1039":12,"CeereeC":4,"gerardstevan":186}},{"path":"src/main/java/seedu/travelr/model/list/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.model.list;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":" * Represents the EventList interface.","lastModifiedDate":"2022-10-10"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"abstract class EventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"    abstract ObservableList\u003cEvent\u003e getInternalList();","lastModifiedDate":"2022-10-11"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"gerardstevan":11}},{"path":"src/main/java/seedu/travelr/model/list/Itineraries.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gerardstevan"},"content":"package seedu.travelr.model.list;","lastModifiedDate":"2022-10-10"},{"lineNumber":2,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-11"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-11"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-11"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-11"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-11"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-11"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2022-10-11"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2022-10-11"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":" * Represents the Itineraries class.","lastModifiedDate":"2022-10-10"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"public class Itineraries extends EventList {","lastModifiedDate":"2022-10-11"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"    private final Set\u003cEvent\u003e events \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-10"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-11"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-11"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-11"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-10-11"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":32,"author":{"gitId":"gerardstevan"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2022-10-11"},{"lineNumber":33,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-11"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"     * Returns whether an Event with the specified title exist in the events","lastModifiedDate":"2022-10-11"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"     * @param title the title to be searched","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"gerardstevan"},"content":"     * @return true if the events contains an event with the specified title","lastModifiedDate":"2022-10-11"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":42,"author":{"gitId":"gerardstevan"},"content":"    public boolean contains(String title) {","lastModifiedDate":"2022-10-11"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"        Event temp \u003d new Event(new Title(title));","lastModifiedDate":"2022-10-11"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"        return events.contains(temp);","lastModifiedDate":"2022-10-11"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"     * Returns the internalList","lastModifiedDate":"2022-10-11"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"     * @return the internalList","lastModifiedDate":"2022-10-11"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"    protected ObservableList\u003cEvent\u003e getInternalList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"        return this.internalList;","lastModifiedDate":"2022-10-11"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2022-10-11"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-11"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"        addEvent(toAdd);","lastModifiedDate":"2022-10-11"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-10-11"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":74,"author":{"gitId":"Cjun1039"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Cjun1039"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-11"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":80,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":81,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":82,"author":{"gitId":"Cjun1039"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":83,"author":{"gitId":"gerardstevan"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-11"},{"lineNumber":84,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":85,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":86,"author":{"gitId":"Cjun1039"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":87,"author":{"gitId":"gerardstevan"},"content":"        removeEvent(target);","lastModifiedDate":"2022-10-11"},{"lineNumber":88,"author":{"gitId":"Cjun1039"},"content":"        addEvent(editedEvent);","lastModifiedDate":"2022-10-14"},{"lineNumber":89,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":90,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"gerardstevan"},"content":"     * Sets the internalList","lastModifiedDate":"2022-10-11"},{"lineNumber":93,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":94,"author":{"gitId":"gerardstevan"},"content":"    public void setInternalList(Set\u003cEvent\u003e collections) {","lastModifiedDate":"2022-10-11"},{"lineNumber":95,"author":{"gitId":"gerardstevan"},"content":"        addEvents(collections);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"gerardstevan"},"content":"        internalList.setAll(collections);","lastModifiedDate":"2022-10-11"},{"lineNumber":97,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":98,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":99,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":100,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":101,"author":{"gitId":"gerardstevan"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":102,"author":{"gitId":"gerardstevan"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-11"},{"lineNumber":103,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":104,"author":{"gitId":"gerardstevan"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2022-10-11"},{"lineNumber":105,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":106,"author":{"gitId":"gerardstevan"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":107,"author":{"gitId":"gerardstevan"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-10-11"},{"lineNumber":108,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":109,"author":{"gitId":"gerardstevan"},"content":"        removeEvent(toRemove);","lastModifiedDate":"2022-10-11"},{"lineNumber":110,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":111,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":112,"author":{"gitId":"gerardstevan"},"content":"    public void setEvents(EventList replacement) {","lastModifiedDate":"2022-10-11"},{"lineNumber":113,"author":{"gitId":"gerardstevan"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-11"},{"lineNumber":114,"author":{"gitId":"gerardstevan"},"content":"        internalList.setAll(replacement.getInternalList());","lastModifiedDate":"2022-10-11"},{"lineNumber":115,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":116,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":117,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":118,"author":{"gitId":"gerardstevan"},"content":"     * Replaces the contents of this list with {@code trips}.","lastModifiedDate":"2022-10-11"},{"lineNumber":119,"author":{"gitId":"gerardstevan"},"content":"     * {@code trips} must not contain duplicate trips.","lastModifiedDate":"2022-10-11"},{"lineNumber":120,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":121,"author":{"gitId":"gerardstevan"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-11"},{"lineNumber":122,"author":{"gitId":"gerardstevan"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2022-10-11"},{"lineNumber":123,"author":{"gitId":"gerardstevan"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":124,"author":{"gitId":"gerardstevan"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-11"},{"lineNumber":125,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":126,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":127,"author":{"gitId":"gerardstevan"},"content":"        internalList.setAll(events);","lastModifiedDate":"2022-10-11"},{"lineNumber":128,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":129,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":130,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":131,"author":{"gitId":"gerardstevan"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-11"},{"lineNumber":132,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":133,"author":{"gitId":"gerardstevan"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":134,"author":{"gitId":"gerardstevan"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-11"},{"lineNumber":135,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":136,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":137,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":138,"author":{"gitId":"gerardstevan"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2022-10-11"},{"lineNumber":139,"author":{"gitId":"gerardstevan"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-11"},{"lineNumber":140,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":141,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":142,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-10"},{"lineNumber":143,"author":{"gitId":"gerardstevan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-11"},{"lineNumber":144,"author":{"gitId":"gerardstevan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-11"},{"lineNumber":145,"author":{"gitId":"gerardstevan"},"content":"                || (other instanceof EventList // instanceof handles nulls","lastModifiedDate":"2022-10-11"},{"lineNumber":146,"author":{"gitId":"gerardstevan"},"content":"                \u0026\u0026 internalList.equals(((EventList) other).getInternalList()));","lastModifiedDate":"2022-10-11"},{"lineNumber":147,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":148,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":149,"author":{"gitId":"gerardstevan"},"content":"    @Override","lastModifiedDate":"2022-10-11"},{"lineNumber":150,"author":{"gitId":"gerardstevan"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-11"},{"lineNumber":151,"author":{"gitId":"gerardstevan"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-11"},{"lineNumber":152,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":153,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":154,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-11"},{"lineNumber":155,"author":{"gitId":"gerardstevan"},"content":"     * Returns true if {@code trips} contains only unique trips.","lastModifiedDate":"2022-10-11"},{"lineNumber":156,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-11"},{"lineNumber":157,"author":{"gitId":"gerardstevan"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-11"},{"lineNumber":158,"author":{"gitId":"gerardstevan"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":159,"author":{"gitId":"gerardstevan"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":160,"author":{"gitId":"Cjun1039"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2022-10-14"},{"lineNumber":161,"author":{"gitId":"gerardstevan"},"content":"                    return false;","lastModifiedDate":"2022-10-11"},{"lineNumber":162,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-10-11"},{"lineNumber":163,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":164,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":165,"author":{"gitId":"gerardstevan"},"content":"        return true;","lastModifiedDate":"2022-10-11"},{"lineNumber":166,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":167,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":168,"author":{"gitId":"gerardstevan"},"content":"    public Event getEvent(Event event) {","lastModifiedDate":"2022-10-11"},{"lineNumber":169,"author":{"gitId":"gerardstevan"},"content":"        Object[] temp \u003d events.toArray();","lastModifiedDate":"2022-10-11"},{"lineNumber":170,"author":{"gitId":"gerardstevan"},"content":"        int size \u003d temp.length;","lastModifiedDate":"2022-10-11"},{"lineNumber":171,"author":{"gitId":"gerardstevan"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2022-10-11"},{"lineNumber":172,"author":{"gitId":"gerardstevan"},"content":"            if (temp[i].equals(event)) {","lastModifiedDate":"2022-10-11"},{"lineNumber":173,"author":{"gitId":"gerardstevan"},"content":"                return (Event) temp[i];","lastModifiedDate":"2022-10-11"},{"lineNumber":174,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-10-11"},{"lineNumber":175,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-11"},{"lineNumber":176,"author":{"gitId":"gerardstevan"},"content":"        return null;","lastModifiedDate":"2022-10-11"},{"lineNumber":177,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":178,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":179,"author":{"gitId":"gerardstevan"},"content":"    public Event getEvent(int i) {","lastModifiedDate":"2022-10-11"},{"lineNumber":180,"author":{"gitId":"gerardstevan"},"content":"        Object temp \u003d events.toArray()[i - 1];","lastModifiedDate":"2022-10-11"},{"lineNumber":181,"author":{"gitId":"gerardstevan"},"content":"        Event event \u003d (Event) temp;","lastModifiedDate":"2022-10-11"},{"lineNumber":182,"author":{"gitId":"gerardstevan"},"content":"        return event;","lastModifiedDate":"2022-10-11"},{"lineNumber":183,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":184,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":185,"author":{"gitId":"gerardstevan"},"content":"    public Set\u003cEvent\u003e getList() {","lastModifiedDate":"2022-10-11"},{"lineNumber":186,"author":{"gitId":"gerardstevan"},"content":"        return events;","lastModifiedDate":"2022-10-11"},{"lineNumber":187,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":188,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":189,"author":{"gitId":"gerardstevan"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":190,"author":{"gitId":"gerardstevan"},"content":"        events.add(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":191,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":192,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"gerardstevan"},"content":"    public void addEvents(Set\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"gerardstevan"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":197,"author":{"gitId":"gerardstevan"},"content":"    public void removeEvent(int i) {","lastModifiedDate":"2022-10-10"},{"lineNumber":198,"author":{"gitId":"gerardstevan"},"content":"        events.remove(events.toArray()[i - 1]);","lastModifiedDate":"2022-10-10"},{"lineNumber":199,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":200,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":201,"author":{"gitId":"gerardstevan"},"content":"    public void removeEvent(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":202,"author":{"gitId":"gerardstevan"},"content":"        events.remove(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":203,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":204,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":205,"author":{"gitId":"gerardstevan"},"content":"}","lastModifiedDate":"2022-10-10"}],"authorContributionMap":{"Cjun1039":9,"gerardstevan":196}},{"path":"src/main/java/seedu/travelr/model/list/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.model.list;","lastModifiedDate":"2022-10-15"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-16"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"/**","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":" * Represents the BucketList class.","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":" */","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"public class UniqueEventList extends EventList {","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"    private final Set\u003cEvent\u003e events \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"     * Returns true if the list contains an Event with the given title.","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"     * @param title the title to be searched","lastModifiedDate":"2022-10-15"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"    public boolean contains(String title) {","lastModifiedDate":"2022-10-15"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"        Event temp \u003d new Event(new Title(title));","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"        return events.contains(temp);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"     * Returns true if the list contains an equivalent Event as the given argument.","lastModifiedDate":"2022-10-15"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"     *","lastModifiedDate":"2022-10-15"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"     * @param toCheck the event desired","lastModifiedDate":"2022-10-15"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2022-10-15"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"     * Returns the internalList","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"seanmanik"},"content":"     * @return","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"seanmanik"},"content":"    protected ObservableList\u003cEvent\u003e getInternalList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"        return this.internalList;","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":60,"author":{"gitId":"seanmanik"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"seanmanik"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"seanmanik"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"seanmanik"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":67,"author":{"gitId":"seanmanik"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":68,"author":{"gitId":"seanmanik"},"content":"        addEvent(toAdd);","lastModifiedDate":"2022-10-15"},{"lineNumber":69,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":70,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":71,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":72,"author":{"gitId":"seanmanik"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"seanmanik"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"seanmanik"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":75,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"seanmanik"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-15"},{"lineNumber":77,"author":{"gitId":"seanmanik"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"seanmanik"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"seanmanik"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-10-15"},{"lineNumber":81,"author":{"gitId":"seanmanik"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-10-15"},{"lineNumber":82,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":83,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":84,"author":{"gitId":"seanmanik"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":85,"author":{"gitId":"seanmanik"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-15"},{"lineNumber":86,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":87,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":88,"author":{"gitId":"seanmanik"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2022-10-15"},{"lineNumber":89,"author":{"gitId":"seanmanik"},"content":"        removeEvent(target);","lastModifiedDate":"2022-10-15"},{"lineNumber":90,"author":{"gitId":"seanmanik"},"content":"        addEvent(editedEvent);","lastModifiedDate":"2022-10-15"},{"lineNumber":91,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":92,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":93,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":94,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":95,"author":{"gitId":"seanmanik"},"content":"     * Sets the internalList","lastModifiedDate":"2022-10-15"},{"lineNumber":96,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":97,"author":{"gitId":"seanmanik"},"content":"    public void setInternalList(Set\u003cEvent\u003e collections) {","lastModifiedDate":"2022-10-15"},{"lineNumber":98,"author":{"gitId":"seanmanik"},"content":"        addEvents(collections);","lastModifiedDate":"2022-10-15"},{"lineNumber":99,"author":{"gitId":"seanmanik"},"content":"        internalList.setAll(collections);","lastModifiedDate":"2022-10-15"},{"lineNumber":100,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":101,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":102,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":103,"author":{"gitId":"seanmanik"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":104,"author":{"gitId":"seanmanik"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-10-15"},{"lineNumber":105,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":106,"author":{"gitId":"seanmanik"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2022-10-15"},{"lineNumber":107,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-10-15"},{"lineNumber":108,"author":{"gitId":"seanmanik"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":109,"author":{"gitId":"seanmanik"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2022-10-15"},{"lineNumber":110,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":111,"author":{"gitId":"seanmanik"},"content":"        removeEvent(toRemove);","lastModifiedDate":"2022-10-15"},{"lineNumber":112,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":113,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":114,"author":{"gitId":"seanmanik"},"content":"    public void setEvents(EventList replacement) {","lastModifiedDate":"2022-10-15"},{"lineNumber":115,"author":{"gitId":"seanmanik"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-10-15"},{"lineNumber":116,"author":{"gitId":"seanmanik"},"content":"        internalList.setAll(replacement.getInternalList());","lastModifiedDate":"2022-10-15"},{"lineNumber":117,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":118,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":119,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":120,"author":{"gitId":"seanmanik"},"content":"     * Replaces the contents of this list with {@code trips}.","lastModifiedDate":"2022-10-15"},{"lineNumber":121,"author":{"gitId":"seanmanik"},"content":"     * {@code trips} must not contain duplicate trips.","lastModifiedDate":"2022-10-15"},{"lineNumber":122,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":123,"author":{"gitId":"seanmanik"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-15"},{"lineNumber":124,"author":{"gitId":"seanmanik"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2022-10-15"},{"lineNumber":125,"author":{"gitId":"seanmanik"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":126,"author":{"gitId":"seanmanik"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"seanmanik"},"content":"        internalList.setAll(events);","lastModifiedDate":"2022-10-15"},{"lineNumber":130,"author":{"gitId":"seanmanik"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-10-15"},{"lineNumber":131,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":132,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":134,"author":{"gitId":"seanmanik"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-10-15"},{"lineNumber":135,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":136,"author":{"gitId":"seanmanik"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-15"},{"lineNumber":137,"author":{"gitId":"seanmanik"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":138,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":139,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":140,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":141,"author":{"gitId":"seanmanik"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"seanmanik"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":145,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":146,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-15"},{"lineNumber":147,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-15"},{"lineNumber":148,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof EventList // instanceof handles nulls","lastModifiedDate":"2022-10-15"},{"lineNumber":149,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 internalList.equals(((EventList) other).getInternalList()));","lastModifiedDate":"2022-10-15"},{"lineNumber":150,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":151,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":152,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-15"},{"lineNumber":153,"author":{"gitId":"seanmanik"},"content":"    public int hashCode() {","lastModifiedDate":"2022-10-15"},{"lineNumber":154,"author":{"gitId":"seanmanik"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-10-15"},{"lineNumber":155,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":158,"author":{"gitId":"seanmanik"},"content":"     * Returns true if {@code trips} contains only unique trips.","lastModifiedDate":"2022-10-15"},{"lineNumber":159,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":160,"author":{"gitId":"seanmanik"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-15"},{"lineNumber":161,"author":{"gitId":"seanmanik"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2022-10-15"},{"lineNumber":162,"author":{"gitId":"seanmanik"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2022-10-15"},{"lineNumber":163,"author":{"gitId":"seanmanik"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2022-10-15"},{"lineNumber":164,"author":{"gitId":"seanmanik"},"content":"                    return false;","lastModifiedDate":"2022-10-15"},{"lineNumber":165,"author":{"gitId":"seanmanik"},"content":"                }","lastModifiedDate":"2022-10-15"},{"lineNumber":166,"author":{"gitId":"seanmanik"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":167,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":168,"author":{"gitId":"seanmanik"},"content":"        return true;","lastModifiedDate":"2022-10-15"},{"lineNumber":169,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":170,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":171,"author":{"gitId":"CeereeC"},"content":"    private void addEvent(Event event) {","lastModifiedDate":"2022-10-16"},{"lineNumber":172,"author":{"gitId":"seanmanik"},"content":"        events.add(event);","lastModifiedDate":"2022-10-15"},{"lineNumber":173,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":174,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":175,"author":{"gitId":"CeereeC"},"content":"    private void addEvents(Set\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-16"},{"lineNumber":176,"author":{"gitId":"seanmanik"},"content":"        this.events.addAll(events);","lastModifiedDate":"2022-10-15"},{"lineNumber":177,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":178,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":179,"author":{"gitId":"CeereeC"},"content":"    private void removeEvent(Event event) {","lastModifiedDate":"2022-10-16"},{"lineNumber":180,"author":{"gitId":"seanmanik"},"content":"        events.remove(event);","lastModifiedDate":"2022-10-15"},{"lineNumber":181,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":182,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":183,"author":{"gitId":"CeereeC"},"content":"    private void removeEvent(int i) {","lastModifiedDate":"2022-10-16"},{"lineNumber":184,"author":{"gitId":"seanmanik"},"content":"        events.remove(events.toArray()[i - 1]);","lastModifiedDate":"2022-10-15"},{"lineNumber":185,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":186,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":187,"author":{"gitId":"seanmanik"},"content":"    public Event getEvent(int i) {","lastModifiedDate":"2022-10-15"},{"lineNumber":188,"author":{"gitId":"seanmanik"},"content":"        Object temp \u003d events.toArray()[i - 1];","lastModifiedDate":"2022-10-15"},{"lineNumber":189,"author":{"gitId":"seanmanik"},"content":"        Event event \u003d (Event) temp;","lastModifiedDate":"2022-10-15"},{"lineNumber":190,"author":{"gitId":"seanmanik"},"content":"        return event;","lastModifiedDate":"2022-10-15"},{"lineNumber":191,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":192,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":193,"author":{"gitId":"seanmanik"},"content":"    public Event getEvent(Event event) {","lastModifiedDate":"2022-10-15"},{"lineNumber":194,"author":{"gitId":"seanmanik"},"content":"        Object[] temp \u003d events.toArray();","lastModifiedDate":"2022-10-15"},{"lineNumber":195,"author":{"gitId":"seanmanik"},"content":"        for (Object o : temp) {","lastModifiedDate":"2022-10-15"},{"lineNumber":196,"author":{"gitId":"seanmanik"},"content":"            if (o.equals(event)) {","lastModifiedDate":"2022-10-15"},{"lineNumber":197,"author":{"gitId":"seanmanik"},"content":"                return (Event) o;","lastModifiedDate":"2022-10-15"},{"lineNumber":198,"author":{"gitId":"seanmanik"},"content":"            }","lastModifiedDate":"2022-10-15"},{"lineNumber":199,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-15"},{"lineNumber":200,"author":{"gitId":"seanmanik"},"content":"        return null;","lastModifiedDate":"2022-10-15"},{"lineNumber":201,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-15"},{"lineNumber":202,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":203,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-15"}],"authorContributionMap":{"CeereeC":4,"-":8,"seanmanik":191}},{"path":"src/main/java/seedu/travelr/model/trip/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":55}},{"path":"src/main/java/seedu/travelr/model/trip/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":69}},{"path":"src/main/java/seedu/travelr/model/trip/ObservableTrip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cjun1039"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Cjun1039"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Cjun1039"},"content":" * Represents an observable Trip.","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"public class ObservableTrip {","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":"    private final SimpleStringProperty tripTitle;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":"    private final SimpleStringProperty tripDescription;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"    public ObservableTrip() {","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Cjun1039"},"content":"        tripTitle \u003d new SimpleStringProperty();","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"        tripDescription \u003d new SimpleStringProperty();","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"    public void setTrip(Trip trip) {","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"        tripTitle.set(trip.getTitle().fullTitle);","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Cjun1039"},"content":"        tripDescription.set(trip.getDescription().value);","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":"     * Resets the observable trip.","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"    public void resetTrip() {","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Cjun1039"},"content":"        tripTitle.set(null);","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Cjun1039"},"content":"        tripDescription.set(null);","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"    public SimpleStringProperty getObservableTitle() {","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"        return tripTitle;","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"Cjun1039"},"content":"    public SimpleStringProperty getObservableDescription() {","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Cjun1039"},"content":"        return tripDescription;","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"Cjun1039"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Cjun1039":40}},{"path":"src/main/java/seedu/travelr/model/trip/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":51}},{"path":"src/main/java/seedu/travelr/model/trip/TitleContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.StringUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":" * Tests that a {@code Person}\u0027s {@code Title} matches any of the keywords given.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"public class TitleContainsKeywordsPredicate implements Predicate\u003cTrip\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"    public TitleContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"    public boolean test(Trip trip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"        return keywords.stream()","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(trip.getTitle().fullTitle, keyword));","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"                || (other instanceof TitleContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":1,"CeereeC":25,"Bacon-Strips":5}},{"path":"src/main/java/seedu/travelr/model/trip/Trip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import java.util.Collections;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.util.Objects;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.DateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.list.Itineraries;","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"public class Trip {","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"    // Identity fields","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"    private final Title title;","lastModifiedDate":"2022-10-06"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"    private final Description description;","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    private final Location location;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"    private boolean done;","lastModifiedDate":"2022-10-18"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"    private final DateField dateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"    // Data fields","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    private final Itineraries events \u003d new Itineraries();","lastModifiedDate":"2022-10-10"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    public Trip(Title title, Description description, Set\u003cEvent\u003e events) {","lastModifiedDate":"2022-10-07"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        requireAllNonNull(title, description, events);","lastModifiedDate":"2022-10-07"},{"lineNumber":37,"author":{"gitId":"Cjun1039"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-06"},{"lineNumber":38,"author":{"gitId":"Cjun1039"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"gerardstevan"},"content":"        this.events.setInternalList(events);","lastModifiedDate":"2022-10-11"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"        this.location \u003d Location.getDefaultLocation();","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"gerardstevan"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-10-18"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"        this.dateField \u003d DateField.getDefaultDateField();","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":44,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-18"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"     * Used in JsonAdaptedTrips","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"gerardstevan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-18"},{"lineNumber":48,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-18"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"    public Trip(Title title, Description description, Set\u003cEvent\u003e events,","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"                boolean markedAsDone, Location location, DateField dateField) {","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"        requireAllNonNull(title, description, events);","lastModifiedDate":"2022-10-18"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-18"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-18"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"        this.events.setInternalList(events);","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"        this.done \u003d markedAsDone;","lastModifiedDate":"2022-10-18"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"        this.dateField \u003d dateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"     * Main constructor, used in Add Command","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2022-10-20"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"    public Trip(Title title, Description description, Set\u003cEvent\u003e events, Location location, DateField dateField) {","lastModifiedDate":"2022-10-20"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"        requireAllNonNull(title, description, events, location, dateField);","lastModifiedDate":"2022-10-20"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-20"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-20"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"        this.events.setInternalList(events);","lastModifiedDate":"2022-10-20"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-10-20"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"        this.dateField \u003d dateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":75,"author":{"gitId":"gerardstevan"},"content":"        events.add(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":76,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-11"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-11"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"    public void markDone() {","lastModifiedDate":"2022-10-18"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"        this.done \u003d true;","lastModifiedDate":"2022-10-18"},{"lineNumber":80,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":81,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":82,"author":{"gitId":"gerardstevan"},"content":"    public void markNotDone() {","lastModifiedDate":"2022-10-18"},{"lineNumber":83,"author":{"gitId":"gerardstevan"},"content":"        this.done \u003d false;","lastModifiedDate":"2022-10-18"},{"lineNumber":84,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":85,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":86,"author":{"gitId":"gerardstevan"},"content":"    public boolean isDone() {","lastModifiedDate":"2022-10-18"},{"lineNumber":87,"author":{"gitId":"gerardstevan"},"content":"        return done;","lastModifiedDate":"2022-10-18"},{"lineNumber":88,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":89,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":90,"author":{"gitId":"gerardstevan"},"content":"    public Event getEvent(Event event) {","lastModifiedDate":"2022-10-11"},{"lineNumber":91,"author":{"gitId":"gerardstevan"},"content":"        return events.getEvent(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":92,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":93,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":94,"author":{"gitId":"gerardstevan"},"content":"    public void removeEvent(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":95,"author":{"gitId":"gerardstevan"},"content":"        events.remove(event);","lastModifiedDate":"2022-10-11"},{"lineNumber":96,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":97,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":98,"author":{"gitId":"gerardstevan"},"content":"    public boolean contains(Event event) {","lastModifiedDate":"2022-10-10"},{"lineNumber":99,"author":{"gitId":"gerardstevan"},"content":"        return events.contains(event);","lastModifiedDate":"2022-10-10"},{"lineNumber":100,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":101,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":102,"author":{"gitId":"Cjun1039"},"content":"    public Title getTitle() {","lastModifiedDate":"2022-10-06"},{"lineNumber":103,"author":{"gitId":"Cjun1039"},"content":"        return title;","lastModifiedDate":"2022-10-06"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"Cjun1039"},"content":"    public Description getDescription() {","lastModifiedDate":"2022-10-06"},{"lineNumber":107,"author":{"gitId":"Cjun1039"},"content":"        return description;","lastModifiedDate":"2022-10-06"},{"lineNumber":108,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"CeereeC"},"content":"    public Location getLocation() {","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"CeereeC"},"content":"        return location;","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":114,"author":{"gitId":"CeereeC"},"content":"    public DateField getDateField() {","lastModifiedDate":"2022-10-20"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"        return dateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":116,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":117,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":118,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"CeereeC"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"CeereeC"},"content":"     * if modification is attempted.","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"Bacon-Strips"},"content":"    public Set\u003cEvent\u003e getEvents() {","lastModifiedDate":"2022-10-07"},{"lineNumber":123,"author":{"gitId":"gerardstevan"},"content":"        return Collections.unmodifiableSet(events.getList());","lastModifiedDate":"2022-10-10"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-15"},{"lineNumber":127,"author":{"gitId":"seanmanik"},"content":"     * Returns the itinerary of this trip.","lastModifiedDate":"2022-10-15"},{"lineNumber":128,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public Itineraries getItinerary() {","lastModifiedDate":"2022-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return this.events;","lastModifiedDate":"2022-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-16"},{"lineNumber":132,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":133,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"CeereeC"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"CeereeC"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":137,"author":{"gitId":"CeereeC"},"content":"    public boolean isSameTrip(Trip otherTrip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":138,"author":{"gitId":"CeereeC"},"content":"        if (otherTrip \u003d\u003d this) {","lastModifiedDate":"2022-10-02"},{"lineNumber":139,"author":{"gitId":"CeereeC"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"CeereeC"},"content":"        return otherTrip !\u003d null","lastModifiedDate":"2022-10-02"},{"lineNumber":143,"author":{"gitId":"Cjun1039"},"content":"                \u0026\u0026 otherTrip.getTitle().equals(getTitle());","lastModifiedDate":"2022-10-06"},{"lineNumber":144,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":145,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"CeereeC"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"CeereeC"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"CeereeC"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"CeereeC"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"CeereeC"},"content":"        if (!(other instanceof Trip)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":157,"author":{"gitId":"CeereeC"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"CeereeC"},"content":"        Trip otherTrip \u003d (Trip) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":161,"author":{"gitId":"gerardstevan"},"content":"        return otherTrip.getTitle().equals(getTitle());","lastModifiedDate":"2022-10-10"},{"lineNumber":162,"author":{"gitId":"gerardstevan"},"content":"        //        \u0026\u0026 otherTrip.getDescription().equals(getDescription())","lastModifiedDate":"2022-10-10"},{"lineNumber":163,"author":{"gitId":"gerardstevan"},"content":"        //        \u0026\u0026 otherTrip.getEvents().equals(getEvents());","lastModifiedDate":"2022-10-10"},{"lineNumber":164,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"CeereeC"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"CeereeC"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"Bacon-Strips"},"content":"        return Objects.hash(title, description, events);","lastModifiedDate":"2022-10-07"},{"lineNumber":170,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"CeereeC"},"content":"    public String toString() {","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"CeereeC"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"Cjun1039"},"content":"        builder.append(getTitle())","lastModifiedDate":"2022-10-06"},{"lineNumber":176,"author":{"gitId":"Cjun1039"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2022-10-06"},{"lineNumber":177,"author":{"gitId":"Cjun1039"},"content":"                .append(getDescription());","lastModifiedDate":"2022-10-06"},{"lineNumber":178,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"Bacon-Strips"},"content":"        Set\u003cEvent\u003e tags \u003d getEvents();","lastModifiedDate":"2022-10-07"},{"lineNumber":180,"author":{"gitId":"CeereeC"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"CeereeC"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"CeereeC"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":185,"author":{"gitId":"CeereeC"},"content":"        if (!getLocation().isDefaultValue()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":186,"author":{"gitId":"CeereeC"},"content":"            builder.append(\"; Location: \");","lastModifiedDate":"2022-10-20"},{"lineNumber":187,"author":{"gitId":"CeereeC"},"content":"            builder.append(getLocation());","lastModifiedDate":"2022-10-20"},{"lineNumber":188,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":189,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":190,"author":{"gitId":"CeereeC"},"content":"        if (!getDateField().isDefaultValue()) {","lastModifiedDate":"2022-10-20"},{"lineNumber":191,"author":{"gitId":"CeereeC"},"content":"            builder.append(\"; Date: \");","lastModifiedDate":"2022-10-20"},{"lineNumber":192,"author":{"gitId":"CeereeC"},"content":"            builder.append(getDateField());","lastModifiedDate":"2022-10-20"},{"lineNumber":193,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":194,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":195,"author":{"gitId":"CeereeC"},"content":"        return builder.toString();","lastModifiedDate":"2022-09-30"},{"lineNumber":196,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"Bacon-Strips"},"content":"    public int compareTitle(Trip trip) {","lastModifiedDate":"2022-10-18"},{"lineNumber":199,"author":{"gitId":"Bacon-Strips"},"content":"        return title.compareTo(trip.title);","lastModifiedDate":"2022-10-18"},{"lineNumber":200,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":201,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":202,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":14,"CeereeC":124,"gerardstevan":47,"-":3,"seanmanik":4,"Bacon-Strips":10}},{"path":"src/main/java/seedu/travelr/model/trip/TripComparators.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-18"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-18"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":" * Contains the comparators to compare the trips with.","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"public class TripComparators {","lastModifiedDate":"2022-10-18"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Comparator\u003cTrip\u003e COMPARE_BY_TITLE \u003d (x, y) -\u003e x.compareTitle(y);","lastModifiedDate":"2022-10-18"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-18"}],"authorContributionMap":{"Bacon-Strips":10}},{"path":"src/main/java/seedu/travelr/model/trip/TripCompletedPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-20"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-20"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"/**","lastModifiedDate":"2022-10-20"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":" * Tests that a {@code Trip}\u0027s is completed.","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":" */","lastModifiedDate":"2022-10-20"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"public class TripCompletedPredicate implements Predicate\u003cTrip\u003e {","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"     * Creates a new EventInItineraryPredicate.","lastModifiedDate":"2022-10-20"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"    public TripCompletedPredicate() {","lastModifiedDate":"2022-10-20"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"    public boolean test(Trip trip) {","lastModifiedDate":"2022-10-20"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"        return trip.isDone();","lastModifiedDate":"2022-10-20"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-20"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"                || (other instanceof TripCompletedPredicate); // state check","lastModifiedDate":"2022-10-20"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-20"}],"authorContributionMap":{"seanmanik":26}},{"path":"src/main/java/seedu/travelr/model/trip/UniqueTripList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-18"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import java.util.Iterator;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-18"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.exceptions.DuplicateTripException;","lastModifiedDate":"2022-10-02"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.exceptions.TripNotFoundException;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":" * A list of trips that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2022-10-06"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":" * A trip is considered unique by comparing using {@code Trip#isSameTrip(Trip)}. As such, adding and updating of","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":" * trips uses Trip#isSameTrip(Trip) for equality to ensure that the trip being added or updated is","lastModifiedDate":"2022-10-06"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":" * unique in terms of identity in the UniqueTripList. However, the removal of a person uses Trip#equals(Object)","lastModifiedDate":"2022-10-06"},{"lineNumber":22,"author":{"gitId":"Cjun1039"},"content":" * to ensure that the trip with exactly the same fields will be removed.","lastModifiedDate":"2022-10-06"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":" *","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":" * @see Trip#isSameTrip(Trip)","lastModifiedDate":"2022-10-02"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"public class UniqueTripList implements Iterable\u003cTrip\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    private final ObservableList\u003cTrip\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"    private final ObservableList\u003cTrip\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2022-10-02"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"    public boolean contains(Trip toCheck) {","lastModifiedDate":"2022-10-02"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"     * Adds a person to the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"    public void add(Trip toAdd) {","lastModifiedDate":"2022-10-02"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"            throw new DuplicateTripException();","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"    public int getIndexOfTrip(Trip trip) {","lastModifiedDate":"2022-10-10"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"        if (contains(trip)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":56,"author":{"gitId":"gerardstevan"},"content":"            for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-10"},{"lineNumber":57,"author":{"gitId":"gerardstevan"},"content":"                if (internalList.get(i).equals(trip)) {","lastModifiedDate":"2022-10-10"},{"lineNumber":58,"author":{"gitId":"gerardstevan"},"content":"                    return i;","lastModifiedDate":"2022-10-10"},{"lineNumber":59,"author":{"gitId":"gerardstevan"},"content":"                }","lastModifiedDate":"2022-10-10"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-10-10"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-10"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"        return -1;","lastModifiedDate":"2022-10-10"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"    public Set\u003cList\u003e getDoneList() {","lastModifiedDate":"2022-10-18"},{"lineNumber":66,"author":{"gitId":"gerardstevan"},"content":"        Set\u003cList\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-18"},{"lineNumber":67,"author":{"gitId":"gerardstevan"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2022-10-18"},{"lineNumber":68,"author":{"gitId":"gerardstevan"},"content":"            if (internalList.get(i).isDone()) {","lastModifiedDate":"2022-10-18"},{"lineNumber":69,"author":{"gitId":"gerardstevan"},"content":"                set.add((List) internalList.get(i));","lastModifiedDate":"2022-10-18"},{"lineNumber":70,"author":{"gitId":"gerardstevan"},"content":"            }","lastModifiedDate":"2022-10-18"},{"lineNumber":71,"author":{"gitId":"gerardstevan"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"        return set;","lastModifiedDate":"2022-10-18"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":74,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":75,"author":{"gitId":"gerardstevan"},"content":"    public Trip getTrip(Trip trip) {","lastModifiedDate":"2022-10-10"},{"lineNumber":76,"author":{"gitId":"gerardstevan"},"content":"        return internalList.get(getIndexOfTrip(trip));","lastModifiedDate":"2022-10-10"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":79,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"CeereeC"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"CeereeC"},"content":"    public void setTrip(Trip target, Trip editedTrip) {","lastModifiedDate":"2022-10-02"},{"lineNumber":85,"author":{"gitId":"CeereeC"},"content":"        requireAllNonNull(target, editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":86,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"CeereeC"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"CeereeC"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":90,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"CeereeC"},"content":"        if (!target.isSameTrip(editedTrip) \u0026\u0026 contains(editedTrip)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":93,"author":{"gitId":"CeereeC"},"content":"            throw new DuplicateTripException();","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"CeereeC"},"content":"        internalList.set(index, editedTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":97,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"     * The person must exist in the list.","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"    public void remove(Trip toRemove) {","lastModifiedDate":"2022-10-02"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"CeereeC"},"content":"            throw new TripNotFoundException();","lastModifiedDate":"2022-10-02"},{"lineNumber":107,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"CeereeC"},"content":"    public void setTrips(UniqueTripList replacement) {","lastModifiedDate":"2022-10-02"},{"lineNumber":111,"author":{"gitId":"CeereeC"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"CeereeC"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"Cjun1039"},"content":"     * Replaces the contents of this list with {@code trips}.","lastModifiedDate":"2022-10-06"},{"lineNumber":117,"author":{"gitId":"Cjun1039"},"content":"     * {@code trips} must not contain duplicate trips.","lastModifiedDate":"2022-10-06"},{"lineNumber":118,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"CeereeC"},"content":"    public void setTrips(List\u003cTrip\u003e trips) {","lastModifiedDate":"2022-10-02"},{"lineNumber":120,"author":{"gitId":"CeereeC"},"content":"        requireAllNonNull(trips);","lastModifiedDate":"2022-10-02"},{"lineNumber":121,"author":{"gitId":"Cjun1039"},"content":"        if (!tripsAreUnique(trips)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":122,"author":{"gitId":"CeereeC"},"content":"            throw new DuplicateTripException();","lastModifiedDate":"2022-10-02"},{"lineNumber":123,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"CeereeC"},"content":"        internalList.setAll(trips);","lastModifiedDate":"2022-10-02"},{"lineNumber":126,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":127,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":128,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":129,"author":{"gitId":"CeereeC"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2022-09-30"},{"lineNumber":130,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"CeereeC"},"content":"    public ObservableList\u003cTrip\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2022-10-02"},{"lineNumber":132,"author":{"gitId":"CeereeC"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"CeereeC"},"content":"    public Iterator\u003cTrip\u003e iterator() {","lastModifiedDate":"2022-10-02"},{"lineNumber":137,"author":{"gitId":"CeereeC"},"content":"        return internalList.iterator();","lastModifiedDate":"2022-09-30"},{"lineNumber":138,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":139,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":140,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":141,"author":{"gitId":"CeereeC"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":142,"author":{"gitId":"CeereeC"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"CeereeC"},"content":"                || (other instanceof UniqueTripList // instanceof handles nulls","lastModifiedDate":"2022-10-02"},{"lineNumber":144,"author":{"gitId":"CeereeC"},"content":"                        \u0026\u0026 internalList.equals(((UniqueTripList) other).internalList));","lastModifiedDate":"2022-10-02"},{"lineNumber":145,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"CeereeC"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"CeereeC"},"content":"    public int hashCode() {","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"CeereeC"},"content":"        return internalList.hashCode();","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"Cjun1039"},"content":"     * Returns true if {@code trips} contains only unique trips.","lastModifiedDate":"2022-10-06"},{"lineNumber":154,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"Cjun1039"},"content":"    private boolean tripsAreUnique(List\u003cTrip\u003e trips) {","lastModifiedDate":"2022-10-06"},{"lineNumber":156,"author":{"gitId":"Cjun1039"},"content":"        for (int i \u003d 0; i \u003c trips.size() - 1; i++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":157,"author":{"gitId":"Cjun1039"},"content":"            for (int j \u003d i + 1; j \u003c trips.size(); j++) {","lastModifiedDate":"2022-10-06"},{"lineNumber":158,"author":{"gitId":"Cjun1039"},"content":"                if (trips.get(i).isSameTrip(trips.get(j))) {","lastModifiedDate":"2022-10-06"},{"lineNumber":159,"author":{"gitId":"CeereeC"},"content":"                    return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"CeereeC"},"content":"                }","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"CeereeC"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"CeereeC"},"content":"        return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":166,"author":{"gitId":"Bacon-Strips"},"content":"    public void sort(Comparator\u003cTrip\u003e comp) {","lastModifiedDate":"2022-10-18"},{"lineNumber":167,"author":{"gitId":"Bacon-Strips"},"content":"        internalList.sort(comp);","lastModifiedDate":"2022-10-18"},{"lineNumber":168,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-18"},{"lineNumber":169,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":13,"CeereeC":124,"gerardstevan":27,"Bacon-Strips":5}},{"path":"src/main/java/seedu/travelr/model/trip/exceptions/DuplicateTripException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":" * identity).","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"public class DuplicateTripException extends RuntimeException {","lastModifiedDate":"2022-10-02"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"    public DuplicateTripException() {","lastModifiedDate":"2022-10-02"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"        super(\"Operation would result in duplicate trips\");","lastModifiedDate":"2022-10-02"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"CeereeC":11}},{"path":"src/main/java/seedu/travelr/model/trip/exceptions/TripNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.trip.exceptions;","lastModifiedDate":"2022-10-02"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-02"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-10-02"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2022-10-02"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-10-02"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"public class TripNotFoundException extends RuntimeException {}","lastModifiedDate":"2022-10-02"}],"authorContributionMap":{"CeereeC":6}},{"path":"src/main/java/seedu/travelr/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.model.util;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.ParserUtil.EVENT_DESCRIPTION_PLACEHOLDER;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.DateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"public class SampleDataUtil {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"    public static Trip[] getSampleTrips() {","lastModifiedDate":"2022-10-02"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"        return new Trip[] {","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"            new Trip(new Title(\"Grad Trip\"), new Description(\"Grad Trip with friends!\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"                getEventSet(\"friends\"), new Location(\"Bristol\"), new DateField(\"11-01-2023\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":"            new Trip(new Title(\"Honeymoon\"), new Description(\"Lorem ipsum dolor sit amet.\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"                getEventSet(\"girlfriend\"), new Location(\"Jeju Island\"), new DateField(\"13-04-2021\")),","lastModifiedDate":"2022-10-20"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"            new Trip(new Title(\"Business Trip\"), new Description(\"Consectetur adipiscing elit.\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"                getEventSet(\"neighbours\")),","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"Cjun1039"},"content":"            new Trip(new Title(\"Solo Trip\"), new Description(\"Sed do eiusmod tempor.\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"                getEventSet(\"family\")),","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"            new Trip(new Title(\"Backpacking\"), new Description(\"Incididunt ut labore et dolore magna aliqua.\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"                getEventSet(\"classmates\")),","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"            new Trip(new Title(\"Conference\"), new Description(\"Dolore eu fugiat nulla pariatur.\"),","lastModifiedDate":"2022-10-06"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"                getEventSet(\"colleagues\"), new Location(\"New York\"), new DateField(\"31-12-2023\"))","lastModifiedDate":"2022-10-20"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"        };","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"        for (Trip sampleTrip : getSampleTrips()) {","lastModifiedDate":"2022-10-02"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"            sampleAb.addTrip(sampleTrip);","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"        return sampleAb;","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"    public static Set\u003cEvent\u003e getEventSet(String... strings) {","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"seanmanik"},"content":"                .map(titles -\u003e new Event(new Title(titles), new Description(EVENT_DESCRIPTION_PLACEHOLDER)))","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":9,"CeereeC":40,"gerardstevan":2,"seanmanik":1,"Bacon-Strips":4}},{"path":"src/main/java/seedu/travelr/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":5,"-":41}},{"path":"src/main/java/seedu/travelr/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-10-07"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-10-07"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-07"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-07"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-07"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2022-10-07"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-07"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2022-10-07"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-14"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"    private final String title;","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    private final String description;","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2022-10-07"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    @JsonCreator","lastModifiedDate":"2022-10-07"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"title\") String title, @JsonProperty(\"description\") String description) {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2022-10-07"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2022-10-07"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"        title \u003d source.getTitle().fullTitle;","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-07"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2022-10-07"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"     *","lastModifiedDate":"2022-10-07"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2022-10-07"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-07"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-07"},{"lineNumber":45,"author":{"gitId":"Cjun1039"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":46,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":48,"author":{"gitId":"Cjun1039"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-07"},{"lineNumber":51,"author":{"gitId":"Cjun1039"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2022-10-14"},{"lineNumber":52,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":53,"author":{"gitId":"Cjun1039"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":54,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-14"},{"lineNumber":55,"author":{"gitId":"Cjun1039"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2022-10-14"},{"lineNumber":56,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":57,"author":{"gitId":"Cjun1039"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":58,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-14"},{"lineNumber":59,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":60,"author":{"gitId":"Cjun1039"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-14"},{"lineNumber":61,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-14"},{"lineNumber":62,"author":{"gitId":"Cjun1039"},"content":"        return new Event(modelTitle, modelDescription);","lastModifiedDate":"2022-10-14"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-07"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-07"}],"authorContributionMap":{"Cjun1039":20,"seanmanik":11,"Bacon-Strips":34}},{"path":"src/main/java/seedu/travelr/storage/JsonAdaptedTrip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import java.util.Set;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.DateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":16,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-14"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":" * Jackson-friendly version of {@link Trip}.","lastModifiedDate":"2022-10-02"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"class JsonAdaptedTrip {","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Trip\u0027s %s field is missing!\";","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"    private final String title;","lastModifiedDate":"2022-10-06"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"    private final String description;","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-07"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"    private final boolean done;","lastModifiedDate":"2022-10-18"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"    private final String location;","lastModifiedDate":"2022-10-20"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"    private final String dateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"    @JsonCreator","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Cjun1039"},"content":"    public JsonAdaptedTrip(@JsonProperty(\"title\") String title, @JsonProperty(\"description\") String description,","lastModifiedDate":"2022-10-06"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"                           @JsonProperty(\"done\") boolean done,","lastModifiedDate":"2022-10-20"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"                           @JsonProperty(\"location\") String location,","lastModifiedDate":"2022-10-20"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"                           @JsonProperty(\"dateField\") String dateField,","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"                           @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Cjun1039"},"content":"        this.title \u003d title;","lastModifiedDate":"2022-10-06"},{"lineNumber":44,"author":{"gitId":"Cjun1039"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-10-06"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"        this.done \u003d done;","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"        this.location \u003d location;","lastModifiedDate":"2022-10-20"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"        this.dateField \u003d dateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":48,"author":{"gitId":"Cjun1039"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2022-10-14"},{"lineNumber":49,"author":{"gitId":"Cjun1039"},"content":"            this.events.addAll(events);","lastModifiedDate":"2022-10-14"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"     * Converts a given {@code Trip} into this class for Jackson use.","lastModifiedDate":"2022-10-18"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"    public JsonAdaptedTrip(Trip source) {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"Cjun1039"},"content":"        title \u003d source.getTitle().fullTitle;","lastModifiedDate":"2022-10-06"},{"lineNumber":58,"author":{"gitId":"Cjun1039"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2022-10-06"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"        done \u003d source.isDone();","lastModifiedDate":"2022-10-20"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"        location \u003d source.getLocation().locationName;","lastModifiedDate":"2022-10-20"},{"lineNumber":61,"author":{"gitId":"CeereeC"},"content":"        dateField \u003d source.getDateField().toString();","lastModifiedDate":"2022-10-20"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"        events.addAll(source.getEvents().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"                .map(JsonAdaptedEvent::new)","lastModifiedDate":"2022-10-07"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"CeereeC"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"CeereeC"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"    public Trip toModelType() throws IllegalValueException {","lastModifiedDate":"2022-10-02"},{"lineNumber":73,"author":{"gitId":"Cjun1039"},"content":"        final List\u003cEvent\u003e tripEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":74,"author":{"gitId":"Cjun1039"},"content":"        for (JsonAdaptedEvent event : events) {","lastModifiedDate":"2022-10-14"},{"lineNumber":75,"author":{"gitId":"Cjun1039"},"content":"            tripEvents.add(event.toModelType());","lastModifiedDate":"2022-10-14"},{"lineNumber":76,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"Cjun1039"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":79,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"Cjun1039"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":82,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"Cjun1039"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2022-10-06"},{"lineNumber":86,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-06"},{"lineNumber":87,"author":{"gitId":"Cjun1039"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2022-10-06"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"Cjun1039"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2022-10-06"},{"lineNumber":90,"author":{"gitId":"Cjun1039"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-06"},{"lineNumber":91,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":93,"author":{"gitId":"CeereeC"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-20"},{"lineNumber":95,"author":{"gitId":"CeereeC"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName()));","lastModifiedDate":"2022-10-20"},{"lineNumber":96,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":97,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":98,"author":{"gitId":"CeereeC"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"        if (dateField \u003d\u003d null) {","lastModifiedDate":"2022-10-20"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2022-10-20"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, DateField.class.getSimpleName()));","lastModifiedDate":"2022-10-20"},{"lineNumber":104,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":105,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":106,"author":{"gitId":"CeereeC"},"content":"        if (!DateField.isValidDate(dateField)) {","lastModifiedDate":"2022-10-20"},{"lineNumber":107,"author":{"gitId":"CeereeC"},"content":"            throw new IllegalValueException(DateField.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":108,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-10-20"},{"lineNumber":109,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":110,"author":{"gitId":"CeereeC"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2022-10-20"},{"lineNumber":111,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":112,"author":{"gitId":"Cjun1039"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2022-10-06"},{"lineNumber":113,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"Cjun1039"},"content":"        final Set\u003cEvent\u003e modelEvents \u003d new HashSet\u003c\u003e(tripEvents);","lastModifiedDate":"2022-10-14"},{"lineNumber":115,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-06"},{"lineNumber":116,"author":{"gitId":"gerardstevan"},"content":"        final boolean done \u003d this.done;","lastModifiedDate":"2022-10-18"},{"lineNumber":117,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":118,"author":{"gitId":"CeereeC"},"content":"        final Location location \u003d new Location(this.location);","lastModifiedDate":"2022-10-20"},{"lineNumber":119,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":120,"author":{"gitId":"CeereeC"},"content":"        final DateField dateField \u003d new DateField(this.dateField);","lastModifiedDate":"2022-10-20"},{"lineNumber":121,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":122,"author":{"gitId":"CeereeC"},"content":"        return new Trip(modelTitle, modelDescription, modelEvents, done, location, dateField);","lastModifiedDate":"2022-10-20"},{"lineNumber":123,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":27,"CeereeC":91,"gerardstevan":4,"Bacon-Strips":3}},{"path":"src/main/java/seedu/travelr/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.FileUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.JsonUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"Cjun1039"},"content":"        // No problems here for storage","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":1,"CeereeC":7,"-":73}},{"path":"src/main/java/seedu/travelr/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"import java.util.List;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-14"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"CeereeC"},"content":"    public static final String MESSAGE_DUPLICATE_TRIP \u003d \"Trips list contains duplicate trip(s).\";","lastModifiedDate":"2022-10-02"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    private final List\u003cJsonAdaptedTrip\u003e trips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-02"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":"    private final List\u003cJsonAdaptedEvent\u003e bucketList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-14"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"Cjun1039"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given trips.","lastModifiedDate":"2022-10-06"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"     * TODO: Rename JsonProperty in local data file from persons to trips","lastModifiedDate":"2022-10-02"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"    @JsonCreator","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"bucketList\") List\u003cJsonAdaptedEvent\u003e bucketList,","lastModifiedDate":"2022-10-14"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"                                       @JsonProperty(\"trips\") List\u003cJsonAdaptedTrip\u003e trips) {","lastModifiedDate":"2022-10-14"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"        this.trips.addAll(trips);","lastModifiedDate":"2022-10-02"},{"lineNumber":36,"author":{"gitId":"Cjun1039"},"content":"        this.bucketList.addAll(bucketList);","lastModifiedDate":"2022-10-14"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"        trips.addAll(source.getTripList().stream().map(JsonAdaptedTrip::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"Cjun1039"},"content":"        bucketList.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2022-10-14"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"CeereeC"},"content":"        for (JsonAdaptedTrip jsonAdaptedTrip : trips) {","lastModifiedDate":"2022-10-02"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"            Trip trip \u003d jsonAdaptedTrip.toModelType();","lastModifiedDate":"2022-10-02"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"            if (addressBook.hasTrip(trip)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-02"},{"lineNumber":60,"author":{"gitId":"CeereeC"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"Cjun1039"},"content":"            addressBook.addTrip(trip);","lastModifiedDate":"2022-10-06"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"            for (Event e : trip.getEvents()) {","lastModifiedDate":"2022-10-16"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"                addressBook.addEventToAllEventsList(e);","lastModifiedDate":"2022-10-16"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"            }","lastModifiedDate":"2022-10-16"},{"lineNumber":65,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"Cjun1039"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : bucketList) {","lastModifiedDate":"2022-10-14"},{"lineNumber":67,"author":{"gitId":"Cjun1039"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2022-10-14"},{"lineNumber":68,"author":{"gitId":"Cjun1039"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2022-10-14"},{"lineNumber":69,"author":{"gitId":"Cjun1039"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-14"},{"lineNumber":70,"author":{"gitId":"Cjun1039"},"content":"            }","lastModifiedDate":"2022-10-14"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"            addressBook.addEventToBucketListAndAllEventsList(event);","lastModifiedDate":"2022-10-16"},{"lineNumber":72,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-14"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"        return addressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":14,"CeereeC":62}},{"path":"src/main/java/seedu/travelr/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.JsonUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":5,"-":42}},{"path":"src/main/java/seedu/travelr/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":5,"-":27}},{"path":"src/main/java/seedu/travelr/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"Cjun1039"},"content":"        // No problems here with storage","lastModifiedDate":"2022-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":1,"CeereeC":6,"-":72}},{"path":"src/main/java/seedu/travelr/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":6,"-":30}},{"path":"src/main/java/seedu/travelr/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.Logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.CommandResult;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":6,"-":80}},{"path":"src/main/java/seedu/travelr/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":" * Represents EventsCard","lastModifiedDate":"2022-10-10"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"     *","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"    public final Event event;","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"    private Label title;","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"    private Label id;","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"    private Label description;","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"    //  @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"    //  private FlowPane events;","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"        this.event \u003d event;","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"        title.setText(event.getTitle().fullTitle);","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"        description.setText(event.getDescription().value);","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"        //      event.getEvents().stream()","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"        //              .sorted(Comparator.comparing(event -\u003e event.title.toString()))","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"        //              .forEach(event -\u003e events.getChildren().add(new Label(event.title.toString())));","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"seanmanik"},"content":"    @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"seanmanik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-08"},{"lineNumber":53,"author":{"gitId":"seanmanik"},"content":"        // short circuit if same object","lastModifiedDate":"2022-10-08"},{"lineNumber":54,"author":{"gitId":"seanmanik"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"            return true;","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"seanmanik"},"content":"            return false;","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"seanmanik"},"content":"        // state check","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"seanmanik"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"seanmanik"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-10-08"},{"lineNumber":66,"author":{"gitId":"seanmanik"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2022-10-08"},{"lineNumber":67,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":68,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"},{"lineNumber":69,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gerardstevan":3,"seanmanik":66}},{"path":"src/main/java/seedu/travelr/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-10-10"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"/**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":" * Represents the EventListPanel.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":" */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"    /**","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"     */","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"        @Override","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"seanmanik"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2022-10-08"},{"lineNumber":37,"author":{"gitId":"seanmanik"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2022-10-08"},{"lineNumber":38,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":39,"author":{"gitId":"seanmanik"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2022-10-08"},{"lineNumber":40,"author":{"gitId":"seanmanik"},"content":"                setGraphic(null);","lastModifiedDate":"2022-10-08"},{"lineNumber":41,"author":{"gitId":"seanmanik"},"content":"                setText(null);","lastModifiedDate":"2022-10-08"},{"lineNumber":42,"author":{"gitId":"seanmanik"},"content":"            } else {","lastModifiedDate":"2022-10-08"},{"lineNumber":43,"author":{"gitId":"seanmanik"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":44,"author":{"gitId":"seanmanik"},"content":"            }","lastModifiedDate":"2022-10-08"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"        }","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gerardstevan":5,"seanmanik":44}},{"path":"src/main/java/seedu/travelr/ui/EventsLabeler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"public class EventsLabeler extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"    private static final String FXML \u003d \"EventsLabeler.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"    /**","lastModifiedDate":"2022-10-10"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"     * Labels event.","lastModifiedDate":"2022-10-10"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"     */","lastModifiedDate":"2022-10-10"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"    public EventsLabeler() {","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"gerardstevan":3,"seanmanik":18}},{"path":"src/main/java/seedu/travelr/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String USERGUIDE_URL \u003d \"https://se-education.org/addressbook-level3/UserGuide.html\";","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2022-09-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":100}},{"path":"src/main/java/seedu/travelr/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.Logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.CommandResult;","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"    private TripListPanel tripListPanel;","lastModifiedDate":"2022-10-02"},{"lineNumber":35,"author":{"gitId":"seanmanik"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2022-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"seanmanik"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":46,"author":{"gitId":"seanmanik"},"content":"    private StackPane tripsTextField;","lastModifiedDate":"2022-10-08"},{"lineNumber":47,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":48,"author":{"gitId":"seanmanik"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":49,"author":{"gitId":"seanmanik"},"content":"    private StackPane eventsTextField;","lastModifiedDate":"2022-10-08"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"    // TODO: Refactor","lastModifiedDate":"2022-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"    @FXML","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2022-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2022-09-30"},{"lineNumber":93,"author":{"gitId":"CeereeC"},"content":"     *","lastModifiedDate":"2022-10-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2022-09-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2022-09-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2022-09-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-09-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2022-09-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2022-09-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2022-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2022-09-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2022-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2022-09-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2022-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2022-09-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2022-09-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2022-09-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2022-09-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2022-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2022-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-09-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2022-09-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2022-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2022-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2022-09-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2022-09-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2022-09-30"},{"lineNumber":126,"author":{"gitId":"Cjun1039"},"content":"        tripListPanel \u003d new TripListPanel(logic.getFilteredTripList(), logic.getSelectedTrip());","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"seanmanik"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2022-10-08"},{"lineNumber":128,"author":{"gitId":"CeereeC"},"content":"        personListPanelPlaceholder.getChildren().add(tripListPanel.getRoot());","lastModifiedDate":"2022-10-02"},{"lineNumber":129,"author":{"gitId":"seanmanik"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2022-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2022-09-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2022-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2022-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":136,"author":{"gitId":"seanmanik"},"content":"        TripsLabeler tripsLabel \u003d new TripsLabeler();","lastModifiedDate":"2022-10-08"},{"lineNumber":137,"author":{"gitId":"seanmanik"},"content":"        tripsTextField.getChildren().add(tripsLabel.getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":138,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":139,"author":{"gitId":"seanmanik"},"content":"        EventsLabeler eventsLabel \u003d new EventsLabeler();","lastModifiedDate":"2022-10-08"},{"lineNumber":140,"author":{"gitId":"seanmanik"},"content":"        eventsTextField.getChildren().add(eventsLabel.getRoot());","lastModifiedDate":"2022-10-08"},{"lineNumber":141,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2022-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2022-09-30"},{"lineNumber":144,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2022-09-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2022-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2022-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2022-09-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2022-09-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2022-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2022-09-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2022-09-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2022-09-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2022-09-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2022-09-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2022-09-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2022-09-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2022-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2022-09-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2022-09-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2022-09-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2022-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2022-09-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2022-09-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":187,"author":{"gitId":"CeereeC"},"content":"    // TODO: Refactor once UI done","lastModifiedDate":"2022-10-02"},{"lineNumber":188,"author":{"gitId":"CeereeC"},"content":"    public TripListPanel getPersonListPanel() {","lastModifiedDate":"2022-10-02"},{"lineNumber":189,"author":{"gitId":"CeereeC"},"content":"        return tripListPanel;","lastModifiedDate":"2022-10-02"},{"lineNumber":190,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":191,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":192,"author":{"gitId":"gerardstevan"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2022-10-10"},{"lineNumber":193,"author":{"gitId":"gerardstevan"},"content":"        return eventListPanel;","lastModifiedDate":"2022-10-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2022-09-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":199,"author":{"gitId":"CeereeC"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2022-09-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2022-09-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2022-09-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2022-09-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2022-09-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2022-09-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2022-09-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2022-09-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2022-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2022-09-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2022-09-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2022-09-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":1,"CeereeC":17,"gerardstevan":2,"-":182,"seanmanik":20}},{"path":"src/main/java/seedu/travelr/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":27}},{"path":"src/main/java/seedu/travelr/ui/SelectedTripCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cjun1039"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Cjun1039"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Cjun1039"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Cjun1039"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.trip.ObservableTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":"/**","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":" */","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"public class SelectedTripCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"    private static final String FXML \u003d \"SelectedTripCard.fxml\";","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Cjun1039"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"    private Label selectedTripLabel;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Cjun1039"},"content":"    private Label title;","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Cjun1039"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Cjun1039"},"content":"    private Label description;","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"    /**","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"     * Creates a selectedTrip to display","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Cjun1039"},"content":"     *","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Cjun1039"},"content":"     * @param selectedTrip SelectedTrip to display.","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"Cjun1039"},"content":"     */","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"Cjun1039"},"content":"    public SelectedTripCard(ObservableTrip selectedTrip) {","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"Cjun1039"},"content":"        super(FXML);","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"Cjun1039"},"content":"        title.textProperty().addListener((ob, o, n) -\u003e setSelectedTripLabel(title.getText()));","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Cjun1039"},"content":"        title.textProperty().bind(selectedTrip.getObservableTitle());","lastModifiedDate":"2022-10-19"},{"lineNumber":42,"author":{"gitId":"Cjun1039"},"content":"        description.textProperty().bind(selectedTrip.getObservableDescription());","lastModifiedDate":"2022-10-19"},{"lineNumber":43,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":44,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":45,"author":{"gitId":"Cjun1039"},"content":"    private void setSelectedTripLabel(String title) {","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"Cjun1039"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"Cjun1039"},"content":"            selectedTripLabel.setText(\"No Trips Selected!\");","lastModifiedDate":"2022-10-19"},{"lineNumber":48,"author":{"gitId":"Cjun1039"},"content":"        } else {","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"Cjun1039"},"content":"            selectedTripLabel.setText(\"Selected Trip\");","lastModifiedDate":"2022-10-19"},{"lineNumber":50,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":51,"author":{"gitId":"Cjun1039"},"content":"    }","lastModifiedDate":"2022-10-19"},{"lineNumber":52,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":53,"author":{"gitId":"Cjun1039"},"content":"}","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Cjun1039":53}},{"path":"src/main/java/seedu/travelr/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":27}},{"path":"src/main/java/seedu/travelr/ui/TripCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"public class TripCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"    private static final String FXML \u003d \"TripListCard.fxml\";","lastModifiedDate":"2022-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"    public final Trip trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"    private Label title;","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"Cjun1039"},"content":"    private Label description;","lastModifiedDate":"2022-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    private FlowPane events;","lastModifiedDate":"2022-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"    public TripCard(Trip trip, int displayedIndex) {","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"        this.trip \u003d trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"Cjun1039"},"content":"        title.setText(trip.getTitle().fullTitle);","lastModifiedDate":"2022-10-06"},{"lineNumber":48,"author":{"gitId":"Cjun1039"},"content":"        description.setText(trip.getDescription().value);","lastModifiedDate":"2022-10-06"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"        trip.getEvents().stream()","lastModifiedDate":"2022-10-07"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"                .sorted(Comparator.comparing(event -\u003e event.title.toString()))","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"seanmanik"},"content":"                .forEach(event -\u003e events.getChildren().add(new Label(event.title.toString())));","lastModifiedDate":"2022-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"CeereeC"},"content":"        if (!(other instanceof TripCard)) {","lastModifiedDate":"2022-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"CeereeC"},"content":"        TripCard card \u003d (TripCard) other;","lastModifiedDate":"2022-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"                \u0026\u0026 trip.equals(card.trip);","lastModifiedDate":"2022-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":5,"CeereeC":9,"-":53,"seanmanik":2,"Bacon-Strips":2}},{"path":"src/main/java/seedu/travelr/ui/TripListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"CeereeC"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.trip.ObservableTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-02"},{"lineNumber":14,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"CeereeC"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"CeereeC"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"public class TripListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":"    private static final String FXML \u003d \"TripListPanel.fxml\";","lastModifiedDate":"2022-10-06"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TripListPanel.class);","lastModifiedDate":"2022-10-02"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"Cjun1039"},"content":"    @FXML","lastModifiedDate":"2022-10-19"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"    private StackPane selectedTripCardPlaceholder;","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"CeereeC"},"content":"    @FXML","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"Cjun1039"},"content":"    private ListView\u003cTrip\u003e tripListView;","lastModifiedDate":"2022-10-06"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"Cjun1039"},"content":"    public TripListPanel(ObservableList\u003cTrip\u003e tripList, ObservableTrip selectedTrip) {","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"        super(FXML);","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"        tripListView.setItems(tripList);","lastModifiedDate":"2022-10-06"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"        tripListView.setCellFactory(listView -\u003e new TripListViewCell());","lastModifiedDate":"2022-10-06"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"        selectedTripCardPlaceholder.getChildren().add(new SelectedTripCard(selectedTrip).getRoot());","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"    class TripListViewCell extends ListCell\u003cTrip\u003e {","lastModifiedDate":"2022-10-02"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"        @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"        protected void updateItem(Trip trip, boolean empty) {","lastModifiedDate":"2022-10-02"},{"lineNumber":43,"author":{"gitId":"CeereeC"},"content":"            super.updateItem(trip, empty);","lastModifiedDate":"2022-10-02"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"            if (empty || trip \u003d\u003d null) {","lastModifiedDate":"2022-10-02"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"                setGraphic(null);","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"CeereeC"},"content":"                setText(null);","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"            } else {","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"                setGraphic(new TripCard(trip, getIndex() + 1).getRoot());","lastModifiedDate":"2022-10-02"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"            }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"CeereeC"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"CeereeC"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"CeereeC"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"Cjun1039":10,"CeereeC":44}},{"path":"src/main/java/seedu/travelr/ui/TripsLabeler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"/**","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":" */","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"public class TripsLabeler extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"    private static final String FXML \u003d \"TripsLabeler.fxml\";","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"    public TripsLabeler() {","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"        super(FXML);","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"    }","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"}","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"seanmanik":19}},{"path":"src/main/java/seedu/travelr/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":1,"-":12}},{"path":"src/main/java/seedu/travelr/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.MainApp;","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.core.LogsCenter;","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.commons.util.StringUtil;","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.logic.Logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"    void showAlertDialogAndWait(AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"        showAlertDialogAndWait(AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":7,"-":81}},{"path":"src/main/java/seedu/travelr/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CeereeC"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2022-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-09-30"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.MainApp;","lastModifiedDate":"2022-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2022-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2022-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2022-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2022-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2022-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2022-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2022-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2022-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2022-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-09-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2022-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2022-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2022-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2022-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2022-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-09-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2022-09-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2022-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2022-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2022-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2022-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2022-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2022-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2022-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2022-09-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2022-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2022-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2022-09-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2022-09-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2022-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2022-09-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-09-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2022-09-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-09-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-09-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2022-09-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-09-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2022-09-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2022-09-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2022-09-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2022-09-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2022-09-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-09-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-09-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-09-30"}],"authorContributionMap":{"CeereeC":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"seanmanik"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"seanmanik"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":350,"seanmanik":2}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":10,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":11,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":12,"author":{"gitId":"seanmanik"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":13,"author":{"gitId":"seanmanik"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"seanmanik"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":17,"author":{"gitId":"seanmanik"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":18,"author":{"gitId":"seanmanik"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":19,"author":{"gitId":"seanmanik"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":20,"author":{"gitId":"seanmanik"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":21,"author":{"gitId":"seanmanik"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":23,"author":{"gitId":"seanmanik"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":24,"author":{"gitId":"seanmanik"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":25,"author":{"gitId":"seanmanik"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":26,"author":{"gitId":"seanmanik"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":27,"author":{"gitId":"seanmanik"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":28,"author":{"gitId":"seanmanik"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":29,"author":{"gitId":"seanmanik"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":30,"author":{"gitId":"seanmanik"},"content":"            \u003cFlowPane fx:id\u003d\"events\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":31,"author":{"gitId":"seanmanik"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":32,"author":{"gitId":"seanmanik"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":33,"author":{"gitId":"seanmanik"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":34,"author":{"gitId":"seanmanik"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"seanmanik":34}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"-":7,"seanmanik":2}},{"path":"src/main/resources/view/EventsLabeler.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"    \u003cLabel fx:id\u003d\"eventsTextField\" text\u003d\"Events\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"seanmanik":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"seanmanik"},"content":"         title\u003d\"Travelr App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"seanmanik"},"content":"        \u003cHBox fx:id\u003d\"labeler\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"seanmanik"},"content":"          \u003cStackPane fx:id\u003d\"tripsTextField\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":55,"author":{"gitId":"seanmanik"},"content":"          \u003cStackPane fx:id\u003d\"eventsTextField\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":56,"author":{"gitId":"seanmanik"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":57,"author":{"gitId":"seanmanik"},"content":"        \u003cHBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":58,"author":{"gitId":"seanmanik"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":59,"author":{"gitId":"seanmanik"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":60,"author":{"gitId":"seanmanik"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":61,"author":{"gitId":"seanmanik"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":62,"author":{"gitId":"seanmanik"},"content":"          \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":63,"author":{"gitId":"seanmanik"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":55,"seanmanik":13}},{"path":"src/main/resources/view/SelectedTripCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Cjun1039"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":2,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":3,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":4,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":13,"author":{"gitId":"Cjun1039"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":14,"author":{"gitId":"Cjun1039"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":15,"author":{"gitId":"Cjun1039"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Cjun1039"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":17,"author":{"gitId":"Cjun1039"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":18,"author":{"gitId":"Cjun1039"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"Cjun1039"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"Cjun1039"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"Cjun1039"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"seanmanik"},"content":"         \u003cLabel fx:id\u003d\"selectedTripLabel\" styleClass\u003d\"cell_big_label\" text\u003d\"Selected Trip\"\u003e","lastModifiedDate":"2022-10-20"},{"lineNumber":23,"author":{"gitId":"Cjun1039"},"content":"            \u003cfont\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":24,"author":{"gitId":"Cjun1039"},"content":"               \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\"/\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":25,"author":{"gitId":"Cjun1039"},"content":"            \u003c/font\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Cjun1039"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"        \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"Cjun1039"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Cjun1039"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"Cjun1039"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Cjun1039"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"Cjun1039"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"Cjun1039"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Cjun1039"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Cjun1039"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2022-10-19"}],"authorContributionMap":{"Cjun1039":35,"seanmanik":1}},{"path":"src/main/resources/view/TripListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"Cjun1039"},"content":"        \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"      \u003cFlowPane fx:id\u003d\"events\" /\u003e","lastModifiedDate":"2022-10-07"},{"lineNumber":31,"author":{"gitId":"Cjun1039"},"content":"      \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Cjun1039":2,"-":31,"Bacon-Strips":1}},{"path":"src/main/resources/view/TripListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"Cjun1039"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"Cjun1039"},"content":"  \u003cStackPane fx:id\u003d\"selectedTripCardPlaceholder\" style\u003d\"-fx-border-color: grey; -fx-border-width: 3;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"Cjun1039"},"content":"      -fx-border-style: solid;\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"Cjun1039"},"content":"  \u003cListView fx:id\u003d\"tripListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2022-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Cjun1039":4,"-":7}},{"path":"src/main/resources/view/TripsLabeler.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanmanik"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":2,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":3,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":4,"author":{"gitId":"seanmanik"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":5,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":6,"author":{"gitId":"seanmanik"},"content":"","lastModifiedDate":"2022-10-08"},{"lineNumber":7,"author":{"gitId":"seanmanik"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":8,"author":{"gitId":"seanmanik"},"content":"    \u003cLabel fx:id\u003d\"tripsTextField\" text\u003d\"Trips\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2022-10-08"},{"lineNumber":9,"author":{"gitId":"seanmanik"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2022-10-08"}],"authorContributionMap":{"seanmanik":9}},{"path":"src/test/java/seedu/travelr/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    private final seedu.travelr.AppParameters expected \u003d new seedu.travelr.AppParameters();","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expected, seedu.travelr.AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expected, seedu.travelr.AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":54,"Bacon-Strips":4}},{"path":"src/test/java/seedu/travelr/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.core;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":26,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.core;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":133,"Bacon-Strips":2}},{"path":"src/test/java/seedu/travelr/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.core.index;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":58,"Bacon-Strips":2}},{"path":"src/test/java/seedu/travelr/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":34,"Bacon-Strips":2}},{"path":"src/test/java/seedu/travelr/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":2,"-":105,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.Config;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":3,"-":112,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":21,"Bacon-Strips":2}},{"path":"src/test/java/seedu/travelr/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.SerializableTestClass;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.TestUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":2,"-":42,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.commons.util;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":1,"-":141,"Bacon-Strips":2}},{"path":"src/test/java/seedu/travelr/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.CommandResult;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.storage.JsonAddressBookStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.storage.JsonUserPrefsStorage;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.storage.StorageManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"        logic \u003d new seedu.travelr.logic.LogicManager(model, storage);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"    // Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"        logic \u003d new seedu.travelr.logic.LogicManager(model, storage);","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + TITLE_DESC_GERMANY + DESCRIPTION_DESC_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"        Trip expectedTrip \u003d new TripBuilder(GERMANY).withEvents().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.addTrip(expectedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"    public void getFilteredTripList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredTripList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":1,"-":129,"Bacon-Strips":35}},{"path":"src/test/java/seedu/travelr/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.TypicalTrips.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    private Model model;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_newTrip_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        Trip validTrip \u003d new TripBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.addTrip(validTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(new AddCommand(validTrip), model,","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validTrip), expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_duplicateTrip_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        Trip tripInList \u003d model.getAddressBook().getTripList().get(0);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandFailure(new AddCommand(tripInList), model, AddCommand.MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":5,"Bacon-Strips":41}},{"path":"src/test/java/seedu/travelr/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Comparator;","lastModifiedDate":"2022-10-18"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ReadOnlyUserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.AllInBucketListPredicate;","lastModifiedDate":"2022-10-17"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Cjun1039"},"content":"import seedu.travelr.model.trip.ObservableTrip;","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"public class AddCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"    public void constructor_nullTrip_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_tripAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"        ModelStubAcceptingTripAdded modelStub \u003d new ModelStubAcceptingTripAdded();","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        Trip validTrip \u003d new TripBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        CommandResult commandResult \u003d new AddCommand(validTrip).execute(modelStub);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validTrip), commandResult.getFeedbackToUser());","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(Arrays.asList(validTrip), modelStub.tripsAdded);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_duplicateTrip_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"        Trip validTrip \u003d new TripBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"        AddCommand addCommand \u003d new AddCommand(validTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        ModelStub modelStub \u003d new ModelStubWithTrip(validTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_TRIP, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        Trip alice \u003d new TripBuilder().withTitle(\"Alice\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        Trip bob \u003d new TripBuilder().withTitle(\"Bob\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"        // different trip -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Bacon-Strips"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Bacon-Strips"},"content":"        public void addTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Bacon-Strips"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"Bacon-Strips"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Bacon-Strips"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"Bacon-Strips"},"content":"        public boolean hasTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"Bacon-Strips"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"Bacon-Strips"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"Bacon-Strips"},"content":"        public Event getEvent(Event event) {","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"Bacon-Strips"},"content":"        public Trip getTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"Bacon-Strips"},"content":"        public void deleteTrip(Trip target) {","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"Bacon-Strips"},"content":"        public void setTrip(Trip target, Trip editedTrip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"Bacon-Strips"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":175,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":176,"author":{"gitId":"Bacon-Strips"},"content":"        public ObservableList\u003cTrip\u003e getFilteredTripList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":177,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":178,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":179,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":180,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":181,"author":{"gitId":"Bacon-Strips"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":182,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":183,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":184,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":185,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":186,"author":{"gitId":"Bacon-Strips"},"content":"        public void updateFilteredTripList(Predicate\u003cTrip\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":187,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":188,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":189,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":190,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":191,"author":{"gitId":"Bacon-Strips"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2022-10-12"},{"lineNumber":192,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":193,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":194,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":195,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":196,"author":{"gitId":"Bacon-Strips"},"content":"        public AllInBucketListPredicate getBucketPredicate() {","lastModifiedDate":"2022-10-17"},{"lineNumber":197,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":198,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":199,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":200,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":201,"author":{"gitId":"Bacon-Strips"},"content":"        public void removeFromBucketList(Event event) {","lastModifiedDate":"2022-10-17"},{"lineNumber":202,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":203,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":204,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":205,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":206,"author":{"gitId":"Bacon-Strips"},"content":"        public void returnToBucketList(Event event) {","lastModifiedDate":"2022-10-17"},{"lineNumber":207,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-17"},{"lineNumber":208,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":209,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":210,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-18"},{"lineNumber":211,"author":{"gitId":"Bacon-Strips"},"content":"        public void sortTripsByComparator(Comparator\u003cTrip\u003e trip) {","lastModifiedDate":"2022-10-18"},{"lineNumber":212,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-18"},{"lineNumber":213,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-18"},{"lineNumber":214,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-18"},{"lineNumber":215,"author":{"gitId":"Cjun1039"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":216,"author":{"gitId":"Cjun1039"},"content":"        public ObservableTrip getSelectedTrip() {","lastModifiedDate":"2022-10-19"},{"lineNumber":217,"author":{"gitId":"Cjun1039"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":218,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":219,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":220,"author":{"gitId":"Cjun1039"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":221,"author":{"gitId":"Cjun1039"},"content":"        public void updateSelectedTrip(Trip trip) {","lastModifiedDate":"2022-10-19"},{"lineNumber":222,"author":{"gitId":"Cjun1039"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":223,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":224,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":225,"author":{"gitId":"Cjun1039"},"content":"        @Override","lastModifiedDate":"2022-10-19"},{"lineNumber":226,"author":{"gitId":"Cjun1039"},"content":"        public void resetSelectedTrip() {","lastModifiedDate":"2022-10-19"},{"lineNumber":227,"author":{"gitId":"Cjun1039"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2022-10-19"},{"lineNumber":228,"author":{"gitId":"Cjun1039"},"content":"        }","lastModifiedDate":"2022-10-19"},{"lineNumber":229,"author":{"gitId":"Cjun1039"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":230,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":231,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":232,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":233,"author":{"gitId":"Bacon-Strips"},"content":"     * A Model stub that contains a single trip.","lastModifiedDate":"2022-10-12"},{"lineNumber":234,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":235,"author":{"gitId":"Bacon-Strips"},"content":"    private class ModelStubWithTrip extends ModelStub {","lastModifiedDate":"2022-10-12"},{"lineNumber":236,"author":{"gitId":"Bacon-Strips"},"content":"        private final Trip trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":237,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":238,"author":{"gitId":"Bacon-Strips"},"content":"        ModelStubWithTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":239,"author":{"gitId":"Bacon-Strips"},"content":"            requireNonNull(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":240,"author":{"gitId":"Bacon-Strips"},"content":"            this.trip \u003d trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":241,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":242,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":243,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":244,"author":{"gitId":"Bacon-Strips"},"content":"        public boolean hasTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":245,"author":{"gitId":"Bacon-Strips"},"content":"            requireNonNull(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":246,"author":{"gitId":"Bacon-Strips"},"content":"            return this.trip.isSameTrip(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":247,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":248,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":249,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":250,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":251,"author":{"gitId":"Bacon-Strips"},"content":"     * A Model stub that always accept the trip being added.","lastModifiedDate":"2022-10-12"},{"lineNumber":252,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":253,"author":{"gitId":"Bacon-Strips"},"content":"    private class ModelStubAcceptingTripAdded extends ModelStub {","lastModifiedDate":"2022-10-12"},{"lineNumber":254,"author":{"gitId":"Bacon-Strips"},"content":"        final ArrayList\u003cTrip\u003e tripsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":255,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":256,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":257,"author":{"gitId":"Bacon-Strips"},"content":"        public boolean hasTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":258,"author":{"gitId":"Bacon-Strips"},"content":"            requireNonNull(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":259,"author":{"gitId":"Bacon-Strips"},"content":"            return tripsAdded.stream().anyMatch(trip::isSameTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":260,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":261,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":262,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":263,"author":{"gitId":"Bacon-Strips"},"content":"        public void addTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":264,"author":{"gitId":"Bacon-Strips"},"content":"            requireNonNull(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":265,"author":{"gitId":"Bacon-Strips"},"content":"            tripsAdded.add(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":266,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":267,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":268,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":269,"author":{"gitId":"Bacon-Strips"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2022-10-12"},{"lineNumber":270,"author":{"gitId":"Bacon-Strips"},"content":"            return new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":271,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":272,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":273,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":274,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Cjun1039":16,"gerardstevan":14,"Bacon-Strips":244}},{"path":"src/test/java/seedu/travelr/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":21,"Bacon-Strips":7}},{"path":"src/test/java/seedu/travelr/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":1,"-":53,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.exceptions.CommandException;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.testutil.EditTripDescriptorBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"public class CommandTestUtil {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String VALID_TITLE_GERMANY \u003d \"Germany trip\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String VALID_TITLE_ANTARCTICA \u003d \"Antarctic trip\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    public static final String VALID_TITLE_JAPAN \u003d \"Japan Trip\";","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String VALID_DESCRIPTION_GERMANY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String VALID_DESCRIPTION_ANTARCTICA \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"    public static final String VALID_DESCRIPTION_JAPAN \u003d \"Going around Japan\";","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String VALID_EVENT_EATING \u003d \"Eating\";","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String VALID_EVENT_SIGHTSEEING \u003d \"Sightseeing\";","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String TITLE_DESC_GERMANY \u003d \" \" + PREFIX_TITLE + VALID_TITLE_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String TITLE_DESC_ANTARCTICA \u003d \" \" + PREFIX_TITLE + VALID_TITLE_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String DESCRIPTION_DESC_GERMANY \u003d \" \" + PREFIX_DESC + VALID_DESCRIPTION_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String DESCRIPTION_DESC_ANTARCTICA \u003d \" \" + PREFIX_DESC + VALID_DESCRIPTION_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String EVENT_DESC_EATING \u003d \" \" + PREFIX_EVENT + VALID_EVENT_EATING;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String EVENT_DESC_SIGHTSEEING \u003d \" \" + PREFIX_EVENT + VALID_EVENT_SIGHTSEEING;","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String INVALID_TITLE_DESC \u003d \" \" + PREFIX_TITLE + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in titles","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d \" \" + PREFIX_DESC; // empty string not allowed for description","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String INVALID_EVENT_DESC \u003d \" \" + PREFIX_EVENT + \"hubby*\"; // \u0027*\u0027 not allowed in events","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"    public static final EditCommand.EditTripDescriptor DESC_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"    public static final EditCommand.EditTripDescriptor DESC_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    static {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"        DESC_GERMANY \u003d new EditTripDescriptorBuilder().withTitle(VALID_TITLE_GERMANY)","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"                .withDescription(VALID_DESCRIPTION_GERMANY)","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"                .withEvents(VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        DESC_ANTARCTICA \u003d new EditTripDescriptorBuilder().withTitle(VALID_TITLE_ANTARCTICA)","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"                .withDescription(VALID_DESCRIPTION_ANTARCTICA)","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"                .withEvents(VALID_EVENT_SIGHTSEEING, VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"     * - the address book, filtered trip list and selected trip in {@code actualModel} remain unchanged","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Bacon-Strips"},"content":"        // only do so by copying its components.","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Bacon-Strips"},"content":"        List\u003cTrip\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTripList());","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTripList());","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":108,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"     * Updates {@code model}\u0027s filtered list to show only the trip at the given {@code targetIndex} in the","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"Bacon-Strips"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"    public static void showTripAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTripList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Bacon-Strips"},"content":"        Trip trip \u003d model.getFilteredTripList().get(targetIndex.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"        final String[] splitTitle \u003d trip.getTitle().fullTitle.split(\"\\\\s+\");","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Bacon-Strips"},"content":"        model.updateFilteredTripList(new TitleContainsKeywordsPredicate(Arrays.asList(splitTitle[0])));","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(1, model.getFilteredTripList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"CeereeC":5,"gerardstevan":11,"Bacon-Strips":106}},{"path":"src/test/java/seedu/travelr/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.showTripAtIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_SECOND_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.getTypicalAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        Trip personToDelete \u003d model.getFilteredTripList().get(INDEX_FIRST_TRIP.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TRIP_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.deleteTrip(personToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTripList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"        showTripAtIndex(model, INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"        Trip personToDelete \u003d model.getFilteredTripList().get(INDEX_FIRST_TRIP.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_TRIP_SUCCESS, personToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.deleteTrip(personToDelete);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        showNoTrip(expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"        showTripAtIndex(model, INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTripList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"    private void showNoTrip(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"        model.updateFilteredTripList(p -\u003e false);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(model.getFilteredTripList().isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":6,"-":74,"Bacon-Strips":29}},{"path":"src/test/java/seedu/travelr/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.DESC_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.DESC_GERMANY;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_EATING;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.showTripAtIndex;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_SECOND_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.getTypicalAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.Messages;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.EditCommand.EditTripDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.EditTripDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"public class EditCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"        Trip editedTrip \u003d new TripBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder(editedTrip).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TRIP, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TRIP_SUCCESS, editedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.setTrip(model.getFilteredTripList().get(0), editedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"        Index indexLastTrip \u003d Index.fromOneBased(model.getFilteredTripList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        Trip lastTrip \u003d model.getFilteredTripList().get(indexLastTrip.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"        TripBuilder tripInList \u003d new TripBuilder(lastTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"        Trip editedTrip \u003d tripInList.withTitle(VALID_TITLE_ANTARCTICA)","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"                .withEvents(VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder().withTitle(VALID_TITLE_ANTARCTICA)","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"                .withEvents(VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastTrip, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TRIP_SUCCESS, editedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.setTrip(lastTrip, editedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TRIP, new EditTripDescriptor());","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"        Trip editedTrip \u003d model.getFilteredTripList().get(INDEX_FIRST_TRIP.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TRIP_SUCCESS, editedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"        showTripAtIndex(model, INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"        Trip tripInFilteredList \u003d model.getFilteredTripList().get(INDEX_FIRST_TRIP.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"        Trip editedTrip \u003d new TripBuilder(tripInFilteredList).withTitle(VALID_TITLE_ANTARCTICA).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TRIP,","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"                new EditTripDescriptorBuilder().withTitle(VALID_TITLE_ANTARCTICA).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_TRIP_SUCCESS, editedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.setTrip(model.getFilteredTripList().get(0), editedTrip);","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_duplicateTripUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Bacon-Strips"},"content":"        Trip firstTrip \u003d model.getFilteredTripList().get(INDEX_FIRST_TRIP.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder(firstTrip).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_TRIP, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_duplicateTripFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"        showTripAtIndex(model, INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"        // edit trip in filtered list into a duplicate in address book","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"        Trip tripInList \u003d model.getAddressBook().getTripList().get(INDEX_SECOND_TRIP.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_TRIP,","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"                new EditTripDescriptorBuilder(tripInList).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_invalidTripIndexUnfilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"Bacon-Strips"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTripList().size() + 1);","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder().withTitle(VALID_TITLE_ANTARCTICA).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"Bacon-Strips"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Bacon-Strips"},"content":"     * but smaller than size of address book","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_invalidTripIndexFilteredList_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"Bacon-Strips"},"content":"        showTripAtIndex(model, INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"Bacon-Strips"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"Bacon-Strips"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getTripList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"Bacon-Strips"},"content":"                new EditTripDescriptorBuilder().withTitle(VALID_TITLE_ANTARCTICA).build());","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_TRIP_DISPLAYED_INDEX);","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"Bacon-Strips"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"Bacon-Strips"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_TRIP, DESC_GERMANY);","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"Bacon-Strips"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor copyDescriptor \u003d new EditTripDescriptor(DESC_GERMANY);","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_TRIP, copyDescriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":156,"author":{"gitId":"Bacon-Strips"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":157,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"Bacon-Strips"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"Bacon-Strips"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":163,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2022-10-12"},{"lineNumber":164,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"Bacon-Strips"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_TRIP, DESC_GERMANY)));","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"Bacon-Strips"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_TRIP, DESC_ANTARCTICA)));","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":14,"Bacon-Strips":158}},{"path":"src/test/java/seedu/travelr/logic/commands/EditTripDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.DESC_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.DESC_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_SIGHTSEEING;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_ANTARCTICA;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.EditCommand.EditTripDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.EditTripDescriptorBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"public class EditTripDescriptorTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptorWithSameValues \u003d new EditTripDescriptor(DESC_GERMANY);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(DESC_GERMANY.equals(descriptorWithSameValues));","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(DESC_GERMANY.equals(DESC_GERMANY));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(DESC_GERMANY.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(DESC_GERMANY.equals(5));","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(DESC_GERMANY.equals(DESC_ANTARCTICA));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        EditTripDescriptor editedAmy \u003d new EditTripDescriptorBuilder(DESC_GERMANY).withTitle(","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"gerardstevan"},"content":"                VALID_TITLE_ANTARCTICA).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(DESC_GERMANY.equals(editedAmy));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        editedAmy \u003d new EditTripDescriptorBuilder(DESC_GERMANY).withDescription(VALID_DESCRIPTION_ANTARCTICA).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(DESC_GERMANY.equals(editedAmy));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"        // different events -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        editedAmy \u003d new EditTripDescriptorBuilder(DESC_GERMANY).withEvents(VALID_EVENT_SIGHTSEEING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(DESC_GERMANY.equals(editedAmy));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":8,"Bacon-Strips":41}},{"path":"src/test/java/seedu/travelr/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":12,"Bacon-Strips":6}},{"path":"src/test/java/seedu/travelr/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_TRIPS_LISTED_OVERVIEW;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.TypicalTrips.EUROPE;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.TAIWAN;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.THAILAND;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.getTypicalAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":24,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":25,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"public class FindCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"                new TitleContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"        // different trip -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_zeroKeywords_noTripFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TRIPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.updateFilteredTripList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTripList());","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"    public void execute_multipleKeywords_multipleTripsFound() {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TRIPS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"        TitleContainsKeywordsPredicate predicate \u003d preparePredicate(\"Taiwan Thailand Europe\");","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"        expectedModel.updateFilteredTripList(predicate);","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(Arrays.asList(TAIWAN, THAILAND, EUROPE), model.getFilteredTripList());","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"     * Parses {@code userInput} into a {@code TitleContainsKeywordsPredicate}.","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"    private TitleContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"        return new TitleContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":14,"Bacon-Strips":72}},{"path":"src/test/java/seedu/travelr/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":12,"Bacon-Strips":6}},{"path":"src/test/java/seedu/travelr/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.commands;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.showTripAtIndex;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.TypicalTrips.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ModelManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        showTripAtIndex(model, INDEX_FIRST_TRIP);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":4,"-":30,"Bacon-Strips":6}},{"path":"src/test/java/seedu/travelr/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.DESCRIPTION_DESC_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.DESCRIPTION_DESC_GERMANY;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.EVENT_DESC_EATING;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.EVENT_DESC_SIGHTSEEING;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.TITLE_DESC_ANTARCTICA;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.TITLE_DESC_GERMANY;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_EATING;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_SIGHTSEEING;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.TypicalTrips.GERMANY;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.AddCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        Trip expectedTrip \u003d new TripBuilder(ANTARCTICA).withEvents(VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"        // whitespace only preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + TITLE_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_ANTARCTICA + EVENT_DESC_EATING, new AddCommand(expectedTrip));","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        // multiple titles - last title accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, TITLE_DESC_GERMANY + TITLE_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_ANTARCTICA + EVENT_DESC_EATING, new AddCommand(expectedTrip));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, TITLE_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_ANTARCTICA + EVENT_DESC_EATING, new AddCommand(expectedTrip));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, TITLE_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_ANTARCTICA + EVENT_DESC_EATING, new AddCommand(expectedTrip));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"        // multiple descriptions - last description accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, TITLE_DESC_ANTARCTICA + DESCRIPTION_DESC_GERMANY","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_ANTARCTICA + EVENT_DESC_EATING, new AddCommand(expectedTrip));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"        // multiple events - all accepted","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"        Trip expectedTripMultipleEvents \u003d new TripBuilder(ANTARCTICA).withEvents(","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"gerardstevan"},"content":"                VALID_EVENT_EATING, VALID_EVENT_SIGHTSEEING)","lastModifiedDate":"2022-10-15"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, TITLE_DESC_ANTARCTICA + DESCRIPTION_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"                + EVENT_DESC_SIGHTSEEING + EVENT_DESC_EATING, new AddCommand(expectedTripMultipleEvents));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"        // zero events","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        Trip expectedTrip \u003d new TripBuilder(GERMANY).withEvents().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, TITLE_DESC_GERMANY + DESCRIPTION_DESC_GERMANY,","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"                new AddCommand(expectedTrip));","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"        // missing title prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, VALID_TITLE_ANTARCTICA + DESCRIPTION_DESC_ANTARCTICA,","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"        // missing phone prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, TITLE_DESC_ANTARCTICA + DESCRIPTION_DESC_ANTARCTICA,","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"        // missing email prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, TITLE_DESC_ANTARCTICA + DESCRIPTION_DESC_ANTARCTICA,","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"        // missing description prefix","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, TITLE_DESC_ANTARCTICA + VALID_DESCRIPTION_ANTARCTICA,","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"        // all prefixes missing","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, VALID_TITLE_ANTARCTICA + VALID_DESCRIPTION_ANTARCTICA,","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"                expectedMessage);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"        // invalid title","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + DESCRIPTION_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Bacon-Strips"},"content":"                + EVENT_DESC_SIGHTSEEING + EVENT_DESC_EATING, Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Bacon-Strips"},"content":"        // invalid description","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, TITLE_DESC_ANTARCTICA + INVALID_DESCRIPTION_DESC","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Bacon-Strips"},"content":"                + EVENT_DESC_SIGHTSEEING + EVENT_DESC_EATING, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"        // invalid event","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, TITLE_DESC_ANTARCTICA + DESCRIPTION_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"                + INVALID_EVENT_DESC + VALID_EVENT_EATING, Event.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, INVALID_TITLE_DESC + INVALID_DESCRIPTION_DESC,","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"        // non-empty preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + TITLE_DESC_ANTARCTICA","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_ANTARCTICA + EVENT_DESC_SIGHTSEEING + EVENT_DESC_EATING,","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":119,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":14,"Bacon-Strips":105}},{"path":"src/test/java/seedu/travelr/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.AddCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.ClearCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.ExitCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.FindCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.HelpCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.ListCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.testutil.TripUtil;","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        Trip trip \u003d new TripBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(TripUtil.getAddCommand(trip));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(new AddCommand(trip), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_TRIP.getOneBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_TRIP), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"        Trip trip \u003d new TripBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder(trip).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"                + INDEX_FIRST_TRIP.getOneBased() + \" \" + TripUtil.getEditTripDescriptorDetails(descriptor));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_TRIP, descriptor), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(new FindCommand(new TitleContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":4,"-":71,"Bacon-Strips":26}},{"path":"src/test/java/seedu/travelr/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":149,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.Command;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":36,"Bacon-Strips":3}},{"path":"src/test/java/seedu/travelr/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.DeleteCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_TRIP));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":1,"-":25,"Bacon-Strips":6}},{"path":"src/test/java/seedu/travelr/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.TITLE_DESC_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.EditCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String EVENT_EMPTY \u003d \" \" + PREFIX_EVENT;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"        // no index specified","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, VALID_TITLE_GERMANY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        // no field specified","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        // no index and no field specified","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        // negative index","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"-5\" + TITLE_DESC_GERMANY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"        // zero index","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"0\" + TITLE_DESC_GERMANY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC, Title.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DESCRIPTION_DESC, Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"        // invalid description","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_DESC, Event.MESSAGE_CONSTRAINTS); // invalid event","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"        // while parsing {@code PREFIX_EVENT} alone will reset the events of the {@code Trip} being edited,","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"        // parsing it together with a valid event results in error","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"gerardstevan"},"content":"        assertParseFailure(parser, \"1\" + EVENT_DESC_EATING + EVENT_DESC_SIGHTSEEING + EVENT_EMPTY,","lastModifiedDate":"2022-10-15"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"                Event.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"        assertParseFailure(parser, \"1\" + EVENT_DESC_EATING + EVENT_EMPTY + EVENT_DESC_SIGHTSEEING,","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"gerardstevan"},"content":"                Event.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":64,"author":{"gitId":"gerardstevan"},"content":"        assertParseFailure(parser, \"1\" + EVENT_EMPTY + EVENT_DESC_EATING + EVENT_DESC_SIGHTSEEING,","lastModifiedDate":"2022-10-15"},{"lineNumber":65,"author":{"gitId":"gerardstevan"},"content":"                Event.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-15"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TITLE_DESC + INVALID_DESCRIPTION_DESC,","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"                Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"        Index targetIndex \u003d INDEX_SECOND_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_DESC_SIGHTSEEING","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_GERMANY + TITLE_DESC_GERMANY + EVENT_DESC_EATING;","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder().withTitle(VALID_TITLE_GERMANY)","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"                .withDescription(VALID_DESCRIPTION_GERMANY)","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"                .withEvents(VALID_EVENT_SIGHTSEEING, VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"        Index targetIndex \u003d INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_DESC_GERMANY + DESCRIPTION_DESC_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder().withTitle(VALID_TITLE_GERMANY)","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"                .withDescription(VALID_DESCRIPTION_ANTARCTICA).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"        // name","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"Bacon-Strips"},"content":"        Index targetIndex \u003d INDEX_THIRD_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"        String userInput \u003d targetIndex.getOneBased() + TITLE_DESC_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder().withTitle(VALID_TITLE_GERMANY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"        // description","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Bacon-Strips"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor \u003d new EditTripDescriptorBuilder().withDescription(VALID_DESCRIPTION_GERMANY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"Bacon-Strips"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Bacon-Strips"},"content":"        // events","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"Bacon-Strips"},"content":"        userInput \u003d targetIndex.getOneBased() + EVENT_DESC_EATING;","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor \u003d new EditTripDescriptorBuilder().withEvents(VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"Bacon-Strips"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":129,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":131,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":132,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"Bacon-Strips"},"content":"        Index targetIndex \u003d INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"Bacon-Strips"},"content":"        String userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_GERMANY","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"Bacon-Strips"},"content":"                + EVENT_DESC_EATING + DESCRIPTION_DESC_GERMANY + EVENT_DESC_EATING","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"Bacon-Strips"},"content":"                + DESCRIPTION_DESC_ANTARCTICA + EVENT_DESC_SIGHTSEEING;","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder()","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"Bacon-Strips"},"content":"                .withDescription(VALID_DESCRIPTION_ANTARCTICA).withEvents(VALID_EVENT_EATING, VALID_EVENT_SIGHTSEEING)","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"Bacon-Strips"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":142,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":143,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":147,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":148,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":149,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":150,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"Bacon-Strips"},"content":"        // no other valid values specified","lastModifiedDate":"2022-10-12"},{"lineNumber":153,"author":{"gitId":"Bacon-Strips"},"content":"        Index targetIndex \u003d INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":154,"author":{"gitId":"Bacon-Strips"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_TITLE_DESC + VALID_DESCRIPTION_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":155,"author":{"gitId":"gerardstevan"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder().withDescription(","lastModifiedDate":"2022-10-15"},{"lineNumber":156,"author":{"gitId":"gerardstevan"},"content":"                VALID_DESCRIPTION_ANTARCTICA).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":157,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":158,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":161,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":163,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":164,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"Bacon-Strips"},"content":"    public void parse_resetEvents_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"Bacon-Strips"},"content":"        Index targetIndex \u003d INDEX_THIRD_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"Bacon-Strips"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_EMPTY;","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"Bacon-Strips"},"content":"        EditTripDescriptor descriptor \u003d new EditTripDescriptorBuilder().withEvents().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":170,"author":{"gitId":"Bacon-Strips"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":172,"author":{"gitId":"Bacon-Strips"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":173,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":174,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":175,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":14,"Bacon-Strips":161}},{"path":"src/test/java/seedu/travelr/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.FindCommand;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.TitleContainsKeywordsPredicate;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"                new FindCommand(new TitleContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":2,"-":27,"Bacon-Strips":5}},{"path":"src/test/java/seedu/travelr/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.logic.parser;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.ParserUtil.EVENT_DESCRIPTION_PLACEHOLDER;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalIndexes.INDEX_FIRST_TRIP;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.parser.exceptions.ParseException;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"public class ParserUtilTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String INVALID_EVENT \u003d \"#friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String VALID_DESCRIPTION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String VALID_EVENT_1 \u003d \"friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String VALID_EVENT_2 \u003d \"neighbour\";","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        // No whitespaces","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(INDEX_FIRST_TRIP, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(INDEX_FIRST_TRIP, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseTitle_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle((String) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseTitle_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_NAME));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseTitle_validValueWithoutWhitespace_returnsTitle() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        Title expectedTitle \u003d new Title(VALID_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(VALID_NAME));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseTitle_validValueWithWhitespace_returnsTrimmedTitle() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"        Title expectedTitle \u003d new Title(VALID_NAME);","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedTitle, ParserUtil.parseTitle(nameWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription((String) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvent_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEvent(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvent_invalidValue_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEvent(INVALID_EVENT));","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvent_validValueWithoutWhitespace_returnsEvent() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"        Event expectedEvent \u003d new Event(new Title(VALID_EVENT_1), new Description(EVENT_DESCRIPTION_PLACEHOLDER));","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedEvent, ParserUtil.parseEvent(VALID_EVENT_1));","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvent_validValueWithWhitespace_returnsTrimmedEvent() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Bacon-Strips"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_EVENT_1 + WHITESPACE;","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"Bacon-Strips"},"content":"        Event expectedEvent \u003d new Event(new Title(VALID_EVENT_1), new Description(EVENT_DESCRIPTION_PLACEHOLDER));","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedEvent, ParserUtil.parseEvent(tagWithWhitespace));","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvents_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEvents(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":126,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":127,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":128,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":129,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvents_collectionWithInvalidEvents_throwsParseException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEvents(Arrays.asList(VALID_EVENT_1, INVALID_EVENT)));","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":134,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvents_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(ParserUtil.parseEvents(Collections.emptyList()).isEmpty());","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":139,"author":{"gitId":"Bacon-Strips"},"content":"    public void parseEvents_collectionWithValidEvents_returnsEventSet() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":140,"author":{"gitId":"Bacon-Strips"},"content":"        Set\u003cEvent\u003e actualEventSet \u003d ParserUtil.parseEvents(Arrays.asList(VALID_EVENT_1, VALID_EVENT_2));","lastModifiedDate":"2022-10-12"},{"lineNumber":141,"author":{"gitId":"gerardstevan"},"content":"        Set\u003cEvent\u003e expectedEventSet \u003d new HashSet\u003cEvent\u003e(Arrays.asList(new Event(new Title(VALID_EVENT_1),","lastModifiedDate":"2022-10-15"},{"lineNumber":142,"author":{"gitId":"gerardstevan"},"content":"                new Description(EVENT_DESCRIPTION_PLACEHOLDER)), new Event(new Title(VALID_EVENT_2),","lastModifiedDate":"2022-10-15"},{"lineNumber":143,"author":{"gitId":"gerardstevan"},"content":"                    new Description(EVENT_DESCRIPTION_PLACEHOLDER))));","lastModifiedDate":"2022-10-15"},{"lineNumber":144,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(expectedEventSet, actualEventSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":15,"Bacon-Strips":132}},{"path":"src/test/java/seedu/travelr/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_SIGHTSEEING;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.SUN;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.getTypicalAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import java.util.Collection;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"public class AddressBookTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    private final seedu.travelr.model.AddressBook addressBook \u003d new seedu.travelr.model.AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTripList());","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"    public void resetData_withDuplicateTrips_throwsDuplicateTripException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"        // Two trips with the same identity fields","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"gerardstevan"},"content":"        Trip editedAlice \u003d new TripBuilder(SUN).withDescription(VALID_DESCRIPTION_ANTARCTICA).withEvents(","lastModifiedDate":"2022-10-15"},{"lineNumber":50,"author":{"gitId":"gerardstevan"},"content":"                VALID_EVENT_SIGHTSEEING).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"        List\u003cTrip\u003e newTrips \u003d Arrays.asList(SUN, editedAlice);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newTrips);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(DuplicateTripException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"    public void hasTrip_nullTrip_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTrip(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"    public void hasTrip_tripNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(addressBook.hasTrip(SUN));","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"    public void hasTrip_tripInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"        addressBook.addTrip(SUN);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(addressBook.hasTrip(SUN));","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"    public void hasTrip_tripWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"        addressBook.addTrip(SUN);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"gerardstevan"},"content":"        Trip editedAlice \u003d new TripBuilder(SUN).withDescription(VALID_DESCRIPTION_ANTARCTICA).withEvents(","lastModifiedDate":"2022-10-15"},{"lineNumber":78,"author":{"gitId":"gerardstevan"},"content":"                VALID_EVENT_SIGHTSEEING).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(addressBook.hasTrip(editedAlice));","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"Bacon-Strips"},"content":"    public void getTripList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTripList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"     * A stub ReadOnlyAddressBook whose trips list can violate interface constraints.","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"Bacon-Strips"},"content":"        private final ObservableList\u003cTrip\u003e trips \u003d FXCollections.observableArrayList();","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBookStub(Collection\u003cTrip\u003e trips) {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"            this.trips.setAll(trips);","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"        public ObservableList\u003cTrip\u003e getTripList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"Bacon-Strips"},"content":"            return trips;","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"Bacon-Strips"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"            return null;","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-17"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"        @Override","lastModifiedDate":"2022-10-17"},{"lineNumber":108,"author":{"gitId":"Bacon-Strips"},"content":"        public ObservableList\u003cEvent\u003e getAllEventList() {","lastModifiedDate":"2022-10-17"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"            return null;","lastModifiedDate":"2022-10-17"},{"lineNumber":110,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-17"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":15,"Bacon-Strips":98}},{"path":"src/test/java/seedu/travelr/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    public void hasTrip_nullTrip_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTrip(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"    public void hasTrip_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(modelManager.hasTrip(PLUTO));","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    public void hasTrip_personInAddressBook_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"        modelManager.addTrip(PLUTO);","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(modelManager.hasTrip(PLUTO));","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"    public void getFilteredTripList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTripList().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withTrip(PLUTO).withTrip(SUN).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"        String[] keywords \u003d PLUTO.getTitle().fullTitle.split(\"\\\\s+\");","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"        modelManager.updateFilteredTripList(new TitleContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"        modelManager.updateFilteredTripList(Model.PREDICATE_SHOW_ALL_TRIPS);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":100,"Bacon-Strips":17}},{"path":"src/test/java/seedu/travelr/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"        seedu.travelr.model.UserPrefs userPref \u003d new seedu.travelr.model.UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"        seedu.travelr.model.UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":17,"Bacon-Strips":4}},{"path":"src/test/java/seedu/travelr/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.event;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.parser.ParserUtil.EVENT_DESCRIPTION_PLACEHOLDER;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"public class EventTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    public void constructor_invalidEventTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"        String invalidEventTitle \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(new Title(invalidEventTitle),","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"                new Description(EVENT_DESCRIPTION_PLACEHOLDER)));","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"    public void isValidEventTitle() {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        // null tag name","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e Event.isValidEventTitle(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":7,"Bacon-Strips":24}},{"path":"src/test/java/seedu/travelr/model/trip/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"public class DescriptionTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    public void isValidDescription() {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"        // null address","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"        // invalid addresses","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        // valid addresses","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(Description.isValidDescription(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(Description.isValidDescription(\"-\")); // one character","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"        assertTrue(Description.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"gerardstevan"},"content":"        // long address","lastModifiedDate":"2022-10-15"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":6,"Bacon-Strips":33}},{"path":"src/test/java/seedu/travelr/model/trip/TitleContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"public class TitleContainsKeywordsPredicateTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"        TitleContainsKeywordsPredicate firstPredicate \u003d new TitleContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"        TitleContainsKeywordsPredicate secondPredicate \u003d new TitleContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"        TitleContainsKeywordsPredicate firstPredicateCopy \u003d new TitleContainsKeywordsPredicate(","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        // One keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"                \"Alice\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(predicate.test(new TripBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"        // Multiple keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(predicate.test(new TripBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        // Only one matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(predicate.test(new TripBuilder().withTitle(\"Alice Carol\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"        // Mixed-case keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(predicate.test(new TripBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"        // Zero keywords","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"        TitleContainsKeywordsPredicate predicate \u003d new TitleContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(predicate.test(new TripBuilder().withTitle(\"Alice\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"        // Non-matching keyword","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(predicate.test(new TripBuilder().withTitle(\"Alice Bob\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"        predicate \u003d new TitleContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(predicate.test(new TripBuilder().withTitle(\"Alice\").withDescription(\"Main Street\").build()));","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":9,"Bacon-Strips":67}},{"path":"src/test/java/seedu/travelr/model/trip/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-19"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"public class TitleTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"    public void constructor_invalidTitle_throwsIllegalArgumentException() {","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    public void isValidTitle() {","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"        // null Title","lastModifiedDate":"2022-10-19"},{"lineNumber":27,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e Title.isValidTitle(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":28,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"        // invalid Title","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"        assertFalse(Title.isValidTitle(\"\")); // empty string","lastModifiedDate":"2022-10-19"},{"lineNumber":31,"author":{"gitId":"CeereeC"},"content":"        assertFalse(Title.isValidTitle(\" \")); // spaces only","lastModifiedDate":"2022-10-19"},{"lineNumber":32,"author":{"gitId":"CeereeC"},"content":"        assertFalse(Title.isValidTitle(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2022-10-19"},{"lineNumber":33,"author":{"gitId":"CeereeC"},"content":"        assertFalse(Title.isValidTitle(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2022-10-19"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"CeereeC"},"content":"        // valid Title","lastModifiedDate":"2022-10-19"},{"lineNumber":36,"author":{"gitId":"CeereeC"},"content":"        assertTrue(Title.isValidTitle(\"peter jack\")); // alphabets only","lastModifiedDate":"2022-10-19"},{"lineNumber":37,"author":{"gitId":"CeereeC"},"content":"        assertTrue(Title.isValidTitle(\"12345\")); // numbers only","lastModifiedDate":"2022-10-19"},{"lineNumber":38,"author":{"gitId":"CeereeC"},"content":"        assertTrue(Title.isValidTitle(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2022-10-19"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"        assertTrue(Title.isValidTitle(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"        assertTrue(Title.isValidTitle(\"David Roger Jackson Ray Jr 2nd\")); // long Titles","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"CeereeC":22,"gerardstevan":3,"Bacon-Strips":17}},{"path":"src/test/java/seedu/travelr/model/trip/TripTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_SIGHTSEEING;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"public class TripTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"        Trip trip \u003d new TripBuilder().build();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e trip.getEvents().remove(0));","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    public void isSameTrip() {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(GERMANY.isSameTrip(GERMANY));","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(GERMANY.isSameTrip(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"        // same title, all other attributes different -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        Trip editedGermany \u003d new TripBuilder(GERMANY)","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"                .withDescription(VALID_DESCRIPTION_ANTARCTICA).withEvents(VALID_EVENT_SIGHTSEEING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(GERMANY.isSameTrip(editedGermany));","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        // different title, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"        editedGermany \u003d new TripBuilder(GERMANY).withTitle(VALID_TITLE_ANTARCTICA).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(GERMANY.isSameTrip(editedGermany));","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        // title differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        Trip editedBob \u003d new TripBuilder(ANTARCTICA).withTitle(VALID_TITLE_ANTARCTICA.toLowerCase()).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(ANTARCTICA.isSameTrip(editedBob));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"        // title has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        String titleWithTrailingSpaces \u003d VALID_TITLE_ANTARCTICA + \" \";","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        editedBob \u003d new TripBuilder(ANTARCTICA).withTitle(titleWithTrailingSpaces).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(ANTARCTICA.isSameTrip(editedBob));","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"    public void equals() {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"        Trip aliceCopy \u003d new TripBuilder(GERMANY).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(GERMANY.equals(aliceCopy));","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"        assertTrue(GERMANY.equals(GERMANY));","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        // null -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(GERMANY.equals(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(GERMANY.equals(5));","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        // different trip -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(GERMANY.equals(ANTARCTICA));","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"        // different title -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"        Trip editedGermany \u003d new TripBuilder(GERMANY).withTitle(VALID_TITLE_ANTARCTICA).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"        assertFalse(GERMANY.equals(editedGermany));","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"        editedGermany \u003d new TripBuilder(GERMANY).withDescription(VALID_DESCRIPTION_ANTARCTICA).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"gerardstevan"},"content":"        assertTrue(GERMANY.equals(editedGermany));","lastModifiedDate":"2022-10-15"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"        // different events -\u003e returns false","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"        editedGermany \u003d new TripBuilder(GERMANY).withEvents(VALID_EVENT_SIGHTSEEING).build();","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"gerardstevan"},"content":"        assertTrue(GERMANY.equals(editedGermany));","lastModifiedDate":"2022-10-15"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":8,"Bacon-Strips":73}},{"path":"src/test/java/seedu/travelr/model/trip/UniqueTripListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.model.trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_SIGHTSEEING;","lastModifiedDate":"2022-10-19"},{"lineNumber":7,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_GERMANY;","lastModifiedDate":"2022-10-19"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_JAPAN;","lastModifiedDate":"2022-10-19"},{"lineNumber":9,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-19"},{"lineNumber":10,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.testutil.TypicalTrips.GERMANY;","lastModifiedDate":"2022-10-19"},{"lineNumber":11,"author":{"gitId":"CeereeC"},"content":"import static seedu.travelr.testutil.TypicalTrips.JAPAN;","lastModifiedDate":"2022-10-19"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import java.util.Collections;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-19"},{"lineNumber":19,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.exceptions.DuplicateTripException;","lastModifiedDate":"2022-10-19"},{"lineNumber":20,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.trip.exceptions.TripNotFoundException;","lastModifiedDate":"2022-10-19"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.testutil.TripBuilder;","lastModifiedDate":"2022-10-19"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"public class UniqueTripListTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    private final UniqueTripList uniqueTripList \u003d new UniqueTripList();","lastModifiedDate":"2022-10-19"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTripList.contains(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"CeereeC"},"content":"        assertFalse(uniqueTripList.contains(JAPAN));","lastModifiedDate":"2022-10-19"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":40,"author":{"gitId":"CeereeC"},"content":"        assertTrue(uniqueTripList.contains(JAPAN));","lastModifiedDate":"2022-10-19"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":46,"author":{"gitId":"CeereeC"},"content":"        Trip editedJapanTrip \u003d new TripBuilder(JAPAN).withTitle(VALID_TITLE_JAPAN).withEvents(VALID_EVENT_SIGHTSEEING)","lastModifiedDate":"2022-10-19"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"CeereeC"},"content":"        assertTrue(uniqueTripList.contains(editedJapanTrip));","lastModifiedDate":"2022-10-19"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTripList.add(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":59,"author":{"gitId":"CeereeC"},"content":"        assertThrows(DuplicateTripException.class, () -\u003e uniqueTripList.add(JAPAN));","lastModifiedDate":"2022-10-19"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTripList.setTrip(null, JAPAN));","lastModifiedDate":"2022-10-19"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTripList.setTrip(JAPAN, null));","lastModifiedDate":"2022-10-19"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"        assertThrows(TripNotFoundException.class, () -\u003e uniqueTripList.setTrip(JAPAN, JAPAN));","lastModifiedDate":"2022-10-19"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":80,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.setTrip(JAPAN, JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":81,"author":{"gitId":"CeereeC"},"content":"        UniqueTripList expectedUniquePersonList \u003d new UniqueTripList();","lastModifiedDate":"2022-10-19"},{"lineNumber":82,"author":{"gitId":"CeereeC"},"content":"        expectedUniquePersonList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":83,"author":{"gitId":"CeereeC"},"content":"        assertEquals(expectedUniquePersonList, uniqueTripList);","lastModifiedDate":"2022-10-19"},{"lineNumber":84,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":89,"author":{"gitId":"CeereeC"},"content":"        Trip editedJapanTrip \u003d new TripBuilder(JAPAN).withTitle(VALID_TITLE_GERMANY).withEvents(VALID_EVENT_SIGHTSEEING)","lastModifiedDate":"2022-10-19"},{"lineNumber":90,"author":{"gitId":"Bacon-Strips"},"content":"                .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.setTrip(JAPAN, editedJapanTrip);","lastModifiedDate":"2022-10-19"},{"lineNumber":92,"author":{"gitId":"CeereeC"},"content":"        UniqueTripList expectedUniquePersonList \u003d new UniqueTripList();","lastModifiedDate":"2022-10-19"},{"lineNumber":93,"author":{"gitId":"CeereeC"},"content":"        expectedUniquePersonList.add(editedJapanTrip);","lastModifiedDate":"2022-10-19"},{"lineNumber":94,"author":{"gitId":"CeereeC"},"content":"        assertEquals(expectedUniquePersonList, uniqueTripList);","lastModifiedDate":"2022-10-19"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":100,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.setTrip(JAPAN, GERMANY);","lastModifiedDate":"2022-10-19"},{"lineNumber":101,"author":{"gitId":"CeereeC"},"content":"        UniqueTripList expectedUniquePersonList \u003d new UniqueTripList();","lastModifiedDate":"2022-10-19"},{"lineNumber":102,"author":{"gitId":"CeereeC"},"content":"        expectedUniquePersonList.add(GERMANY);","lastModifiedDate":"2022-10-19"},{"lineNumber":103,"author":{"gitId":"CeereeC"},"content":"        assertEquals(expectedUniquePersonList, uniqueTripList);","lastModifiedDate":"2022-10-19"},{"lineNumber":104,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":109,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(GERMANY);","lastModifiedDate":"2022-10-19"},{"lineNumber":110,"author":{"gitId":"CeereeC"},"content":"        assertThrows(DuplicateTripException.class, () -\u003e uniqueTripList.setTrip(JAPAN, GERMANY));","lastModifiedDate":"2022-10-19"},{"lineNumber":111,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"Bacon-Strips"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTripList.remove(null));","lastModifiedDate":"2022-10-19"},{"lineNumber":116,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"Bacon-Strips"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"CeereeC"},"content":"        assertThrows(TripNotFoundException.class, () -\u003e uniqueTripList.remove(JAPAN));","lastModifiedDate":"2022-10-19"},{"lineNumber":121,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":124,"author":{"gitId":"Bacon-Strips"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2022-10-12"},{"lineNumber":125,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":126,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.remove(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":127,"author":{"gitId":"CeereeC"},"content":"        UniqueTripList expectedUniquePersonList \u003d new UniqueTripList();","lastModifiedDate":"2022-10-19"},{"lineNumber":128,"author":{"gitId":"CeereeC"},"content":"        assertEquals(expectedUniquePersonList, uniqueTripList);","lastModifiedDate":"2022-10-19"},{"lineNumber":129,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":130,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":131,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":132,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":133,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTripList.setTrips((UniqueTripList) null));","lastModifiedDate":"2022-10-19"},{"lineNumber":134,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":135,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":136,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":137,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":138,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":139,"author":{"gitId":"CeereeC"},"content":"        UniqueTripList expectedUniquePersonList \u003d new UniqueTripList();","lastModifiedDate":"2022-10-19"},{"lineNumber":140,"author":{"gitId":"CeereeC"},"content":"        expectedUniquePersonList.add(GERMANY);","lastModifiedDate":"2022-10-19"},{"lineNumber":141,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.setTrips(expectedUniquePersonList);","lastModifiedDate":"2022-10-19"},{"lineNumber":142,"author":{"gitId":"CeereeC"},"content":"        assertEquals(expectedUniquePersonList, uniqueTripList);","lastModifiedDate":"2022-10-19"},{"lineNumber":143,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":144,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":145,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":146,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":147,"author":{"gitId":"CeereeC"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTripList.setTrips((List\u003cTrip\u003e) null));","lastModifiedDate":"2022-10-19"},{"lineNumber":148,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":149,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":150,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":151,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2022-10-12"},{"lineNumber":152,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.add(JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":153,"author":{"gitId":"CeereeC"},"content":"        List\u003cTrip\u003e personList \u003d Collections.singletonList(GERMANY);","lastModifiedDate":"2022-10-19"},{"lineNumber":154,"author":{"gitId":"CeereeC"},"content":"        uniqueTripList.setTrips(personList);","lastModifiedDate":"2022-10-19"},{"lineNumber":155,"author":{"gitId":"CeereeC"},"content":"        UniqueTripList expectedUniquePersonList \u003d new UniqueTripList();","lastModifiedDate":"2022-10-19"},{"lineNumber":156,"author":{"gitId":"CeereeC"},"content":"        expectedUniquePersonList.add(GERMANY);","lastModifiedDate":"2022-10-19"},{"lineNumber":157,"author":{"gitId":"CeereeC"},"content":"        assertEquals(expectedUniquePersonList, uniqueTripList);","lastModifiedDate":"2022-10-19"},{"lineNumber":158,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":159,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":160,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":161,"author":{"gitId":"Bacon-Strips"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":162,"author":{"gitId":"CeereeC"},"content":"        List\u003cTrip\u003e listWithDuplicatePersons \u003d Arrays.asList(JAPAN, JAPAN);","lastModifiedDate":"2022-10-19"},{"lineNumber":163,"author":{"gitId":"CeereeC"},"content":"        assertThrows(DuplicateTripException.class, () -\u003e uniqueTripList.setTrips(listWithDuplicatePersons));","lastModifiedDate":"2022-10-19"},{"lineNumber":164,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":165,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":166,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":167,"author":{"gitId":"Bacon-Strips"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":168,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2022-10-12"},{"lineNumber":169,"author":{"gitId":"CeereeC"},"content":"                -\u003e uniqueTripList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2022-10-19"},{"lineNumber":170,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":171,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"CeereeC":65,"gerardstevan":6,"Bacon-Strips":100}},{"path":"src/test/java/seedu/travelr/storage/JsonAdaptedTripTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.storage.JsonAdaptedTrip.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.TypicalTrips.MALAYSIA;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.exceptions.IllegalValueException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"public class JsonAdaptedTripTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String INVALID_TITLE \u003d \"R@chel\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String INVALID_EVENT \u003d \"#friend\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"CeereeC"},"content":"    private static final String INVALID_LOCATION \u003d \"#MungBean\";","lastModifiedDate":"2022-10-20"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String VALID_TITLE \u003d MALAYSIA.getTitle().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    private static final String VALID_DESCRIPTION \u003d MALAYSIA.getDescription().toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_EVENTS \u003d MALAYSIA.getEvents().stream()","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"    private static final boolean VALID_DONE_VALUE \u003d true;","lastModifiedDate":"2022-10-18"},{"lineNumber":29,"author":{"gitId":"CeereeC"},"content":"    private static final String VALID_LOCATION_VALUE \u003d \"Japan\";","lastModifiedDate":"2022-10-20"},{"lineNumber":30,"author":{"gitId":"CeereeC"},"content":"    private static final String VALID_DATE \u003d \"11/11/2022\";","lastModifiedDate":"2022-10-20"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    public void toModelType_validTripDetails_returnsTrip() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        JsonAdaptedTrip trip \u003d new JsonAdaptedTrip(MALAYSIA);","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(MALAYSIA, trip.toModelType());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"    public void toModelType_invalidTitle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"        JsonAdaptedTrip trip \u003d","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"CeereeC"},"content":"                new JsonAdaptedTrip(INVALID_TITLE, VALID_DESCRIPTION, VALID_DONE_VALUE,","lastModifiedDate":"2022-10-20"},{"lineNumber":42,"author":{"gitId":"CeereeC"},"content":"                        VALID_LOCATION_VALUE, VALID_DATE, VALID_EVENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d Title.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, trip::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    public void toModelType_nullTitle_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"CeereeC"},"content":"        JsonAdaptedTrip trip \u003d new JsonAdaptedTrip(null, VALID_DESCRIPTION, VALID_DONE_VALUE,","lastModifiedDate":"2022-10-20"},{"lineNumber":50,"author":{"gitId":"CeereeC"},"content":"                VALID_LOCATION_VALUE, VALID_DATE, VALID_EVENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName());","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, trip::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"CeereeC"},"content":"        JsonAdaptedTrip trip \u003d new JsonAdaptedTrip(VALID_TITLE, null, VALID_DONE_VALUE,","lastModifiedDate":"2022-10-20"},{"lineNumber":58,"author":{"gitId":"CeereeC"},"content":"                VALID_LOCATION_VALUE, VALID_DATE, VALID_EVENTS);","lastModifiedDate":"2022-10-20"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, trip::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"CeereeC":9,"gerardstevan":10,"Bacon-Strips":43}},{"path":"src/test/java/seedu/travelr/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"            \"JsonAddressBookStorageTest\");","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"        return new seedu.travelr.storage.JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"gerardstevan"},"content":"                addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"    public void readAddressBook_invalidTripAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidTripAddressBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"    public void readAddressBook_invalidAndValidTripAddressBook_throwDataConversionException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidTripAddressBook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"gerardstevan"},"content":"        seedu.travelr.storage.JsonAddressBookStorage jsonAddressBookStorage \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":73,"author":{"gitId":"gerardstevan"},"content":"                new seedu.travelr.storage.JsonAddressBookStorage(filePath);","lastModifiedDate":"2022-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"        original.addTrip(MOON);","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"Bacon-Strips"},"content":"        original.removeTrip(EUROPE);","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"Bacon-Strips"},"content":"        original.addTrip(MARS);","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":9,"-":90,"Bacon-Strips":18}},{"path":"src/test/java/seedu/travelr/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"    private static final Path TYPICAL_TRIPS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTripsAddressBook.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"    private static final Path INVALID_TRIP_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTripAddressBook.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"    private static final Path DUPLICATE_TRIP_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTripAddressBook.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"    public void toModelType_typicalTripsFile_success() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"        seedu.travelr.storage.JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TRIPS_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"                seedu.travelr.storage.JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBook typicalTripsAddressBook \u003d TypicalTrips.getTypicalAddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"        assertEquals(addressBookFromFile, typicalTripsAddressBook);","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"    public void toModelType_invalidTripFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"        seedu.travelr.storage.JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TRIP_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"                seedu.travelr.storage.JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"    public void toModelType_duplicateTrips_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        seedu.travelr.storage.JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TRIP_FILE,","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"                seedu.travelr.storage.JsonSerializableAddressBook.class).get();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"gerardstevan"},"content":"        assertThrows(IllegalValueException.class, seedu.travelr.storage","lastModifiedDate":"2022-10-15"},{"lineNumber":36,"author":{"gitId":"gerardstevan"},"content":"                .JsonSerializableAddressBook.MESSAGE_DUPLICATE_TRIP, dataFromFile::toModelType);","lastModifiedDate":"2022-10-15"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":5,"Bacon-Strips":35}},{"path":"src/test/java/seedu/travelr/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-10-15"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.exceptions.DataConversionException;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        return new seedu.travelr.storage.JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"Bacon-Strips"},"content":"            new seedu.travelr.storage.JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"Bacon-Strips"},"content":"        seedu.travelr.storage.JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2022-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":4,"-":115,"Bacon-Strips":4}},{"path":"src/test/java/seedu/travelr/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.storage;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.TypicalTrips.getTypicalAddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.commons.core.GuiSettings;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.ReadOnlyAddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.UserPrefs;","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"    private seedu.travelr.storage.StorageManager storageManager;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"gerardstevan"},"content":"        seedu.travelr.storage.JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":28,"author":{"gitId":"gerardstevan"},"content":"                new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":29,"author":{"gitId":"gerardstevan"},"content":"        seedu.travelr.storage.JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2022-10-15"},{"lineNumber":30,"author":{"gitId":"gerardstevan"},"content":"                new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2022-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":5,"-":59,"Bacon-Strips":6}},{"path":"src/test/java/seedu/travelr/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withTrip(\"John\", \"Doe\").build();}","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"     * Adds a new {@code Trip} to the {@code AddressBook} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"    public AddressBookBuilder withTrip(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        addressBook.addTrip(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":27,"Bacon-Strips":7}},{"path":"src/test/java/seedu/travelr/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":33,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/testutil/EditTripDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.ParserUtil.EVENT_DESCRIPTION_PLACEHOLDER;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.logic.commands.EditCommand.EditTripDescriptor;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":" * A utility class to help with building EditTripDescriptor objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"public class EditTripDescriptorBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"    private EditTripDescriptor descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    public EditTripDescriptorBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor \u003d new EditTripDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"    public EditTripDescriptorBuilder(EditTripDescriptor descriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"        this.descriptor \u003d new EditTripDescriptor(descriptor);","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns an {@code EditTripDescriptor} with fields containing {@code trip}\u0027s details","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    public EditTripDescriptorBuilder(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor \u003d new EditTripDescriptor();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor.setTitle(trip.getTitle());","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor.setDescription(trip.getDescription());","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor.setEvents(trip.getEvents());","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"     * Sets the {@code Title} of the {@code EditTripDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"    public EditTripDescriptorBuilder withTitle(String title) {","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor.setTitle(new Title(title));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"     * Sets the {@code Description} of the {@code EditTripDescriptor} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    public EditTripDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"     * Parses the {@code events} into a {@code Set\u003cEvent\u003e} and set it to the {@code EditTripDescriptor}","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"     * that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    public EditTripDescriptorBuilder withEvents(String... events) {","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"gerardstevan"},"content":"        Set\u003cEvent\u003e eventSet \u003d Stream.of(events).map(title -\u003e new Event(new Title(title),","lastModifiedDate":"2022-10-15"},{"lineNumber":62,"author":{"gitId":"gerardstevan"},"content":"                new Description(EVENT_DESCRIPTION_PLACEHOLDER))).collect(Collectors.toSet());","lastModifiedDate":"2022-10-15"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor.setEvents(eventSet);","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"    public EditTripDescriptor build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"        return descriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":8,"Bacon-Strips":62}},{"path":"src/test/java/seedu/travelr/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":71,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.Model;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns the middle index of the trip in the {@code model}\u0027s trip list.","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"        return Index.fromOneBased(model.getFilteredTripList().size() / 2);","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns the last index of the trip in the {@code model}\u0027s trip list.","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"        return Index.fromOneBased(model.getFilteredTripList().size());","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns the trip in the {@code model}\u0027s trip list at {@code index}.","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"    public static Trip getTrip(Model model, Index index) {","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        return model.getFilteredTripList().get(index.getZeroBased());","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":3,"-":44,"Bacon-Strips":8}},{"path":"src/test/java/seedu/travelr/testutil/TripBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import java.util.HashSet;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.DateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Description;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"CeereeC"},"content":"import seedu.travelr.model.component.Location;","lastModifiedDate":"2022-10-20"},{"lineNumber":9,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.component.Title;","lastModifiedDate":"2022-10-15"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.util.SampleDataUtil;","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":" * A utility class to help with building Trip objects.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"public class TripBuilder {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String DEFAULT_TITLE \u003d \"Singapore Trip\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"See the Merlion.\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    private Title title;","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"    private Description description;","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    private Set\u003cEvent\u003e events;","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"CeereeC"},"content":"    private Location location;","lastModifiedDate":"2022-10-20"},{"lineNumber":26,"author":{"gitId":"CeereeC"},"content":"    private DateField dateField;","lastModifiedDate":"2022-10-20"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"     * Creates a {@code TripBuilder} with the default details.","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"    public TripBuilder() {","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"        events \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"     * Initializes the TripBuilder with the data of {@code tripToCopy}.","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"    public TripBuilder(Trip tripToCopy) {","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"        title \u003d tripToCopy.getTitle();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"        description \u003d tripToCopy.getDescription();","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        events \u003d new HashSet\u003c\u003e(tripToCopy.getEvents());","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"CeereeC"},"content":"        location \u003d tripToCopy.getLocation();","lastModifiedDate":"2022-10-20"},{"lineNumber":45,"author":{"gitId":"CeereeC"},"content":"        dateField \u003d tripToCopy.getDateField();","lastModifiedDate":"2022-10-20"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"     * Sets the {@code Title} of the {@code Trip} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    public TripBuilder withTitle(String title) {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"     * Sets the {@code Email} of the {@code Trip} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"    public TripBuilder withDescription(String description) {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"     * Parses the {@code events} into a {@code Set\u003cEvent\u003e} and set it to the {@code Trip} that we are building.","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"    public TripBuilder withEvents(String... events) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"        this.events \u003d SampleDataUtil.getEventSet(events);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"        return this;","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"CeereeC"},"content":"","lastModifiedDate":"2022-10-20"},{"lineNumber":72,"author":{"gitId":"CeereeC"},"content":"    /**","lastModifiedDate":"2022-10-20"},{"lineNumber":73,"author":{"gitId":"CeereeC"},"content":"     * Builds the trip from the inputs","lastModifiedDate":"2022-10-20"},{"lineNumber":74,"author":{"gitId":"CeereeC"},"content":"     * @return","lastModifiedDate":"2022-10-20"},{"lineNumber":75,"author":{"gitId":"CeereeC"},"content":"     */","lastModifiedDate":"2022-10-20"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"    public Trip build() {","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"CeereeC"},"content":"        Trip newTrip \u003d new Trip(title, description, events);","lastModifiedDate":"2022-10-20"},{"lineNumber":78,"author":{"gitId":"CeereeC"},"content":"        return newTrip;","lastModifiedDate":"2022-10-20"},{"lineNumber":79,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"CeereeC":15,"gerardstevan":6,"Bacon-Strips":60}},{"path":"src/test/java/seedu/travelr/testutil/TripUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"import java.util.Set;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.AddCommand;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.logic.commands.EditCommand.EditTripDescriptor;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.event.Event;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":" * A utility class for Trip.","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"Bacon-Strips"},"content":"public class TripUtil {","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns an add command string for adding the {@code trip}.","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"Bacon-Strips"},"content":"    public static String getAddCommand(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getTripDetails(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns the part of command string for the given {@code trip}\u0027s details.","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"    public static String getTripDetails(Trip trip) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"        sb.append(PREFIX_TITLE + trip.getTitle().fullTitle + \" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"        sb.append(PREFIX_DESC + trip.getDescription().value + \" \");","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"        trip.getEvents().stream().forEach(","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"            s -\u003e sb.append(PREFIX_EVENT + s.getTitle().toString() + \" \")","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"        );","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns the part of command string for the given {@code EditTripDescriptor}\u0027s details.","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"    public static String getEditTripDescriptorDetails(EditTripDescriptor descriptor) {","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"        descriptor.getTitle().ifPresent(title -\u003e sb.append(PREFIX_TITLE).append(title.fullTitle).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"gerardstevan"},"content":"        descriptor.getDescription().ifPresent(description -\u003e sb.append(PREFIX_DESC)","lastModifiedDate":"2022-10-15"},{"lineNumber":46,"author":{"gitId":"gerardstevan"},"content":"                .append(description.value).append(\" \"));","lastModifiedDate":"2022-10-15"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"        if (descriptor.getEvents().isPresent()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"            Set\u003cEvent\u003e events \u003d descriptor.getEvents().get();","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"            if (events.isEmpty()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"                sb.append(PREFIX_EVENT);","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"            } else {","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"Bacon-Strips"},"content":"                events.forEach(s -\u003e sb.append(PREFIX_EVENT).append(s.getTitle().toString()).append(\" \"));","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"Bacon-Strips"},"content":"            }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":55,"author":{"gitId":"Bacon-Strips"},"content":"        return sb.toString();","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":8,"Bacon-Strips":49}},{"path":"src/test/java/seedu/travelr/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"Bacon-Strips"},"content":"import seedu.travelr.commons.core.index.Index;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"Bacon-Strips"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"Bacon-Strips"},"content":"public class TypicalIndexes {","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Index INDEX_FIRST_TRIP \u003d Index.fromOneBased(1);","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Index INDEX_SECOND_TRIP \u003d Index.fromOneBased(2);","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Index INDEX_THIRD_TRIP \u003d Index.fromOneBased(3);","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"Bacon-Strips":12}},{"path":"src/test/java/seedu/travelr/testutil/TypicalTrips.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.testutil;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"gerardstevan"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"gerardstevan"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"gerardstevan"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2022-10-15"},{"lineNumber":7,"author":{"gitId":"gerardstevan"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2022-10-15"},{"lineNumber":8,"author":{"gitId":"gerardstevan"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2022-10-15"},{"lineNumber":9,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_DESCRIPTION_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_DESCRIPTION_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_EATING;","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_EVENT_SIGHTSEEING;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_ANTARCTICA;","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"Bacon-Strips"},"content":"import static seedu.travelr.logic.commands.CommandTestUtil.VALID_TITLE_GERMANY;","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"gerardstevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-10-15"},{"lineNumber":17,"author":{"gitId":"gerardstevan"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-10-15"},{"lineNumber":18,"author":{"gitId":"gerardstevan"},"content":"import java.util.List;","lastModifiedDate":"2022-10-15"},{"lineNumber":19,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":20,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.AddressBook;","lastModifiedDate":"2022-10-15"},{"lineNumber":21,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.model.trip.Trip;","lastModifiedDate":"2022-10-15"},{"lineNumber":22,"author":{"gitId":"gerardstevan"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":23,"author":{"gitId":"Bacon-Strips"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"Bacon-Strips"},"content":" * A utility class containing a list of {@code Trip} objects to be used in tests.","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"Bacon-Strips"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"Bacon-Strips"},"content":"public class TypicalTrips {","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip MALAYSIA \u003d new TripBuilder().withTitle(\"Malaysia Trip\")","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"Bacon-Strips"},"content":"            .withDescription(\"Going around Malaysia.\")","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"Bacon-Strips"},"content":"            .withEvents(\"Night Market Tour\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip TAIWAN \u003d new TripBuilder().withTitle(\"Taiwan Trip\")","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"Bacon-Strips"},"content":"            .withEvents(\"Drink Bubble Tea\", \"Eat street snacks\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip JAPAN \u003d new TripBuilder().withTitle(\"Japan Trip\").withDescription(\"Going around Japan\")","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"Bacon-Strips"},"content":"            .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip THAILAND \u003d new TripBuilder().withTitle(\"Thailand Trip\")","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"Bacon-Strips"},"content":"            .withDescription(\"Going around Thailand\")","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"Bacon-Strips"},"content":"            .withEvents(\"Temple visit\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip EUROPE \u003d new TripBuilder().withTitle(\"Europe Trip\")","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"Bacon-Strips"},"content":"            .withDescription(\"Touring across Europe\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip MOON \u003d new TripBuilder().withTitle(\"Moon Exploration\")","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"Bacon-Strips"},"content":"            .withDescription(\"One small leap for man\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip MARS \u003d new TripBuilder().withTitle(\"Mars Exploration\").withDescription(\"Colonising Mars\")","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"Bacon-Strips"},"content":"           .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"Bacon-Strips"},"content":"    // Manually added","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip PLUTO \u003d new TripBuilder().withTitle(\"Pluto venture\").withDescription(\"Dwarf planet\")","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"            .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    public static final Trip SUN \u003d new TripBuilder().withTitle(\"Sun exploration\")","lastModifiedDate":"2022-10-12"},{"lineNumber":49,"author":{"gitId":"Bacon-Strips"},"content":"            .withDescription(\"A bit hot in here eh?\").build();","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"Bacon-Strips"},"content":"    // Manually added - Trip\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"gerardstevan"},"content":"    public static final Trip GERMANY \u003d new TripBuilder().withTitle(VALID_TITLE_GERMANY)","lastModifiedDate":"2022-10-15"},{"lineNumber":53,"author":{"gitId":"gerardstevan"},"content":"            .withDescription(VALID_DESCRIPTION_GERMANY).withEvents(VALID_EVENT_EATING).build();","lastModifiedDate":"2022-10-15"},{"lineNumber":54,"author":{"gitId":"gerardstevan"},"content":"    public static final Trip ANTARCTICA \u003d new TripBuilder().withTitle(VALID_TITLE_ANTARCTICA)","lastModifiedDate":"2022-10-15"},{"lineNumber":55,"author":{"gitId":"gerardstevan"},"content":"            .withDescription(VALID_DESCRIPTION_ANTARCTICA).withEvents(VALID_EVENT_SIGHTSEEING, VALID_EVENT_EATING)","lastModifiedDate":"2022-10-15"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"            .build();","lastModifiedDate":"2022-10-12"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":58,"author":{"gitId":"Bacon-Strips"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"Bacon-Strips"},"content":"    private TypicalTrips() {} // prevents instantiation","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"Bacon-Strips"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"Bacon-Strips"},"content":"     * Returns an {@code AddressBook} with all the typical trips.","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":65,"author":{"gitId":"Bacon-Strips"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"Bacon-Strips"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"Bacon-Strips"},"content":"        for (Trip trip : getTypicalTrips()) {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"Bacon-Strips"},"content":"            ab.addTrip(trip);","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"Bacon-Strips"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"Bacon-Strips"},"content":"        return ab;","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"Bacon-Strips"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"Bacon-Strips"},"content":"    public static List\u003cTrip\u003e getTypicalTrips() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"Bacon-Strips"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(MALAYSIA, TAIWAN, JAPAN, THAILAND, EUROPE, MARS, MOON));","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"Bacon-Strips"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"Bacon-Strips"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":17,"Bacon-Strips":59}},{"path":"src/test/java/seedu/travelr/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2022-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2022-10-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2022-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2022-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2022-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"-":34,"Bacon-Strips":1}},{"path":"src/test/java/seedu/travelr/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bacon-Strips"},"content":"package seedu.travelr.ui;","lastModifiedDate":"2022-10-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2022-10-15"},{"lineNumber":5,"author":{"gitId":"gerardstevan"},"content":"import static seedu.travelr.testutil.Assert.assertThrows;","lastModifiedDate":"2022-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2022-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2022-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2022-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-10-15"},{"lineNumber":14,"author":{"gitId":"gerardstevan"},"content":"import seedu.travelr.MainApp;","lastModifiedDate":"2022-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2022-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2022-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2022-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2022-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2022-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2022-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2022-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2022-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2022-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2022-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2022-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":47,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":48,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2022-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2022-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":54,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":56,"author":{"gitId":"Bacon-Strips"},"content":"    //Not working at the moment","lastModifiedDate":"2022-10-17"},{"lineNumber":57,"author":{"gitId":"Bacon-Strips"},"content":"    /*","lastModifiedDate":"2022-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2022-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2022-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2022-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2022-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":64,"author":{"gitId":"Bacon-Strips"},"content":"     */","lastModifiedDate":"2022-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2022-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2022-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2022-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2022-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2022-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2022-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2022-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2022-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2022-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2022-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2022-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2022-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2022-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2022-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2022-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2022-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2022-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2022-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2022-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2022-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2022-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2022-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2022-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2022-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2022-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2022-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2022-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2022-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2022-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2022-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-10-12"}],"authorContributionMap":{"gerardstevan":2,"-":111,"Bacon-Strips":7}}]
